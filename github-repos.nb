(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    205885,       4740]
NotebookOptionsPosition[    181007,       4451]
NotebookOutlinePosition[    181411,       4467]
CellTagsIndexPosition[    181368,       4464]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{
  "URLDownload", "[", 
   "\"\<https://img1.dxycdn.com/2020/0203/561/3394511511061134801-135.png\>\"\
", "]"}]}]], "Input",
 CellChangeTimes->{{3.7897415004221816`*^9, 3.7897415167403717`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"06120850-5f41-494b-8210-ede3bffba84b"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<PNG\>\"", ",", "\"\<XMP\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7897419028000064`*^9, 3.7897419237822556`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3697c5e1-45e9-4e8a-a8c2-78f7e8b0bfb9"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<PNG\>\"", ",", "\"\<Comments\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7897419028000064`*^9, 3.7897419664742794`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"bd66e8f5-b64c-4f25-b6f7-8b9657844443"],

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "\"\<AdministrativeDivision\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7897420922647867`*^9, 3.7897421013109074`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"fa3b2450-d1f7-4d8d-bc08-14c78eae08ac"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://github.com/login/oauth/authorize?client_id=arnoudbuzing&\
redirect_uri=https://www.wolfram.com\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7897449928871045`*^9, 3.789745021876433*^9}, {
  3.7897450922202277`*^9, 3.7897450953092628`*^9}, {3.789745166186065*^9, 
  3.7897451902073345`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"30411d89-a59c-45ec-baca-63b27fd9ce41"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"more", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"more", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"search", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"\"\<https://api.github.com/search/repositories?page=\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<&q=coronavirus\>\""}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"json", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"search", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"Length", "[", "json", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "json", "]"}], "=!=", "3"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}], ">", "0"}], ",", 
       "Null", ",", 
       RowBox[{"more", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7897455431293077`*^9, 3.7897455994161572`*^9}, {
  3.7897480915230665`*^9, 3.7897481293775277`*^9}, {3.7897481815960894`*^9, 
  3.7897481827621*^9}, {3.7897482440850425`*^9, 3.7897484190110197`*^9}, {
  3.7897484934288244`*^9, 3.789748519132101*^9}, {3.789748593422042*^9, 
  3.789748600745116*^9}, {3.78974874043098*^9, 3.789748770221323*^9}, {
  3.789748809238738*^9, 3.789748810988757*^9}, {3.7897488681444035`*^9, 
  3.7897489505752788`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Echo",
 CellChangeTimes->{
  3.789748961546398*^9},ExpressionUUID->"225732be-1f11-4e63-95c8-\
aefb43ca3ad2"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789748962271407*^9},ExpressionUUID->"62e1c339-4af0-43f6-aedf-\
bea818082bc6"],

Cell[BoxData["2"], "Echo",
 CellChangeTimes->{
  3.789748963293418*^9},ExpressionUUID->"a637791c-a8bf-4a42-b037-\
63edb5242d7d"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789748964362441*^9},ExpressionUUID->"dbb29320-f13c-495b-963d-\
465c22021b69"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7897489653744507`*^9},ExpressionUUID->"a70d2057-703d-4ff8-95c3-\
9a02e00bc346"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7897489663454623`*^9},ExpressionUUID->"226388a1-d787-4439-9720-\
e50f4a42aa2a"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.7897489673554726`*^9},ExpressionUUID->"445e63d5-714d-4e37-bbb3-\
b75d9ebeb9aa"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789748968389488*^9},ExpressionUUID->"4c552c51-9dcd-4547-b6c4-\
bd622f8977e8"],

Cell[BoxData["5"], "Echo",
 CellChangeTimes->{
  3.7897489693985205`*^9},ExpressionUUID->"bc676fdb-1774-4d90-894c-\
db50314f248a"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789748970498536*^9},ExpressionUUID->"159344f3-ebad-460b-bd90-\
645ccd276439"],

Cell[BoxData["6"], "Echo",
 CellChangeTimes->{
  3.789748971508543*^9},ExpressionUUID->"b723c7d5-9fd1-45f0-acfa-\
9012869ab17a"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7897489725275574`*^9},ExpressionUUID->"0b3b7c77-ac1a-484f-8136-\
83e84564c5ce"],

Cell[BoxData["7"], "Echo",
 CellChangeTimes->{
  3.7897489735375643`*^9},ExpressionUUID->"3c18b528-9953-4498-9e5a-\
4a9e38f6014f"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.78974897459958*^9},ExpressionUUID->"2cbc2200-7a71-4406-9217-30188f7cec9a"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.789748975607587*^9},ExpressionUUID->"c7858967-ef34-4341-8e9f-\
15fc57589a77"],

Cell[BoxData["2"], "Echo",
 CellChangeTimes->{
  3.789748975740589*^9},ExpressionUUID->"1dd9ec46-67c0-4e4f-bbb0-\
194a172dd785"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.789748975868591*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"245da730-e37d-4c8b-bbfe-4354c2bae71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Flatten", "[", "result", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897485526625276`*^9, 3.7897485780198717`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],

Cell[BoxData["210"], "Output",
 CellChangeTimes->{3.789748986976712*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"168696c3-607c-441d-a18d-ba743e8c93d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<name\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<name\>\"", "]"}]}], ",", 
        RowBox[{"\"\<owner\>\"", "\[Rule]", 
         RowBox[{
          RowBox[{"#", "[", "\"\<owner\>\"", "]"}], "[", "\"\<login\>\"", 
          "]"}]}]}], "|>"}], "&"}], ",", 
     RowBox[{"Flatten", "[", "result", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7897489993198404`*^9, 3.7897490224101105`*^9}, {
  3.7897490545694537`*^9, 3.7897490924458632`*^9}, {3.7897491775737777`*^9, 
  3.789749230686346*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "name" -> "2019-wuhan-coronavirus-data", "owner" -> "globalcitizen"], 
       Association["name" -> "ncov", "owner" -> "nextstrain"], 
       Association[
       "name" -> "Novel-Coronavirus-Updates", "owner" -> "839Studio"], 
       Association["name" -> "choropleth", "owner" -> "ncovis"], 
       Association[
       "name" -> "coronatracker-analytics", "owner" -> "docligot"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "AaronWard"], 
       Association["name" -> "coronavirus", "owner" -> "hysios"], 
       Association[
       "name" -> "2020-new-coronavirus-live-map", "owner" -> "lbj96347"], 
       Association["name" -> "coronavirus-map", "owner" -> "TIT-Lab"], 
       Association[
       "name" -> "Coronavirus-Epidemic-2019-nCov", "owner" -> "YiranJing"], 
       Association[
       "name" -> "wuhan-coronavirus-outbreak", "owner" -> "vilaca"], 
       Association["name" -> "artic-ncov2019", "owner" -> "artic-network"], 
       Association["name" -> "2019-nCoV", "owner" -> "antonlukin"], 
       Association["name" -> "coronavirus", "owner" -> "dreamerjackson"], 
       Association["name" -> "wuhan", "owner" -> "chrism0dwk"], 
       Association["name" -> "ncov_incubation", "owner" -> "HopkinsIDD"], 
       Association["name" -> "Anti_2019-ncoV", "owner" -> "MeoncStudio"], 
       Association["name" -> "transparent-info", "owner" -> "DnCov"], 
       Association["name" -> "coronavirus-stats", "owner" -> "alext234"], 
       Association[
       "name" -> "CoronaVirus-2019-nCoV-Live-Tracking", "owner" -> 
        "Kyald1412"], 
       Association["name" -> "corona-tracker", "owner" -> "iidx"], 
       Association["name" -> "cov", "owner" -> "nextstrain"], 
       Association["name" -> "corona", "owner" -> "Xetera"], 
       Association["name" -> "coronavirus-ds", "owner" -> "pdtyreus"], 
       Association["name" -> "Coronavirus", "owner" -> "instafluff"], 
       Association["name" -> "red-cross", "owner" -> "WeileiZeng"], 
       Association["name" -> "DonationChannel", "owner" -> "WuhanZhuRong"], 
       Association["name" -> "Wuhan-Coronavirus-API", "owner" -> "Laeyoung"], 
       Association["name" -> "coronavirus", "owner" -> "aitahtman"], 
       Association["name" -> "corona-bot", "owner" -> "the-robot"], 
       Association[
       "name" -> "ncov-data-fetcher", "owner" -> "jarekpelczynski"], 
       Association[
       "name" -> "Coronavirus-Dashboard", "owner" -> "avischiffmann"], 
       Association["name" -> "coronavirus_data", "owner" -> "sijiali57"], 
       Association["name" -> "corona", "owner" -> "kevinlu1248"], 
       Association[
       "name" -> "coronavirus-world-map", "owner" -> "labsletemps"], 
       Association["name" -> "Coronavirus", "owner" -> "xcv58"], 
       Association[
       "name" -> "SMART-CORONA_VIRUS_DETECTOR", "owner" -> 
        "JordanMicahBennett"], 
       Association["name" -> "2019-nCoV", "owner" -> "yitao94"], 
       Association[
       "name" -> "Coronavirus-Chrome-Extension", "owner" -> 
        "WebDevSimplified"], 
       Association["name" -> "coronavirus-2020", "owner" -> "fangohr"], 
       Association[
       "name" -> "Coronavirus-Estimation", "owner" -> "JunjieZhouwust"], 
       Association["name" -> "ncov2019", "owner" -> "etchorigin"], 
       Association[
       "name" -> "wolfram-coronavirus", "owner" -> "arnoudbuzing"], 
       Association["name" -> "corona", "owner" -> "kaiyz"], 
       Association[
       "name" -> "2020-novel-coronavirus", "owner" -> "Cyberist-Edgar"], 
       Association["name" -> "2020-new-coronavirus", "owner" -> "coddec"], 
       Association["name" -> "coronavirus", "owner" -> "mshyun"], 
       Association[
       "name" -> "viral-coronavirus", "owner" -> "viral-coronavirus-dev"], 
       Association[
       "name" -> "CoronavirusOdesseyRepo", "owner" -> "Sviper-07"], 
       Association["name" -> "viral-coronavirus", "owner" -> "muditham90"], 
       Association["name" -> "coronavirus-stat", "owner" -> "netqyq"], 
       Association["name" -> "viral-coronavirus", "owner" -> "mudiant"], 
       Association["name" -> "GameJame2020", "owner" -> "iPomme"], 
       Association[
       "name" -> "2020-new-coronavirus-info-crawler", "owner" -> "lbj96347"], 
       Association["name" -> "dash-coronavirus", "owner" -> "chunyeow"], 
       Association["name" -> "coronavirus", "owner" -> "mcodz"], 
       Association["name" -> "corona", "owner" -> "dranoer"], 
       Association["name" -> "coronavirus-info", "owner" -> "SpencerAung"], 
       Association["name" -> "2019-nCoV", "owner" -> "burgess"], 
       Association["name" -> "mc-2d", "owner" -> "ivan-iliev"], 
       Association[
       "name" -> "Coronavirus_quantity_prediction", "owner" -> "POGE0124"], 
       Association["name" -> "coronavirus", "owner" -> "joshuaferr1s"], 
       Association["name" -> "coronavirus-data-hq", "owner" -> "stephan227"], 
       Association["name" -> "lina.github.io", "owner" -> "lina"], 
       Association["name" -> "2019-ncov", "owner" -> "ricosmall"], 
       Association["name" -> "Wuhan2019", "owner" -> "kealyn"], 
       Association["name" -> "Coronavirus", "owner" -> "iuming"], 
       Association["name" -> "coronavirus-map", "owner" -> "piscium2010"], 
       Association["name" -> "situation-coronavirus", "owner" -> "aknow2"], 
       Association["name" -> "Coronavirus_Epidemic", "owner" -> "htso"], 
       Association[
       "name" -> "CoronaV_Challenge", "owner" -> "widscommunityorg"], 
       Association[
       "name" -> "Data-Visualisation--Coronavirus-confirmed-cases", "owner" -> 
        "kianweelee"], 
       Association["name" -> "2019ncov", "owner" -> "eragmus"], 
       Association[
       "name" -> "coronavirus-outbreak-log", "owner" -> "aliciawyy"], 
       Association["name" -> "cido", "owner" -> "biomedontology"], 
       Association[
       "name" -> "WuhanSeedingVsTransmission", "owner" -> "epiforecasts"], 
       Association["name" -> "CoronavirusVisualization", "owner" -> "sgfm"], 
       Association["name" -> "coronatracker", "owner" -> "RuyiLi"], 
       Association["name" -> "wuhan", "owner" -> "yx-z"], 
       Association["name" -> "NCP-Model", "owner" -> "SuperDiscovery"], 
       Association["name" -> "coronavirus-data-ETL", "owner" -> "JenQian"], 
       Association["name" -> "coronavirusAPI", "owner" -> "SWKeenan"], 
       Association["name" -> "wuhan_coronavirus", "owner" -> "itsyaoyu"], 
       Association["name" -> "epidemicsituation2020", "owner" -> "sanghy"], 
       Association["name" -> "Coronavirus", "owner" -> "QMHTMY"], 
       Association["name" -> "wuhancov", "owner" -> "audreyqyfu"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "ergodiclife"], 
       Association["name" -> "coronavirus_viz", "owner" -> "ljnicol"], 
       Association[
       "name" -> "Wuhan-Coronavirus-Even-Timeline", "owner" -> "ShuuTsubaki"], 
       Association["name" -> "coronavirus-mongodb", "owner" -> "MaBeuLux88"], 
       Association["name" -> "coronavirus", "owner" -> "lukas-jue"], 
       Association["name" -> "mers-analysis", "owner" -> "sdwfrost"], 
       Association["name" -> "coronavirusMap", "owner" -> "donpaul999"], 
       Association["name" -> "Wuhan_Coronavirus", "owner" -> "KezhiLi"], 
       Association["name" -> "Shanghai2020", "owner" -> "ykl124"], 
       Association[
       "name" -> "The-Rise-of-CoronaVirus", "owner" -> "elvinaqa"], 
       Association["name" -> "coronavirus", "owner" -> "xstarseed"], 
       Association[
       "name" -> "novel-coronavirus", "owner" -> "martinedoesgis"], 
       Association["name" -> "coronavirus", "owner" -> "choderalab"], 
       Association["name" -> "coronavirus", "owner" -> "JackJoeng"], 
       Association[
       "name" -> "CoronavirusTracking", "owner" -> "jubayer-hossain"], 
       Association["name" -> "CoronavirusTracker", "owner" -> "hriewe"], 
       Association[
       "name" -> "CoronavirusObserver", "owner" -> "SuriousCompany"], 
       Association["name" -> "Coronavirus", "owner" -> "blowsys"], 
       Association["name" -> "coronavirus", "owner" -> "yuhanbae06"], 
       Association["name" -> "coronavirus", "owner" -> "kaixin1976"], 
       Association["name" -> "Coronavirus", "owner" -> "notfree"], 
       Association["name" -> "Coronavirus", "owner" -> "Schukerz"], 
       Association["name" -> "coronavirus", "owner" -> "nurulc"], 
       Association["name" -> "2019-nCoV", "owner" -> "perlatex"], 
       Association["name" -> "wuhancv", "owner" -> "liu-zoe"], 
       Association["name" -> "coronavirusMonitor", "owner" -> "qingzma"], 
       Association["name" -> "CoronaTracker", "owner" -> "bahe007"], 
       Association["name" -> "2019-ncov", "owner" -> "FrankChen021"], 
       Association["name" -> "wuhan2020-oversea", "owner" -> "PengKuang"], 
       Association[
       "name" -> "infection_prediction", "owner" -> "liuyangly25"], 
       Association[
       "name" -> "2019-n-CoV-Virus-Dashboard", "owner" -> "PranavPable"], 
       Association["name" -> "true-coronavirus", "owner" -> "apex-stack"], 
       Association["name" -> "coronavirus", "owner" -> "SuperSt3ve"], 
       Association["name" -> "coronavirus", "owner" -> "MarGonz7"], 
       Association["name" -> "coronavirus", "owner" -> "cfshi"], 
       Association["name" -> "Coronavirus", "owner" -> "TheGodOfHuaji"], 
       Association["name" -> "coronavirus", "owner" -> "Dork3yyyy"], 
       Association["name" -> "Coronavirus", "owner" -> "joaogrosso"], 
       Association["name" -> "coronavirus", "owner" -> "itoic"], 
       Association["name" -> "coronavirus", "owner" -> "toyourheart163"], 
       Association["name" -> "Coronavirus", "owner" -> "finateautomata"], 
       Association["name" -> "coronavirus", "owner" -> "lprone"], 
       Association["name" -> "Coronavirus", "owner" -> "ozpv"], 
       Association[
       "name" -> "coronavirusRealTimeData", "owner" -> "dizzySummer"], 
       Association["name" -> "CoronavirusHackUCI", "owner" -> "flyffast"], 
       Association["name" -> "2019-nCoV_Donation", "owner" -> "leonluleonlu"], 
       Association["name" -> "data2019nCoV", "owner" -> "eebrown"], 
       Association["name" -> "CoronaVirus", "owner" -> "mot200286mot"], 
       Association["name" -> "coronavirus-neo4j", "owner" -> "bovinemagnet"], 
       Association["name" -> "nCoV-API", "owner" -> "kalzeo"], 
       Association["name" -> "corona_bot", "owner" -> "casperbrike"], 
       Association["name" -> "404-not-found", "owner" -> "bwanglzu"], 
       Association[
       "name" -> "Coronavirus-Wuhan-nCoV-2019", "owner" -> "ThinkGeo"], 
       Association["name" -> "coronavirus_dashboard", "owner" -> "nyem69"], 
       Association["name" -> "Toronto2020", "owner" -> "ncoronavirus"], 
       Association["name" -> "2019-nCoV", "owner" -> "donghoony1"], 
       Association["name" -> "nCoV-2019", "owner" -> "CoDeRgAnEsh"], 
       Association["name" -> "coronavirus-crawling", "owner" -> "chunyeow"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "JakeJing"], 
       Association["name" -> "2019-nCov", "owner" -> "sungml92"], 
       Association["name" -> "lstm4ncor", "owner" -> "changbing2019"], 
       Association["name" -> "coronavirus", "owner" -> "nickofc"], 
       Association["name" -> "coronavirus", "owner" -> "wonyoungchoiseoul"], 
       Association["name" -> "coronavirus", "owner" -> "teddylun"], 
       Association["name" -> "Coronavirus", "owner" -> "alamjane"], 
       Association["name" -> "CoronaVirus", "owner" -> "johnmelodyme"], 
       Association["name" -> "coronaVirus", "owner" -> "themarcusaurelius"], 
       Association[
       "name" -> "appex-04-coronavirus", "owner" -> "sta199-sp20-002"], 
       Association["name" -> "CoronaVirus-MD", "owner" -> "TheCode-Jedi"], 
       Association["name" -> "DnCov", "owner" -> "DnCov"], 
       Association["name" -> "coronavirus", "owner" -> "yarfer"], 
       Association["name" -> "Coronavirus", "owner" -> "Yuriyama"], 
       Association["name" -> "Coronavirus", "owner" -> "GHumorBS"], 
       Association["name" -> "coronavirus", "owner" -> "colortail"], 
       Association["name" -> "coronavirus", "owner" -> "HardWorkerIlya"], 
       Association["name" -> "CoronaVirus", "owner" -> "Dajnowicz"], 
       Association["name" -> "coronavirus", "owner" -> "escudero"], 
       Association["name" -> "CoronaVirus", "owner" -> "NarekSag"], 
       Association["name" -> "coronavirus", "owner" -> "henry123i"], 
       Association["name" -> "coronavirus", "owner" -> "diehard04"], 
       Association["name" -> "coronavirusmap", "owner" -> "daniel2231"], 
       Association[
       "name" -> "CoronavirusWebsiteTracker", "owner" -> "kalzeo"], 
       Association[
       "name" -> "coronavirustracker", "owner" -> "guptaekarigar"], 
       Association["name" -> "2019-nCoV_Notes", "owner" -> "nnikniL"], 
       Association["name" -> "CoronaVirus", "owner" -> "Ruchit007"], 
       Association[
       "name" -> "Coronavirus_Bayseian_Modelling", "owner" -> "Koohoko"], 
       Association["name" -> "coronavirusanalysis", "owner" -> "PratirupG"], 
       Association["name" -> "coronavirustracker", "owner" -> "nerocui"], 
       Association["name" -> "nCoV", "owner" -> "EthanGeekFan"], 
       Association["name" -> "novel_coronavirus", "owner" -> "WooilJeong"], 
       Association["name" -> "ncov-api-k8s", "owner" -> "damonYuan"], 
       Association[
       "name" -> "propagation-model-for-2019-nCov", "owner" -> "davy868"], 
       Association["name" -> "nCoV-2019", "owner" -> "hernanmd"], 
       Association[
       "name" -> "novel-coronavirus-exploratory-analysis", "owner" -> 
        "aejsong"], 
       Association["name" -> "coronavirus", "owner" -> "Gazerbeamco"], 
       Association["name" -> "-coronavirus-", "owner" -> "143034"], 
       Association["name" -> "coronavirus", "owner" -> "karolkolodziej"], 
       Association["name" -> "coronaviruslamp", "owner" -> "larsgimse"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "joshualeung"], 
       Association[
       "name" -> "coronavirus-seasonality", "owner" -> "ctedijanto"], 
       Association["name" -> "Coronavirus_ios", "owner" -> "jwktls"], 
       Association["name" -> "coronavirus-stats", "owner" -> "optoisolated"], 
       Association[
       "name" -> "coronavirus-virus", "owner" -> "mrmattwright-inc"], 
       Association["name" -> "coronavirus-website", "owner" -> "maksim72"], 
       Association[
       "name" -> "coronavirus-detection", "owner" -> "PatornJantara"], 
       Association["name" -> "gmod_coronavirus", "owner" -> "ExtReMLapin"], 
       Association["name" -> "coronavirus-api", "owner" -> "catofsof"], 
       Association["name" -> "Anti-2019-nCoV", "owner" -> "Sun2yKid"], 
       Association[
       "name" -> "coronavirus-infographics", "owner" -> "epignatelli"], 
       Association[
       "name" -> "Coronavirus-things", "owner" -> "developers-arm"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "HesterLim"], 
       Association["name" -> "coronavirus-bot", "owner" -> "lichader"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "yongjun21"], 
       Association[
       "name" -> "coronavirus-protect", "owner" -> "android-apps-apk"], 
       Association["name" -> "wuhan-virus-paper", "owner" -> "edwardcooper"], 
       Association["name" -> "Corona-Monitor", "owner" -> "thiennv2896"], 
       Association[
       "name" -> "LSTM4Coronavirusprediction", "owner" -> "changbing2019"], 
       Association["name" -> "coronavirus_map", "owner" -> "Olivine-Ryo"], 
       Association["name" -> "coronavirus_project", "owner" -> "nancyyanyu"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "A-Yifeng"], 
       Association["name" -> "Coronavirus-Map", "owner" -> "imsoncod"], 
       Association["name" -> "coronavirus_data", "owner" -> "nyem69"], 
       Association[
       "name" -> "coronavirus_genbank", "owner" -> "smorfopoulou"], 
       Association[
       "name" -> "coronavirus_gizmo", "owner" -> "andrewadiletta"]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
            "owner" -> TypeSystem`PackageScope`AtomShape[
             153.60000000000002`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 210], "Meta" -> 
     Association["ID" -> 34054987894415], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[268.80000000000007`], 
            "owner" -> TypeSystem`PackageScope`AtomShape[
             153.60000000000002`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 210], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     210, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][{
                    All, "name"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 518052063][{All, "name"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["owner", 
                    Style[
                    "owner", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][{
                    All, "owner"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 518052063][{All, "owner"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2019-wuhan-coronavirus-data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["globalcitizen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{1, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nextstrain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{2, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Novel-Coronavirus-Updates", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["839Studio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{3, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["choropleth", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ncovis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{4, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronatracker-analytics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["docligot", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{5, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-analysis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AaronWard", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{6, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["hysios", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{7, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-new-coronavirus-live-map", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lbj96347", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{8, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-map", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{9, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TIT-Lab", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{9, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Coronavirus-Epidemic-2019-nCov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{10, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["YiranJing", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{10, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan-coronavirus-outbreak", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{11, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["vilaca", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{11, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["artic-ncov2019", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{12, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["artic-network", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{12, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-nCoV", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{13, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["antonlukin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{13, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{14, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dreamerjackson", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{14, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{15, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["chrism0dwk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{15, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov_incubation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{16, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HopkinsIDD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{16, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Anti_2019-ncoV", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{17, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MeoncStudio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{17, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["transparent-info", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{18, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DnCov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{18, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-stats", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{19, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alext234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{19, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CoronaVirus-2019-nCoV-Live-Tracking", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{20, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Kyald1412", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               518052063][{20, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 210, 1], {1, 210 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 210, 1], {1, 210 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    210, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    210, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 210, 1], {1, 210 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 210, 1], {1, 210 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                518052063, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 518052063]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[518052063][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[518052063][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 518052063; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{475., {277., 283.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.789749223375264*^9, 3.789749231476348*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"bdbd75ed-ce8d-4191-bd67-93a2414e846b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "=", 
   RowBox[{"ImportByteArray", "[", 
    RowBox[{
     RowBox[{"search", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
     "\"\<RawJSON\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
   3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
   3.789745755087923*^9}, {3.7897458756102743`*^9, 3.7897458783683057`*^9}, {
   3.789748097676133*^9, 3.789748098265136*^9}, 3.7897481954432373`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"cc9ca28d-6356-4973-bfc6-5451a28fdce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
   3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
   3.789745755087923*^9}, {3.7897458756102743`*^9, 3.7897458783683057`*^9}, {
   3.789748097676133*^9, 3.789748098265136*^9}, 3.7897481954432373`*^9, {
   3.7897482527381344`*^9, 3.7897482537221446`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"6fb701e1-2f52-4d7f-9268-c746954bbabf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gettags", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"repo", ",", "owner", ",", "url", ",", "tags"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", ".1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"repo", "=", 
      RowBox[{"assoc", "[", "\"\<name\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"owner", "=", 
      RowBox[{"assoc", "[", "\"\<owner\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"url", "=", 
       RowBox[{"URL", "[", 
        RowBox[{
        "\"\<https://api.github.com/repos/\>\"", "<>", "owner", "<>", 
         "\"\</\>\"", "<>", "repo", "<>", "\"\</topics\>\""}], "]"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"HTTPRequest", "[", 
        RowBox[{"url", ",", 
         RowBox[{"<|", 
          RowBox[{"\"\<Headers\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "\"\<Accept\>\"", "\[Rule]", 
              "\"\<application/vnd.github.mercy-preview+json\>\""}], ",", 
             RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
              RowBox[{"\"\<token \>\"", "<>", "token"}]}]}], "}"}]}], 
          "|>"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"tags", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<owner\>\"", "\[Rule]", "owner"}], ",", 
       RowBox[{"\"\<repo\>\"", "\[Rule]", "repo"}], ",", 
       RowBox[{"\"\<tags\>\"", "\[Rule]", 
        RowBox[{"tags", "[", "\"\<names\>\"", "]"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
  3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
  3.789745755087923*^9}, {3.7897458756102743`*^9, 3.789745963865261*^9}, {
  3.789746016155851*^9, 3.789746057913308*^9}, {3.789746098485759*^9, 
  3.7897461562023993`*^9}, {3.789746264548639*^9, 3.7897462690666924`*^9}, {
  3.7897465392139564`*^9, 3.7897465583641624`*^9}, {3.78974660906273*^9, 
  3.7897466263809147`*^9}, {3.7897467247360544`*^9, 3.7897467603974495`*^9}, {
  3.789749255130604*^9, 3.7897492987731085`*^9}, {3.7897493931301184`*^9, 
  3.789749413952345*^9}, {3.7897495212584887`*^9, 3.789749543911763*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"Take", "[", 
    RowBox[{"ds", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749445352681*^9, 3.7897494506647367`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       $CellContext`f[
        Association[
        "name" -> "2019-wuhan-coronavirus-data", "owner" -> "globalcitizen"]], 
       $CellContext`f[
        Association["name" -> "ncov", "owner" -> "nextstrain"]], 
       $CellContext`f[
        Association[
        "name" -> "Novel-Coronavirus-Updates", "owner" -> "839Studio"]]}, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> 
     Association["ID" -> 70815612981099], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 3, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"name\"", "\[Rule]", 
                    "\"2019-wuhan-coronavirus-data\""}], ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"globalcitizen\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"name\"", "\[Rule]", "\"ncov\""}], ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"nextstrain\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"name\"", "\[Rule]", "\"Novel-Coronavirus-Updates\""}], 
                    ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"839Studio\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1078712005, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1078712005][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1078712005][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1078712005; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{521., {54., 60.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7897494511127377`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"33282a92-f78e-486d-b23f-1d6b0e7403d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"gettags", ",", "ds"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746129877107*^9, 3.789746144636273*^9}, {
  3.789746275245758*^9, 3.7897462776657853`*^9}, {3.7897464398548174`*^9, 
  3.7897464400038204`*^9}, {3.78974648410369*^9, 3.789746484225689*^9}, {
  3.789746572735321*^9, 3.7897465733473344`*^9}, {3.7897493112082415`*^9, 
  3.789749316870306*^9}, {3.7897494287705035`*^9, 3.7897494841110954`*^9}, {
  3.7897495384607058`*^9, 3.789749552142856*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/globalcitizen/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749557186764*^9},ExpressionUUID->"31d4b4ed-a749-4df2-8bfa-\
2749d60729a4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495574627695`*^9},ExpressionUUID->"975cbeb5-aed2-4ed7-862b-\
2fa11508273e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/839Studio/Novel-Coronavirus-Updates/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495577667727`*^9},ExpressionUUID->"82351582-7197-4303-8e6e-\
5f0e9c3ba26e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ncovis/choropleth/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495580317802`*^9},ExpressionUUID->"6836e17c-9c9c-4f14-aad3-\
7421e152b38b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/docligot/coronatracker-analytics/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749558299779*^9},ExpressionUUID->"8df2bb8d-49fa-4614-a61b-\
7e03785953be"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AaronWard/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495585707827`*^9},ExpressionUUID->"aa0e63a1-321a-4262-a53c-\
c95462f4163a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hysios/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495588807864`*^9},ExpressionUUID->"7713781a-5b5f-4568-afd6-\
193fdbbd7488"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-live-map/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495591567883`*^9},ExpressionUUID->"753dcab3-88d2-4b40-99cb-\
fe37f1bde076"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TIT-Lab/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495594207954`*^9},ExpressionUUID->"71ee02ee-956f-4f6e-b45d-\
bbcc5606ba33"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/YiranJing/Coronavirus-Epidemic-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749559692793*^9},ExpressionUUID->"203b3a09-5bc3-4de8-81f5-\
88974c97fe74"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/vilaca/wuhan-coronavirus-outbreak/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749559946821*^9},ExpressionUUID->"90676189-4fa9-467d-85f6-\
aab00ddcd73c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/artic-network/artic-ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495602198257`*^9},ExpressionUUID->"dfcf6877-78e7-4579-8b0e-\
d2ea6d08b546"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/antonlukin/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749560527829*^9},ExpressionUUID->"4c39a758-70e5-46a9-9245-\
dd23b38fa311"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dreamerjackson/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749560815832*^9},ExpressionUUID->"d3eb1793-4906-4666-9703-\
e2e0c5ca7683"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/chrism0dwk/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749561091835*^9},ExpressionUUID->"5e4f428e-cd04-48b4-ac06-\
3602bad7747c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HopkinsIDD/ncov_incubation/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749561368842*^9},ExpressionUUID->"ddf31367-e5dc-4f31-9a7c-\
ea24739809ad"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MeoncStudio/Anti_2019-ncoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749561625841*^9},ExpressionUUID->"15600303-fe55-410b-bc85-\
7557fd657449"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DnCov/transparent-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749561884844*^9},ExpressionUUID->"2fbed93a-79e4-4aa0-9eff-\
8cab8d194637"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/alext234/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495621428466`*^9},ExpressionUUID->"7b590b4d-ee4a-4eb4-a8d9-\
5c7c79e72edc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Kyald1412/CoronaVirus-2019-nCoV-Live-\
Tracking/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749562407853*^9},ExpressionUUID->"5a2b92fc-0dbd-45e8-ba22-\
d8ed307c0f83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iidx/corona-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495626828527`*^9},ExpressionUUID->"6d8da5fa-5ca9-4300-911a-\
6500d78d807c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/cov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495629538536`*^9},ExpressionUUID->"8edd9278-7611-4dce-bcbc-\
34e3fca00272"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Xetera/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495632158613`*^9},ExpressionUUID->"87a8c05c-98aa-40db-8a6d-\
b296de3549c5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/pdtyreus/coronavirus-ds/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495634748645`*^9},ExpressionUUID->"97310bd0-0e12-4892-b211-\
d5bf8231007f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/instafluff/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495637238655`*^9},ExpressionUUID->"f8d685de-eb09-4cf9-8808-\
6cf7de62401b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/WeileiZeng/red-cross/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974956398787*^9},ExpressionUUID->"ffb73afb-81cf-48f8-9265-16a071d37dfc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WuhanZhuRong/DonationChannel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495642688704`*^9},ExpressionUUID->"dc3b9a42-612a-4127-ab85-\
c6a703b18e0a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Laeyoung/Wuhan-Coronavirus-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495646188745`*^9},ExpressionUUID->"18e25b78-d012-42c2-b322-\
dd10fca6ef1b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aitahtman/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495648718796`*^9},ExpressionUUID->"0f160cdf-0138-47c4-8a06-\
bf16f7dad86d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/the-robot/corona-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749565132882*^9},ExpressionUUID->"78591af4-2f94-4a40-b0a6-\
3c146b8dc999"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jarekpelczynski/ncov-data-fetcher/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495653908825`*^9},ExpressionUUID->"e6bbd0de-a001-4628-88ea-\
d8936e209204"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/avischiffmann/Coronavirus-Dashboard/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495656688843`*^9},ExpressionUUID->"8eccbfeb-7083-4844-8a48-\
b3aaa743a15a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sijiali57/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749565918891*^9},ExpressionUUID->"7e4e5a97-96ad-42af-95f8-\
e76e77a401e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kevinlu1248/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974956617089*^9},ExpressionUUID->"92dd0457-4410-426e-bdcb-6e4af8eead10"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/labsletemps/coronavirus-world-map/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495664338923`*^9},ExpressionUUID->"b47ab8e1-f1c3-4a27-8030-\
d41383ab5253"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/xcv58/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495668978972`*^9},ExpressionUUID->"15fefc75-9736-4fcd-832d-\
8a7d0d4f2ac9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JordanMicahBennett/SMART-CORONA_VIRUS_\
DETECTOR/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495672368994`*^9},ExpressionUUID->"8ba40655-ba87-4fd6-b501-\
3a3d19b3e4f6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yitao94/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495674979076`*^9},ExpressionUUID->"c8cd670f-d900-4fcf-a4ed-\
1bfd7775df9a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WebDevSimplified/Coronavirus-Chrome-\
Extension/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495677569075`*^9},ExpressionUUID->"7da77e95-a9b8-42e5-856b-\
a63c5d6eb905"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/fangohr/coronavirus-2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495680219264`*^9},ExpressionUUID->"51f1d5cd-d81d-4a11-8d46-\
43b5a012bf39"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JunjieZhouwust/Coronavirus-Estimation/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495682939377`*^9},ExpressionUUID->"059f4fa5-2f1a-4ab7-b493-\
ecd303baf381"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/etchorigin/ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495685719843`*^9},ExpressionUUID->"f868634e-f160-4a59-bb49-\
aa65dbf2aebf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/arnoudbuzing/wolfram-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749568855*^9},ExpressionUUID->"e3d61bab-ae32-4583-b7b3-b7ab84e1e270"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kaiyz/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495691280146`*^9},ExpressionUUID->"a4b04b24-6ed6-432f-b373-\
1cf945cba065"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Cyberist-Edgar/2020-novel-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495693820305`*^9},ExpressionUUID->"89897292-c690-4485-b6df-\
44e0a8507e72"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/coddec/2020-new-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495696550446`*^9},ExpressionUUID->"1f4e5f29-0c8e-4558-a9ac-\
41aa1a251862"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mshyun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749569930084*^9},ExpressionUUID->"9aba9bc3-25e4-443f-a3be-\
2e6300aac79a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/viral-coronavirus-dev/viral-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749570459113*^9},ExpressionUUID->"609ef791-b92a-4fa4-b965-\
4145edf80313"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sviper-07/CoronavirusOdesseyRepo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749570763132*^9},ExpressionUUID->"604db1a5-4bdb-49be-8641-\
620b029b3acd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/muditham90/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495710111475`*^9},ExpressionUUID->"96910825-22c9-40b3-9365-\
ebe652eb5301"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/netqyq/coronavirus-stat/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495712911606`*^9},ExpressionUUID->"f85f7e65-8077-471e-b6b2-\
be472c0d4873"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mudiant/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749571589178*^9},ExpressionUUID->"cb1004ca-3389-48d0-a142-\
35aa8568642a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iPomme/GameJame2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495718391943`*^9},ExpressionUUID->"4dbd407c-239c-4692-890d-\
36349a2127bd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-info-crawler/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749572098211*^9},ExpressionUUID->"6d7ad61a-00f5-4219-aeba-\
d492b66b471e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/dash-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749572365223*^9},ExpressionUUID->"54056610-7181-4149-92bc-\
0169400d098c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mcodz/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749572638242*^9},ExpressionUUID->"1122c6b7-4f78-42d3-b1fa-\
f52b66817238"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/dranoer/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495729022574`*^9},ExpressionUUID->"e41c0ecf-9541-4831-b61c-\
f8a8f395a56a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SpencerAung/coronavirus-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749573175271*^9},ExpressionUUID->"f1403983-d80f-40c4-aba0-\
a66c1a0002de"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/burgess/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495734382863`*^9},ExpressionUUID->"fccd60b0-7f99-49fd-859c-\
3e2a6fd2a5c1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ivan-iliev/mc-2d/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495736963015`*^9},ExpressionUUID->"4b901841-b5a4-4198-909f-\
d69312ca97c5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/POGE0124/Coronavirus_quantity_prediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749573951317*^9},ExpressionUUID->"3af705be-b54c-45f4-810a-\
f083bdf89b16"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshuaferr1s/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749574208333*^9},ExpressionUUID->"cd81d5db-80e3-48a6-bba5-\
a32f712a9007"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/stephan227/coronavirus-data-hq/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749574491352*^9},ExpressionUUID->"7b3c5244-d409-4275-9f3a-\
bc0cd0d492d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lina/lina.github.io/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749574748361*^9},ExpressionUUID->"7e75941a-baa7-4c9d-a7d5-\
e0ffb50072bb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ricosmall/2019-ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749575027381*^9},ExpressionUUID->"cbbdbbab-2ffb-4039-94dd-\
c53c31c1024a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kealyn/Wuhan2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495752803984`*^9},ExpressionUUID->"dbad9af4-07d7-4634-ae2e-\
3e464dc0e4b5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iuming/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749575755424*^9},ExpressionUUID->"89d66dba-4f79-47c4-b597-\
6293dd21a27a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/piscium2010/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495760094414`*^9},ExpressionUUID->"6a72772c-0b7c-40fe-8694-\
60ed9243e6fe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aknow2/situation-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495763554583`*^9},ExpressionUUID->"577c191f-e519-433a-aacf-\
f1a3782a2634"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/htso/Coronavirus_Epidemic/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495766104765`*^9},ExpressionUUID->"363345b3-149b-45cc-9146-\
e8463ca0fd7b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/widscommunityorg/CoronaV_Challenge/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749576866519*^9},ExpressionUUID->"3d2df5ee-bdbf-432d-b00a-\
715c578580a4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kianweelee/Data-Visualisation--Coronavirus-\
confirmed-cases/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495771315613`*^9},ExpressionUUID->"4da6f123-6343-4691-822f-\
179da17d67dd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eragmus/2019ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495774695797`*^9},ExpressionUUID->"e417dab9-dbfa-48c4-a98e-\
c7eb06937bf6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aliciawyy/coronavirus-outbreak-log/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495777365932`*^9},ExpressionUUID->"f419be32-1e83-4e0a-97d8-\
dd97577e4703"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/biomedontology/cido/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749577990612*^9},ExpressionUUID->"d415ee89-fa57-437a-a384-\
1a3b80fe7498"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epiforecasts/WuhanSeedingVsTransmission/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495782936254`*^9},ExpressionUUID->"c89e2bc5-444f-4591-ad0c-\
959a455558d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sgfm/CoronavirusVisualization/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749578596648*^9},ExpressionUUID->"dc389474-58a7-43bf-9747-\
1c37732d4f01"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/RuyiLi/coronatracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495788656635`*^9},ExpressionUUID->"580ae650-20b5-4847-a99c-\
749ece77ee30"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yx-z/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749579114703*^9},ExpressionUUID->"6999f49d-e8c6-4885-a4a2-\
ba47b8665c8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperDiscovery/NCP-Model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495793737187`*^9},ExpressionUUID->"f0fac809-b193-40b1-8c73-\
1a55c17aeb94"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JenQian/coronavirus-data-ETL/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974957962673*^9},ExpressionUUID->"dd74fa93-1f34-4c8f-8a55-edaa17a504cb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SWKeenan/coronavirusAPI/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495798827686`*^9},ExpressionUUID->"e690ab72-2e22-4bf3-b1c2-\
a6d2a7b0345b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/itsyaoyu/wuhan_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495801387863`*^9},ExpressionUUID->"2c4d3ab5-2e4d-4196-b5f4-\
0f0c8d9023ae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sanghy/epidemicsituation2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495803928003`*^9},ExpressionUUID->"468a966c-0ea4-4872-992c-\
7200f30ce24c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/QMHTMY/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495806468115`*^9},ExpressionUUID->"d5145e87-5234-47df-9527-\
febeaec014cc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/audreyqyfu/wuhancov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495809148273`*^9},ExpressionUUID->"7c9c8733-49e5-408d-afc1-\
5f04bfa1d52d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ergodiclife/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495811888437`*^9},ExpressionUUID->"965d9b12-43cb-4e55-8193-\
fa77e101b73d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ljnicol/coronavirus_viz/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749581443858*^9},ExpressionUUID->"ab52aa4e-d231-4281-9863-\
256ebd6b6910"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ShuuTsubaki/Wuhan-Coronavirus-Even-\
Timeline/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495817528768`*^9},ExpressionUUID->"a21e6a77-ebc6-4b26-8969-\
8024421e7ddf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MaBeuLux88/coronavirus-mongodb/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495820248966`*^9},ExpressionUUID->"37057e0d-fd47-4b25-aeac-\
60fb82c5a97b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lukas-jue/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749582295909*^9},ExpressionUUID->"f8c52fc9-8c8c-4ed0-ab3e-\
d9f06be5ca47"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sdwfrost/mers-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495825519276`*^9},ExpressionUUID->"7d5305e9-3d12-4999-953b-\
e2c4539f87f3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/donpaul999/coronavirusMap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495828989487`*^9},ExpressionUUID->"c65d074e-f512-41ea-a1c4-\
5d2940069069"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/KezhiLi/Wuhan_Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749583169964*^9},ExpressionUUID->"3d3c5e0c-26b3-420a-a509-\
76cbc44966b4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ykl124/Shanghai2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495834539785`*^9},ExpressionUUID->"f7494871-b4b5-4ec5-90bd-\
bc0508e0b8b6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/elvinaqa/The-Rise-of-CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749583728998*^9},ExpressionUUID->"a39b6222-7712-4592-bcee-\
54e91895abcf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/xstarseed/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495839950356`*^9},ExpressionUUID->"c4593997-0b9f-4775-9ab3-\
917f8b4bcc09"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/martinedoesgis/novel-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749584286049*^9},ExpressionUUID->"bb156c4a-67fe-4a3a-a1b2-\
1a9538323185"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/choderalab/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495845460653`*^9},ExpressionUUID->"566ac1c7-a179-4c1a-8225-\
05e4cf5b3809"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JackJoeng/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749584833085*^9},ExpressionUUID->"74ecdfea-2772-4cd2-8338-\
554166b54f83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jubayer-hossain/CoronavirusTracking/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749585104097*^9},ExpressionUUID->"78043fa8-8a0a-4eb7-8e2e-\
2da135739583"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/hriewe/CoronavirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495853771133`*^9},ExpressionUUID->"20113a14-0e3a-47d3-9bbc-\
5a19481a7737"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuriousCompany/CoronavirusObserver/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749585646129*^9},ExpressionUUID->"8fa8eccb-e223-47a4-97cd-\
1ae5dbf22758"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/blowsys/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495859231486`*^9},ExpressionUUID->"dfca7cb7-4fa9-46bb-b9a1-\
07a259f68378"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuhanbae06/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749586243164*^9},ExpressionUUID->"c4f73526-b419-4fe7-880e-\
64601695fab3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kaixin1976/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749586511182*^9},ExpressionUUID->"b6f58874-2d92-49e2-ad2b-\
48a43d9f5a36"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/notfree/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495868082237`*^9},ExpressionUUID->"06340f94-3e60-4e7b-a6b7-\
d424ba6e7fc8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Schukerz/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495870582404`*^9},ExpressionUUID->"72fd487c-be58-452d-9c45-\
948ff008d156"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nurulc/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749587326252*^9},ExpressionUUID->"53e7a74b-5592-44a5-bc63-\
825210f12138"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/perlatex/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495875792713`*^9},ExpressionUUID->"05746ecc-4ccd-4794-85e2-\
232d12b7caa1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/liu-zoe/wuhancv/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495878282857`*^9},ExpressionUUID->"7d44a11c-aa79-4e56-8f05-\
7aa4aee36581"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/qingzma/coronavirusMonitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495881012974`*^9},ExpressionUUID->"5017022f-0f8d-4156-8813-\
8829b438953a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bahe007/CoronaTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495883583384`*^9},ExpressionUUID->"04cb90c9-3ce0-4d02-ab1a-\
644f4df79dbe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/FrankChen021/2019-ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749588619354*^9},ExpressionUUID->"6c7dab6a-54d2-41ab-b1c8-\
3226c649bc51"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PengKuang/wuhan2020-oversea/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495888853655`*^9},ExpressionUUID->"efa77e80-04b9-4152-85c7-\
3bcb620c4958"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/liuyangly25/infection_prediction/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749589134384*^9},ExpressionUUID->"ef8866a6-86c3-42ba-8f16-\
2208399e564a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PranavPable/2019-n-CoV-Virus-Dashboard/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749589394399*^9},ExpressionUUID->"05c7a04a-a961-4704-9be7-\
a3249624439e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/apex-stack/true-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495896454077`*^9},ExpressionUUID->"1457dd9f-ee6f-43e8-ac60-\
57ede2985c42"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperSt3ve/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495898974285`*^9},ExpressionUUID->"223cd908-c55f-4d53-9a89-\
baa888794a26"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/MarGonz7/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495901564445`*^9},ExpressionUUID->"1f29e01d-9bd7-464b-a6ea-\
230f3af26a9f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/cfshi/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749590414459*^9},ExpressionUUID->"6854c8ba-d9f8-46ba-bcff-\
2af32aa733fa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheGodOfHuaji/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749590670474*^9},ExpressionUUID->"356e1203-d7d7-4557-a1e2-\
8026452be291"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dork3yyyy/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749590954491*^9},ExpressionUUID->"821b59e9-0b49-4db4-832a-\
82877ed8d3cb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joaogrosso/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495912335052`*^9},ExpressionUUID->"931ee7e1-e15c-4a14-9d41-\
299e7272ebfc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/itoic/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495914875193`*^9},ExpressionUUID->"80bbe5ad-393a-4193-92bf-\
80654f2488e3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/toyourheart163/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495917595396`*^9},ExpressionUUID->"4b0476ae-edfd-457b-a263-\
9f26c650bdca"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/finateautomata/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974959201755*^9},ExpressionUUID->"e1af5b37-aa16-43e1-a881-64abed0adc45"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lprone/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495922845836`*^9},ExpressionUUID->"89531e5a-7a18-44b7-b5da-\
8d42b7328008"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ozpv/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495925375967`*^9},ExpressionUUID->"603db0ca-e1f0-4634-b652-\
6fe8758f590f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dizzySummer/coronavirusRealTimeData/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749592806613*^9},ExpressionUUID->"57cb4396-fd50-4491-ae2e-\
2659bb567dc3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/flyffast/CoronavirusHackUCI/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495930946307`*^9},ExpressionUUID->"743c9559-377e-45cf-9911-\
8fd36e71b800"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/leonluleonlu/2019-nCoV_Donation/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495933546486`*^9},ExpressionUUID->"cd3cc1c3-b65f-4e28-8f8f-\
50c0b634822c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eebrown/data2019nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495936176605`*^9},ExpressionUUID->"e2f8fadd-e64a-41b9-b222-\
24ae52593995"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mot200286mot/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495939286795`*^9},ExpressionUUID->"d523331c-8169-4d19-8e2d-\
bcfe7cfccc10"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bovinemagnet/coronavirus-neo4j/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495941966944`*^9},ExpressionUUID->"c4efe130-43cd-4103-b81d-\
6eea18603faf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kalzeo/nCoV-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749594450713*^9},ExpressionUUID->"d1b6ae37-0d21-472d-b038-\
07356890d85f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/casperbrike/corona_bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495947037277`*^9},ExpressionUUID->"cbc95460-3f6b-4f2a-9271-\
5b3bf41054ad"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bwanglzu/404-not-found/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495949617395`*^9},ExpressionUUID->"8f7bde22-3b28-44b1-ac11-\
e2f6a908e645"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ThinkGeo/Coronavirus-Wuhan-nCoV-2019/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495952217584`*^9},ExpressionUUID->"fb5ce423-5473-4d99-a6cb-\
2562d5b4c4cb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_dashboard/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495954897704`*^9},ExpressionUUID->"54224fd1-3ab5-44ee-b1e9-\
07e9783c2687"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ncoronavirus/Toronto2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495957467856`*^9},ExpressionUUID->"9550e11d-c821-4b1c-bc15-\
e1de006988f4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/donghoony1/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749596014803*^9},ExpressionUUID->"0d8ce9e3-3d1c-4b51-bbf8-\
bfea000bc644"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoDeRgAnEsh/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495962898183`*^9},ExpressionUUID->"9eb41b1c-ef3d-41fb-8c37-\
67f9cdacf12f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/coronavirus-crawling/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749596565853*^9},ExpressionUUID->"29e4fd58-d955-4279-b892-\
45ea7a826c8e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JakeJing/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749596835869*^9},ExpressionUUID->"bbaf28c7-d161-431d-a971-\
13e10c66cf2c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/sungml92/2019-nCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495971038847`*^9},ExpressionUUID->"c06ecfa1-4722-40d8-abe1-\
5deb418fd7fa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/lstm4ncor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495973638997`*^9},ExpressionUUID->"e8ac999f-b4c8-47ad-b0c0-\
061183c91727"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nickofc/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495976259155`*^9},ExpressionUUID->"172e5367-a061-41a0-9f5a-\
c5e8d6ecc651"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/wonyoungchoiseoul/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974959788293*^9},ExpressionUUID->"85818d6b-69d6-4cd2-92e6-cc27e690b382"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/teddylun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974959814995*^9},ExpressionUUID->"07a2e469-e0a4-4cc1-b6ab-e201f61490cc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/alamjane/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749598414961*^9},ExpressionUUID->"99998cf4-5126-4e15-96f7-\
1fe107af87be"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/johnmelodyme/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495987109795`*^9},ExpressionUUID->"bff391fd-48e7-463a-a441-\
71619770e0e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/themarcusaurelius/coronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495989669943`*^9},ExpressionUUID->"94bbb5ca-3851-4009-ae3a-\
daf81defba10"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sta199-sp20-002/appex-04-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897495992200127`*^9},ExpressionUUID->"c6a197c9-12b5-4490-8c7d-\
24295a51b1e5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheCode-Jedi/CoronaVirus-MD/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749599482028*^9},ExpressionUUID->"4fad130a-5a08-4684-98b0-\
41bd0fdb1a7e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/DnCov/DnCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974959974704*^9},ExpressionUUID->"6d899783-f594-462c-858b-cc079e7e84a1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yarfer/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496000140533`*^9},ExpressionUUID->"5462756f-b11f-4c05-8414-\
f8fd28af189f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Yuriyama/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496002670703`*^9},ExpressionUUID->"21f9b208-b8db-47e0-83bc-\
395cbb2bb182"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/GHumorBS/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974960052909*^9},ExpressionUUID->"6ab66a56-1d3c-4ea4-9bb9-1c67475a41b7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/colortail/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496008701043`*^9},ExpressionUUID->"f66e9e76-693e-4982-9b33-\
ebbfbe54fb7a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HardWorkerIlya/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749601169123*^9},ExpressionUUID->"fc2bef47-ba0a-4cad-b945-\
b34086b2cf13"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dajnowicz/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496014251423`*^9},ExpressionUUID->"6e274f09-0b61-4180-a599-\
5f1c1cda86a6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/escudero/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749601695154*^9},ExpressionUUID->"0988629c-dba7-4487-bb8d-\
12d52a2450b2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/NarekSag/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749601974203*^9},ExpressionUUID->"a10d4756-db7a-4755-90bc-\
33544009eb27"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/henry123i/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496022452154`*^9},ExpressionUUID->"c353dd6f-e4de-4487-85f6-\
a58d59a9e4e2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/diehard04/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78974960251623*^9},ExpressionUUID->"c2e8f7a3-e71e-44e1-b5e4-66476c38367a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/daniel2231/coronavirusmap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749602788247*^9},ExpressionUUID->"bb4b6486-8167-426a-a8d1-\
6b2f71145c0f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kalzeo/CoronavirusWebsiteTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496030752645`*^9},ExpressionUUID->"908831aa-00fe-4ff6-a28f-\
82bbef1ff184"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guptaekarigar/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496033292837`*^9},ExpressionUUID->"c583158a-9f12-4ec1-a6cd-\
2a5059571065"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nnikniL/2019-nCoV_Notes/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749603662302*^9},ExpressionUUID->"982761b4-9a13-4846-a6f1-\
05a697747cfe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Ruchit007/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749603955316*^9},ExpressionUUID->"bac8d2e0-5a12-44a5-8c86-\
74273ac3ce3b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Koohoko/Coronavirus_Bayseian_Modelling/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749604217331*^9},ExpressionUUID->"5177e208-9d5f-4667-8ee1-\
1b81effb5499"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PratirupG/coronavirusanalysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749604501352*^9},ExpressionUUID->"b075946e-2ca5-4182-b427-\
00ef8469aebc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nerocui/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496047493954`*^9},ExpressionUUID->"270210bd-c2a0-4411-bf57-\
5b192d0bfb60"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EthanGeekFan/nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749605024446*^9},ExpressionUUID->"103f31d6-ad4a-4b44-bc90-\
be796f9c37a3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WooilJeong/novel_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496053284597`*^9},ExpressionUUID->"a6d1c140-49c4-42af-aa9b-\
4b56e8e22ae4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/damonYuan/ncov-api-k8s/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749605579477*^9},ExpressionUUID->"8d228374-41f5-44b0-8f4b-\
6a252b9bf58f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/davy868/propagation-model-for-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749605842496*^9},ExpressionUUID->"14daa5a8-267b-45b4-93ef-\
f65827aabb09"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hernanmd/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749606132511*^9},ExpressionUUID->"eae1837b-9947-4067-b2d2-\
1f2ae72ab7a0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aejsong/novel-coronavirus-exploratory-\
analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749606421528*^9},ExpressionUUID->"616f8be8-15fb-46af-8c3a-\
6bb75e722a8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Gazerbeamco/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496066725445`*^9},ExpressionUUID->"27e53abf-6b82-40b1-97a0-\
947d28989a76"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/143034/-coronavirus-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496069345603`*^9},ExpressionUUID->"f3a8e358-8f9c-404e-b735-\
b0c89a2aa527"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/karolkolodziej/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496071825705`*^9},ExpressionUUID->"541e432c-6734-43f3-b127-\
6ccf688c83ae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/larsgimse/coronaviruslamp/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496074445906`*^9},ExpressionUUID->"396e60d7-4e56-425e-9b30-\
d0fc46c76a01"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshualeung/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496077566085`*^9},ExpressionUUID->"d5839b9c-4128-4e1e-b000-\
a66dfa389f05"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ctedijanto/coronavirus-seasonality/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749608045621*^9},ExpressionUUID->"66e3493e-d26e-405c-929d-\
1aa006158e98"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jwktls/Coronavirus_ios/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496083156414`*^9},ExpressionUUID->"2a68a892-243b-4e32-98d3-\
a893b8836774"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/optoisolated/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496085796547`*^9},ExpressionUUID->"bfc54fd3-58f5-42f9-80f2-\
e88658d23c75"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mrmattwright-inc/coronavirus-virus/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749608830666*^9},ExpressionUUID->"525677e9-2473-48f6-99bf-\
b2efd53d3518"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/maksim72/coronavirus-website/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749609123683*^9},ExpressionUUID->"72d39278-bef5-404f-a229-\
d80c549c4828"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PatornJantara/coronavirus-detection/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496093936996`*^9},ExpressionUUID->"40d94fa7-8f9b-4b72-8fd2-\
881cc361cb8a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExtReMLapin/gmod_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496096687207`*^9},ExpressionUUID->"24b53c3e-86f1-4e0a-aad8-\
583c88d4a74c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/catofsof/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496099447355`*^9},ExpressionUUID->"302e2822-260f-4644-9479-\
01ad0ecb3130"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sun2yKid/Anti-2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749610197752*^9},ExpressionUUID->"0e30b10f-a0f2-47b0-927a-\
fc4b74700321"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epignatelli/coronavirus-infographics/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749610465768*^9},ExpressionUUID->"22079b26-bc75-49d4-90a1-\
e75e6be9b6cc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/developers-arm/Coronavirus-things/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749610719779*^9},ExpressionUUID->"01480860-a8ba-41f9-a559-\
ab9d0332c978"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HesterLim/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749610983796*^9},ExpressionUUID->"44b2fe81-14b1-45b6-8b92-\
939fd27ea15b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lichader/coronavirus-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749611258813*^9},ExpressionUUID->"2c8d1d98-3a4c-4514-be29-\
295dc8a5ed52"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yongjun21/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749611535829*^9},ExpressionUUID->"fe7b29bd-f9a5-497f-80f6-\
9770239947e1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/android-apps-apk/coronavirus-protect/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496118288455`*^9},ExpressionUUID->"1e1955a6-2320-4d87-b69a-\
f385f9fb321f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/edwardcooper/wuhan-virus-paper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496121528635`*^9},ExpressionUUID->"275dfa53-b07e-4214-a47c-\
ce847399682c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thiennv2896/Corona-Monitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496125688915`*^9},ExpressionUUID->"c6024e93-ebfe-4fef-a337-\
369981b516fa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/LSTM4Coronavirusprediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496128879104`*^9},ExpressionUUID->"bfd081a4-cdca-4aaf-ab04-\
311977a5c795"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Olivine-Ryo/coronavirus_map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496132289267`*^9},ExpressionUUID->"ca69cc93-913a-4562-8749-\
637aff51d227"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nancyyanyu/coronavirus_project/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749613556945*^9},ExpressionUUID->"491a8b41-d190-428f-9ef3-\
a32bb5c87120"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/A-Yifeng/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789749614017973*^9},ExpressionUUID->"684ac7c0-0ad9-4604-af28-\
1552ef5206b0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/imsoncod/Coronavirus-Map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496143430233`*^9},ExpressionUUID->"ccd8e88d-6e4d-4d30-95ec-\
5cafd36f5c49"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496146070395`*^9},ExpressionUUID->"00359b65-1883-4080-8a9f-\
16bb9b256815"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/smorfopoulou/coronavirus_genbank/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496148800573`*^9},ExpressionUUID->"e8ae9f1e-08ea-4580-84ec-\
2b1acbfb3b83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/andrewadiletta/coronavirus_gizmo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7897496152180753`*^9},ExpressionUUID->"1427f435-d19c-4a89-8a9d-\
d4bb9092269c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"result2", "[", 
    RowBox[{"All", ",", "\"\<tags\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.789749631262018*^9, 3.789749653211327*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wuhan\"\>", ",", "\<\"2019ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"virology\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"pathogens\"\>", ",", "\<\"viruses\"\>",
    ",", "\<\"pandemic\"\>", ",", "\<\"opendata\"\>", 
   ",", "\<\"epedemiology\"\>", ",", "\<\"epedemic\"\>", ",", "\<\"wuhan\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"2019ncov\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"2020ncov\"\>", ",", "\<\"wuhan-virus\"\>", ",", "\<\"china\"\>", 
   ",", "\<\"virus\"\>", ",", "\<\"pandemic\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"ncov-2019\"\>", ",", "\<\"scrapy\"\>", ",", "\<\"webcrawler\"\>",
    ",", "\<\"2019-ncov\"\>", ",", "\<\"statistical-models\"\>", 
   ",", "\<\"visualization\"\>", ",", "\<\"python\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"epidemic-model\"\>", ",", "\<\"wuhan-coronavirus-outbreak\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", ",", "\<\"wuhan\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"lancaster-university\"\>", 
   ",", "\<\"epidemic\"\>", ",", "\<\"epidemic-model\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"jupyter-notebook\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"data-mining\"\>", 
   ",", "\<\"kotlin\"\>", ",", "\<\"android\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"corona-tracker\"\>", ",", "\<\"medical\"\>", 
   ",", "\<\"telegram-bot\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"jupyter-notebook\"\>", ",", "\<\"geopandas\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"red-cross\"\>", 
   ",", "\<\"github-pages\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"mapbox-gl\"\>", 
   ",", "\<\"disease\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"telegram-bot\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"mathematica\"\>", 
   ",", "\<\"wolfram-language\"\>", ",", "\<\"data-science\"\>", 
   ",", "\<\"new-coronavirus\"\>", ",", "\<\"pneumonia\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"info-websites\"\>", 
   ",", "\<\"information\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"novel-coronavirus\"\>", ",", "\<\"real-time-map\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"nvoc\"\>", ",", "\<\"coronavirus-maps\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"coronavirus-info\"\>", 
   ",", "\<\"coronavirus-websites\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"epidemics\"\>", 
   ",", "\<\"prediction-model\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"regression-models\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"ncov-data-visual\"\>", ",", "\<\"rstats\"\>", 
   ",", "\<\"rstats-package\"\>", ",", "\<\"corona\"\>", 
   ",", "\<\"python\"\>", ",", "\<\"pandas\"\>", ",", "\<\"numpy\"\>", 
   ",", "\<\"matplotlib\"\>", ",", "\<\"seaborn\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"rpackage\"\>", ",", "\<\"data\"\>", 
   ",", "\<\"epidemiology\"\>", ",", "\<\"ncov\"\>", ",", "\<\"ncov-2019\"\>",
    ",", "\<\"dataset\"\>", ",", "\<\"corona\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"wuhan-coronavirus\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"ncov\"\>", ",", "\<\"wuhan-virus\"\>", 
   ",", "\<\"data-analysis\"\>", ",", "\<\"statistics\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"wuhan\"\>", ",", "\<\"coronavirus\"\>",
    ",", "\<\"sars\"\>", ",", "\<\"kubernetes\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"api\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"bioinformatics\"\>", ",", "\<\"smalltalk\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7897496348912296`*^9, 3.789749653574343*^9}},
 CellLabel->
  "Out[214]=",ExpressionUUID->"2cbc5bf7-98dc-41d4-b5d9-3b1ccc070dba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.789749657310564*^9, 3.7897496606837664`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19444444444444445`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus-outbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05158730158730159],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., -35.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-real-time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05952380952380952],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {16., 32.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"2019-ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08333333333333334],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-8., 49.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-globaloutbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {0., -51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04365079365079365],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {0., -66.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08333333333333334],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {28., 68.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-tracking\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-1., -81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jupyter-notebook\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-29., 81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemic-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {0., 93.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-2019\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05158730158730159],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., -97.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"telegram-bot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {0., 105.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {0., -113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04365079365079365],
     FontColor->RGBColor[1, 0.75, 0]], {0., 118.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"lancaster-university\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {115., 46.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wolfram-language\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {79., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"regression-models\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {109., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-maps\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-10., -123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prediction-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-108., -63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {101., 58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., 130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"real-time-map\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {95., -77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-96., -77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-84., 92.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rstats-package\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-82., -91.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {83., 90.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"github-pages\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {111., -49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-112., -49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {91., -94.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"statistical-models\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-130., 20.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-mining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-113., 44.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-data-visual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-80., 103.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {77., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-info\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-127., 30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-110., 56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"geopandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-106., 66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2019ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-84., -105.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"python\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {75., -106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mapbox-gl\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {3., -133.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pathogens\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-108., 76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05158730158730159],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {68., 115.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"epidemics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-76., 113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona-tracker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {0., 140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bioinformatics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {67., -125.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matplotlib\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-48., -133.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-80., -117.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"info-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-2., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"opendata\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {142., 20.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-72., 125.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {62., -135.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"visualization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {81., 124.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rpackage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {142., 32.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"webcrawler\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-24., 148.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"information\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {0., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"virology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {144., -30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kubernetes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {61., 140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-145., -30.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"pandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-59., 138.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2020ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {28., 150.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"numpy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-36., 69.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"red-cross\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-56., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"smalltalk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {137., 69.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scrapy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {46., -143.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"statistics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {116., -104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"seaborn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-92., -129.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"medical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-16., 158.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dataset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {147., 56.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"android\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-46., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {45., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"viruses\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-133., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kotlin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {109., -114.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"china\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {131., 88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rstats\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-134., 84.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {83., 66.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nvoc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {136., -38.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"api\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-141., 64.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-112., 111.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sars\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {99., 114.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03571428571428572],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-5., 9.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-180.5, 179.5}, {-158.5, 163.5}}]], "Output",
 CellChangeTimes->{3.789749664825003*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"cae69735-80a6-48d2-a5a1-21a34a801ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<D:\\\\git\\\\wolfram-coronavirus\\\\github-topic-wordcloud.png\>\"", 
   ",", 
   RowBox[{"Out", "[", "215", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749677903779*^9, 3.7897497020382204`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],

Cell[BoxData["\<\"D:\\\\git\\\\wolfram-coronavirus\\\\github-topic-wordcloud.\
png\"\>"], "Output",
 CellChangeTimes->{3.789749704188345*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"0307bef9-22f3-463b-b984-d1f387952f7b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897466559972534`*^9, 3.789746669704405*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"items", "=", 
   RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746711541909*^9, 3.7897467195079966`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"gettags", "[", 
     RowBox[{"json", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "30"}], "}"}]}], "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.7897467034057817`*^9, 3.789746705703845*^9}, {
  3.789746765084499*^9, 3.7897467815496793`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],

Cell[BoxData[
 RowBox[{"Keys", "[", "json", "]"}]], "Input",
 CellChangeTimes->{{3.789747085992421*^9, 3.7897470928615103`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],

Cell[BoxData[
 RowBox[{"json", "[", "\"\<incomplete_results\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7897482010763025`*^9, 3.7897482086013794`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7897471305364866`*^9, 3.7897471390714846`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],

Cell[BoxData["json"], "Input",
 CellChangeTimes->{{3.789747100792595*^9, 3.7897471010616045`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
},
WindowSize->{1909, 1018},
WindowMargins->{{1920, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (January 29, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b5593095-0dc5-4a6e-9371-2bdcb0248b0a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 7, 28, "Input",ExpressionUUID->"06120850-5f41-494b-8210-ede3bffba84b"],
Cell[881, 29, 303, 6, 28, "Input",ExpressionUUID->"3697c5e1-45e9-4e8a-a8c2-78f7e8b0bfb9"],
Cell[1187, 37, 308, 6, 28, "Input",ExpressionUUID->"bd66e8f5-b64c-4f25-b6f7-8b9657844443"],
Cell[1498, 45, 260, 4, 28, "Input",ExpressionUUID->"fa3b2450-d1f7-4d8d-bc08-14c78eae08ac"],
Cell[1761, 51, 425, 7, 28, "Input",ExpressionUUID->"30411d89-a59c-45ec-baca-63b27fd9ce41"],
Cell[CellGroupData[{
Cell[2211, 62, 2319, 51, 281, "Input",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],
Cell[CellGroupData[{
Cell[4555, 117, 128, 3, 24, "Echo",ExpressionUUID->"225732be-1f11-4e63-95c8-aefb43ca3ad2"],
Cell[4686, 122, 128, 3, 24, "Echo",ExpressionUUID->"62e1c339-4af0-43f6-aedf-bea818082bc6"],
Cell[4817, 127, 128, 3, 24, "Echo",ExpressionUUID->"a637791c-a8bf-4a42-b037-63edb5242d7d"],
Cell[4948, 132, 128, 3, 24, "Echo",ExpressionUUID->"dbb29320-f13c-495b-963d-465c22021b69"],
Cell[5079, 137, 130, 3, 24, "Echo",ExpressionUUID->"a70d2057-703d-4ff8-95c3-9a02e00bc346"],
Cell[5212, 142, 130, 3, 24, "Echo",ExpressionUUID->"226388a1-d787-4439-9720-e50f4a42aa2a"],
Cell[5345, 147, 130, 3, 24, "Echo",ExpressionUUID->"445e63d5-714d-4e37-bbb3-b75d9ebeb9aa"],
Cell[5478, 152, 128, 3, 24, "Echo",ExpressionUUID->"4c552c51-9dcd-4547-b6c4-bd622f8977e8"],
Cell[5609, 157, 130, 3, 24, "Echo",ExpressionUUID->"bc676fdb-1774-4d90-894c-db50314f248a"],
Cell[5742, 162, 128, 3, 24, "Echo",ExpressionUUID->"159344f3-ebad-460b-bd90-645ccd276439"],
Cell[5873, 167, 128, 3, 24, "Echo",ExpressionUUID->"b723c7d5-9fd1-45f0-acfa-9012869ab17a"],
Cell[6004, 172, 130, 3, 24, "Echo",ExpressionUUID->"0b3b7c77-ac1a-484f-8136-83e84564c5ce"],
Cell[6137, 177, 130, 3, 24, "Echo",ExpressionUUID->"3c18b528-9953-4498-9e5a-4a9e38f6014f"],
Cell[6270, 182, 125, 2, 24, "Echo",ExpressionUUID->"2cbc2200-7a71-4406-9217-30188f7cec9a"],
Cell[6398, 186, 128, 3, 24, "Echo",ExpressionUUID->"c7858967-ef34-4341-8e9f-15fc57589a77"],
Cell[6529, 191, 128, 3, 24, "Echo",ExpressionUUID->"1dd9ec46-67c0-4e4f-bbb0-194a172dd785"]
}, Open  ]],
Cell[6672, 197, 160, 3, 32, "Output",ExpressionUUID->"245da730-e37d-4c8b-bbfe-4354c2bae71a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6869, 205, 251, 5, 28, "Input",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],
Cell[7123, 212, 155, 3, 32, "Output",ExpressionUUID->"168696c3-607c-441d-a18d-ba743e8c93d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7315, 220, 762, 19, 28, "Input",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],
Cell[8080, 241, 65021, 1235, 579, "Output",ExpressionUUID->"bdbd75ed-ce8d-4191-bd67-93a2414e846b"]
}, Open  ]],
Cell[73116, 1479, 589, 12, 28, "Input",ExpressionUUID->"cc9ca28d-6356-4973-bfc6-5451a28fdce5"],
Cell[73708, 1493, 527, 9, 28, "Input",ExpressionUUID->"6fb701e1-2f52-4d7f-9268-c746954bbabf"],
Cell[74238, 1504, 2681, 59, 184, "Input",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],
Cell[CellGroupData[{
Cell[76944, 1567, 288, 7, 28, "Input",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],
Cell[77235, 1576, 20494, 375, 133, "Output",ExpressionUUID->"33282a92-f78e-486d-b23f-1d6b0e7403d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97766, 1956, 637, 12, 28, "Input",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],
Cell[CellGroupData[{
Cell[98428, 1972, 279, 8, 31, "Echo",ExpressionUUID->"31d4b4ed-a749-4df2-8bfa-2749d60729a4"],
Cell[98710, 1982, 249, 6, 31, "Echo",ExpressionUUID->"975cbeb5-aed2-4ed7-862b-2fa11508273e"],
Cell[98962, 1990, 275, 8, 31, "Echo",ExpressionUUID->"82351582-7197-4303-8e6e-5f0e9c3ba26e"],
Cell[99240, 2000, 251, 6, 31, "Echo",ExpressionUUID->"6836e17c-9c9c-4f14-aad3-7421e152b38b"],
Cell[99494, 2008, 268, 7, 31, "Echo",ExpressionUUID->"8df2bb8d-49fa-4614-a61b-7e03785953be"],
Cell[99765, 2017, 268, 7, 31, "Echo",ExpressionUUID->"aa0e63a1-321a-4262-a53c-c95462f4163a"],
Cell[100036, 2026, 252, 6, 31, "Echo",ExpressionUUID->"7713781a-5b5f-4568-afd6-193fdbbd7488"],
Cell[100291, 2034, 278, 8, 31, "Echo",ExpressionUUID->"753dcab3-88d2-4b40-99cb-fe37f1bde076"],
Cell[100572, 2044, 261, 7, 31, "Echo",ExpressionUUID->"71ee02ee-956f-4f6e-b45d-bbcc5606ba33"],
Cell[100836, 2053, 278, 8, 31, "Echo",ExpressionUUID->"203b3a09-5bc3-4de8-81f5-88974c97fe74"],
Cell[101117, 2063, 271, 8, 31, "Echo",ExpressionUUID->"90676189-4fa9-467d-85f6-aab00ddcd73c"],
Cell[101391, 2073, 266, 7, 31, "Echo",ExpressionUUID->"dfcf6877-78e7-4579-8b0e-d2ea6d08b546"],
Cell[101660, 2082, 252, 6, 31, "Echo",ExpressionUUID->"4c39a758-70e5-46a9-9245-dd23b38fa311"],
Cell[101915, 2090, 262, 7, 31, "Echo",ExpressionUUID->"d3eb1793-4906-4666-9703-e2e0c5ca7683"],
Cell[102180, 2099, 248, 6, 31, "Echo",ExpressionUUID->"5e4f428e-cd04-48b4-ac06-3602bad7747c"],
Cell[102431, 2107, 262, 7, 31, "Echo",ExpressionUUID->"ddf31367-e5dc-4f31-9a7c-ea24739809ad"],
Cell[102696, 2116, 262, 7, 31, "Echo",ExpressionUUID->"15600303-fe55-410b-bc85-7557fd657449"],
Cell[102961, 2125, 258, 7, 31, "Echo",ExpressionUUID->"2fbed93a-79e4-4aa0-9eff-8cab8d194637"],
Cell[103222, 2134, 264, 7, 31, "Echo",ExpressionUUID->"7b590b4d-ee4a-4eb4-a8d9-5c7c79e72edc"],
Cell[103489, 2143, 283, 8, 31, "Echo",ExpressionUUID->"5a2b92fc-0dbd-45e8-ba22-d8ed307c0f83"],
Cell[103775, 2153, 253, 6, 31, "Echo",ExpressionUUID->"6d8da5fa-5ca9-4300-911a-6500d78d807c"],
Cell[104031, 2161, 248, 6, 31, "Echo",ExpressionUUID->"8edd9278-7611-4dce-bcbc-34e3fca00272"],
Cell[104282, 2169, 247, 6, 31, "Echo",ExpressionUUID->"87a8c05c-98aa-40db-8a6d-b296de3549c5"],
Cell[104532, 2177, 261, 7, 31, "Echo",ExpressionUUID->"97310bd0-0e12-4892-b211-d5bf8231007f"],
Cell[104796, 2186, 260, 7, 31, "Echo",ExpressionUUID->"f8d685de-eb09-4cf9-8808-6cf7de62401b"],
Cell[105059, 2195, 249, 5, 31, "Echo",ExpressionUUID->"ffb73afb-81cf-48f8-9265-16a071d37dfc"],
Cell[105311, 2202, 266, 7, 31, "Echo",ExpressionUUID->"dc3b9a42-612a-4127-ab85-c6a703b18e0a"],
Cell[105580, 2211, 268, 7, 31, "Echo",ExpressionUUID->"18e25b78-d012-42c2-b322-dd10fca6ef1b"],
Cell[105851, 2220, 259, 7, 31, "Echo",ExpressionUUID->"0f160cdf-0138-47c4-8a06-bf16f7dad86d"],
Cell[106113, 2229, 252, 6, 31, "Echo",ExpressionUUID->"78591af4-2f94-4a40-b0a6-3c146b8dc999"],
Cell[106368, 2237, 273, 8, 31, "Echo",ExpressionUUID->"e6bbd0de-a001-4628-88ea-d8936e209204"],
Cell[106644, 2247, 275, 8, 31, "Echo",ExpressionUUID->"8eccbfeb-7083-4844-8a48-b3aaa743a15a"],
Cell[106922, 2257, 262, 7, 31, "Echo",ExpressionUUID->"7e4e5a97-96ad-42af-95f8-e76e77a401e9"],
Cell[107187, 2266, 247, 5, 31, "Echo",ExpressionUUID->"92dd0457-4410-426e-bdcb-6e4af8eead10"],
Cell[107437, 2273, 273, 8, 31, "Echo",ExpressionUUID->"b47ab8e1-f1c3-4a27-8030-d41383ab5253"],
Cell[107713, 2283, 251, 6, 31, "Echo",ExpressionUUID->"15fefc75-9736-4fcd-832d-8a7d0d4f2ac9"],
Cell[107967, 2291, 286, 8, 31, "Echo",ExpressionUUID->"8ba40655-ba87-4fd6-b501-3a3d19b3e4f6"],
Cell[108256, 2301, 251, 6, 31, "Echo",ExpressionUUID->"c8cd670f-d900-4fcf-a4ed-1bfd7775df9a"],
Cell[108510, 2309, 285, 8, 31, "Echo",ExpressionUUID->"7da77e95-a9b8-42e5-856b-a63c5d6eb905"],
Cell[108798, 2319, 262, 7, 31, "Echo",ExpressionUUID->"51f1d5cd-d81d-4a11-8d46-43b5a012bf39"],
Cell[109063, 2328, 277, 8, 31, "Echo",ExpressionUUID->"059f4fa5-2f1a-4ab7-b493-ecd303baf381"],
Cell[109343, 2338, 253, 6, 31, "Echo",ExpressionUUID->"f868634e-f160-4a59-bb49-aa65dbf2aebf"],
Cell[109599, 2346, 263, 6, 31, "Echo",ExpressionUUID->"e3d61bab-ae32-4583-b7b3-b7ab84e1e270"],
Cell[109865, 2354, 246, 6, 31, "Echo",ExpressionUUID->"a4b04b24-6ed6-432f-b373-1cf945cba065"],
Cell[110114, 2362, 277, 8, 31, "Echo",ExpressionUUID->"89897292-c690-4485-b6df-44e0a8507e72"],
Cell[110394, 2372, 265, 7, 31, "Echo",ExpressionUUID->"1f4e5f29-0c8e-4558-a9ac-41aa1a251862"],
Cell[110662, 2381, 250, 6, 31, "Echo",ExpressionUUID->"9aba9bc3-25e4-443f-a3be-2e6300aac79a"],
Cell[110915, 2389, 277, 8, 31, "Echo",ExpressionUUID->"609ef791-b92a-4fa4-b965-4145edf80313"],
Cell[111195, 2399, 268, 7, 31, "Echo",ExpressionUUID->"604db1a5-4bdb-49be-8641-620b029b3acd"],
Cell[111466, 2408, 266, 7, 31, "Echo",ExpressionUUID->"96910825-22c9-40b3-9365-ebe652eb5301"],
Cell[111735, 2417, 261, 7, 31, "Echo",ExpressionUUID->"f85f7e65-8077-471e-b6b2-be472c0d4873"],
Cell[111999, 2426, 261, 7, 31, "Echo",ExpressionUUID->"cb1004ca-3389-48d0-a142-35aa8568642a"],
Cell[112263, 2435, 253, 6, 31, "Echo",ExpressionUUID->"4dbd407c-239c-4692-890d-36349a2127bd"],
Cell[112519, 2443, 280, 8, 31, "Echo",ExpressionUUID->"6d7ad61a-00f5-4219-aeba-d492b66b471e"],
Cell[112802, 2453, 261, 7, 31, "Echo",ExpressionUUID->"54056610-7181-4149-92bc-0169400d098c"],
Cell[113066, 2462, 249, 6, 31, "Echo",ExpressionUUID->"1122c6b7-4f78-42d3-b1fa-f52b66817238"],
Cell[113318, 2470, 248, 6, 31, "Echo",ExpressionUUID->"e41c0ecf-9541-4831-b61c-f8a8f395a56a"],
Cell[113569, 2478, 264, 7, 31, "Echo",ExpressionUUID->"f1403983-d80f-40c4-aba0-a66c1a0002de"],
Cell[113836, 2487, 251, 6, 31, "Echo",ExpressionUUID->"fccd60b0-7f99-49fd-859c-3e2a6fd2a5c1"],
Cell[114090, 2495, 250, 6, 31, "Echo",ExpressionUUID->"4b901841-b5a4-4198-909f-d69312ca97c5"],
Cell[114343, 2503, 278, 8, 31, "Echo",ExpressionUUID->"3af705be-b54c-45f4-810a-f083bdf89b16"],
Cell[114624, 2513, 260, 7, 31, "Echo",ExpressionUUID->"cd81d5db-80e3-48a6-bba5-a32f712a9007"],
Cell[114887, 2522, 266, 7, 31, "Echo",ExpressionUUID->"7b3c5244-d409-4275-9f3a-bc0cd0d492d5"],
Cell[115156, 2531, 251, 6, 31, "Echo",ExpressionUUID->"7e75941a-baa7-4c9d-a7d5-e0ffb50072bb"],
Cell[115410, 2539, 251, 6, 31, "Echo",ExpressionUUID->"cbbdbbab-2ffb-4039-94dd-c53c31c1024a"],
Cell[115664, 2547, 250, 6, 31, "Echo",ExpressionUUID->"dbad9af4-07d7-4634-ae2e-3e464dc0e4b5"],
Cell[115917, 2555, 250, 6, 31, "Echo",ExpressionUUID->"89d66dba-4f79-47c4-b597-6293dd21a27a"],
Cell[116170, 2563, 265, 7, 31, "Echo",ExpressionUUID->"6a72772c-0b7c-40fe-8694-60ed9243e6fe"],
Cell[116438, 2572, 266, 7, 31, "Echo",ExpressionUUID->"577c191f-e519-433a-aacf-f1a3782a2634"],
Cell[116707, 2581, 263, 7, 31, "Echo",ExpressionUUID->"363345b3-149b-45cc-9146-e8463ca0fd7b"],
Cell[116973, 2590, 272, 8, 31, "Echo",ExpressionUUID->"3d2df5ee-bdbf-432d-b00a-715c578580a4"],
Cell[117248, 2600, 298, 8, 31, "Echo",ExpressionUUID->"4da6f123-6343-4691-822f-179da17d67dd"],
Cell[117549, 2610, 250, 6, 31, "Echo",ExpressionUUID->"e417dab9-dbfa-48c4-a98e-c7eb06937bf6"],
Cell[117802, 2618, 274, 8, 31, "Echo",ExpressionUUID->"f419be32-1e83-4e0a-97d8-dd97577e4703"],
Cell[118079, 2628, 251, 6, 31, "Echo",ExpressionUUID->"d415ee89-fa57-437a-a384-1a3b80fe7498"],
Cell[118333, 2636, 279, 8, 31, "Echo",ExpressionUUID->"c89e2bc5-444f-4591-ad0c-959a455558d5"],
Cell[118615, 2646, 265, 7, 31, "Echo",ExpressionUUID->"dc389474-58a7-43bf-9747-1c37732d4f01"],
Cell[118883, 2655, 254, 6, 31, "Echo",ExpressionUUID->"580ae650-20b5-4847-a99c-749ece77ee30"],
Cell[119140, 2663, 242, 6, 31, "Echo",ExpressionUUID->"6999f49d-e8c6-4885-a4a2-ba47b8665c8c"],
Cell[119385, 2671, 262, 7, 31, "Echo",ExpressionUUID->"f0fac809-b193-40b1-8c73-1a55c17aeb94"],
Cell[119650, 2680, 261, 6, 31, "Echo",ExpressionUUID->"dd74fa93-1f34-4c8f-8a55-edaa17a504cb"],
Cell[119914, 2688, 261, 7, 31, "Echo",ExpressionUUID->"e690ab72-2e22-4bf3-b1c2-a6d2a7b0345b"],
Cell[120178, 2697, 264, 7, 31, "Echo",ExpressionUUID->"2c4d3ab5-2e4d-4196-b5f4-0f0c8d9023ae"],
Cell[120445, 2706, 266, 7, 31, "Echo",ExpressionUUID->"468a966c-0ea4-4872-992c-7200f30ce24c"],
Cell[120714, 2715, 252, 6, 31, "Echo",ExpressionUUID->"d5145e87-5234-47df-9527-febeaec014cc"],
Cell[120969, 2723, 253, 6, 31, "Echo",ExpressionUUID->"7c9c8733-49e5-408d-afc1-5f04bfa1d52d"],
Cell[121225, 2731, 267, 7, 31, "Echo",ExpressionUUID->"965d9b12-43cb-4e55-8193-fa77e101b73d"],
Cell[121495, 2740, 259, 7, 31, "Echo",ExpressionUUID->"ab52aa4e-d231-4281-9863-256ebd6b6910"],
Cell[121757, 2749, 283, 8, 31, "Echo",ExpressionUUID->"a21e6a77-ebc6-4b26-8969-8024421e7ddf"],
Cell[122043, 2759, 268, 7, 31, "Echo",ExpressionUUID->"37057e0d-fd47-4b25-aeac-60fb82c5a97b"],
Cell[122314, 2768, 257, 7, 31, "Echo",ExpressionUUID->"f8c52fc9-8c8c-4ed0-ab3e-d9f06be5ca47"],
Cell[122574, 2777, 260, 7, 31, "Echo",ExpressionUUID->"7d5305e9-3d12-4999-953b-e2c4539f87f3"],
Cell[122837, 2786, 263, 7, 31, "Echo",ExpressionUUID->"c65d074e-f512-41ea-a1c4-5d2940069069"],
Cell[123103, 2795, 261, 7, 31, "Echo",ExpressionUUID->"3d3c5e0c-26b3-420a-a509-76cbc44966b4"],
Cell[123367, 2804, 253, 6, 31, "Echo",ExpressionUUID->"f7494871-b4b5-4ec5-90bd-bc0508e0b8b6"],
Cell[123623, 2812, 268, 7, 31, "Echo",ExpressionUUID->"a39b6222-7712-4592-bcee-54e91895abcf"],
Cell[123894, 2821, 259, 7, 31, "Echo",ExpressionUUID->"c4593997-0b9f-4775-9ab3-917f8b4bcc09"],
Cell[124156, 2830, 268, 7, 31, "Echo",ExpressionUUID->"bb156c4a-67fe-4a3a-a1b2-1a9538323185"],
Cell[124427, 2839, 260, 7, 31, "Echo",ExpressionUUID->"566ac1c7-a179-4c1a-8225-05e4cf5b3809"],
Cell[124690, 2848, 257, 7, 31, "Echo",ExpressionUUID->"74ecdfea-2772-4cd2-8338-554166b54f83"],
Cell[124950, 2857, 273, 8, 31, "Echo",ExpressionUUID->"78043fa8-8a0a-4eb7-8e2e-2da135739583"],
Cell[125226, 2867, 263, 7, 31, "Echo",ExpressionUUID->"20113a14-0e3a-47d3-9bbc-5a19481a7737"],
Cell[125492, 2876, 272, 8, 31, "Echo",ExpressionUUID->"8fa8eccb-e223-47a4-97cd-1ae5dbf22758"],
Cell[125767, 2886, 253, 6, 31, "Echo",ExpressionUUID->"dfca7cb7-4fa9-46bb-b9a1-07a259f68378"],
Cell[126023, 2894, 258, 7, 31, "Echo",ExpressionUUID->"c4f73526-b419-4fe7-880e-64601695fab3"],
Cell[126284, 2903, 258, 7, 31, "Echo",ExpressionUUID->"b6f58874-2d92-49e2-ad2b-48a43d9f5a36"],
Cell[126545, 2912, 253, 6, 31, "Echo",ExpressionUUID->"06340f94-3e60-4e7b-a6b7-d424ba6e7fc8"],
Cell[126801, 2920, 254, 6, 31, "Echo",ExpressionUUID->"72fd487c-be58-452d-9c45-948ff008d156"],
Cell[127058, 2928, 250, 6, 31, "Echo",ExpressionUUID->"53e7a74b-5592-44a5-bc63-825210f12138"],
Cell[127311, 2936, 252, 6, 31, "Echo",ExpressionUUID->"05746ecc-4ccd-4794-85e2-232d12b7caa1"],
Cell[127566, 2944, 249, 6, 31, "Echo",ExpressionUUID->"7d44a11c-aa79-4e56-8f05-7aa4aee36581"],
Cell[127818, 2952, 264, 7, 31, "Echo",ExpressionUUID->"5017022f-0f8d-4156-8813-8829b438953a"],
Cell[128085, 2961, 259, 7, 31, "Echo",ExpressionUUID->"04cb90c9-3ce0-4d02-ab1a-644f4df79dbe"],
Cell[128347, 2970, 258, 7, 31, "Echo",ExpressionUUID->"6c7dab6a-54d2-41ab-b1c8-3226c649bc51"],
Cell[128608, 2979, 265, 7, 31, "Echo",ExpressionUUID->"efa77e80-04b9-4152-85c7-3bcb620c4958"],
Cell[128876, 2988, 268, 7, 31, "Echo",ExpressionUUID->"ef8866a6-86c3-42ba-8f16-2208399e564a"],
Cell[129147, 2997, 276, 8, 31, "Echo",ExpressionUUID->"05c7a04a-a961-4704-9be7-a3249624439e"],
Cell[129426, 3007, 265, 7, 31, "Echo",ExpressionUUID->"1457dd9f-ee6f-43e8-ac60-57ede2985c42"],
Cell[129694, 3016, 260, 7, 31, "Echo",ExpressionUUID->"223cd908-c55f-4d53-9a89-baa888794a26"],
Cell[129957, 3025, 254, 6, 31, "Echo",ExpressionUUID->"1f29e01d-9bd7-464b-a6ea-230f3af26a9f"],
Cell[130214, 3033, 249, 6, 31, "Echo",ExpressionUUID->"6854c8ba-d9f8-46ba-bcff-2af32aa733fa"],
Cell[130466, 3041, 261, 7, 31, "Echo",ExpressionUUID->"356e1203-d7d7-4557-a1e2-8026452be291"],
Cell[130730, 3050, 257, 7, 31, "Echo",ExpressionUUID->"821b59e9-0b49-4db4-832a-82877ed8d3cb"],
Cell[130990, 3059, 260, 7, 31, "Echo",ExpressionUUID->"931ee7e1-e15c-4a14-9d41-299e7272ebfc"],
Cell[131253, 3068, 251, 6, 31, "Echo",ExpressionUUID->"80bbe5ad-393a-4193-92bf-80654f2488e3"],
Cell[131507, 3076, 264, 7, 31, "Echo",ExpressionUUID->"4b0476ae-edfd-457b-a263-9f26c650bdca"],
Cell[131774, 3085, 259, 6, 31, "Echo",ExpressionUUID->"e1af5b37-aa16-43e1-a881-64abed0adc45"],
Cell[132036, 3093, 252, 6, 31, "Echo",ExpressionUUID->"89531e5a-7a18-44b7-b5da-8d42b7328008"],
Cell[132291, 3101, 250, 6, 31, "Echo",ExpressionUUID->"603db0ca-e1f0-4634-b652-6fe8758f590f"],
Cell[132544, 3109, 273, 8, 31, "Echo",ExpressionUUID->"57cb4396-fd50-4491-ae2e-2659bb567dc3"],
Cell[132820, 3119, 265, 7, 31, "Echo",ExpressionUUID->"743c9559-377e-45cf-9911-8fd36e71b800"],
Cell[133088, 3128, 269, 7, 31, "Echo",ExpressionUUID->"cd3cc1c3-b65f-4e28-8f8f-50c0b634822c"],
Cell[133360, 3137, 254, 6, 31, "Echo",ExpressionUUID->"e2f8fadd-e64a-41b9-b222-24ae52593995"],
Cell[133617, 3145, 262, 7, 31, "Echo",ExpressionUUID->"d523331c-8169-4d19-8e2d-bcfe7cfccc10"],
Cell[133882, 3154, 268, 7, 31, "Echo",ExpressionUUID->"c4efe130-43cd-4103-b81d-6eea18603faf"],
Cell[134153, 3163, 247, 6, 31, "Echo",ExpressionUUID->"d1b6ae37-0d21-472d-b038-07356890d85f"],
Cell[134403, 3171, 260, 7, 31, "Echo",ExpressionUUID->"cbc95460-3f6b-4f2a-9271-5b3bf41054ad"],
Cell[134666, 3180, 260, 7, 31, "Echo",ExpressionUUID->"8f7bde22-3b28-44b1-ac11-e2f6a908e645"],
Cell[134929, 3189, 276, 8, 31, "Echo",ExpressionUUID->"fb5ce423-5473-4d99-a6cb-2562d5b4c4cb"],
Cell[135208, 3199, 266, 7, 31, "Echo",ExpressionUUID->"54224fd1-3ab5-44ee-b1e9-07e9783c2687"],
Cell[135477, 3208, 262, 7, 31, "Echo",ExpressionUUID->"9550e11d-c821-4b1c-bc15-e1de006988f4"],
Cell[135742, 3217, 252, 6, 31, "Echo",ExpressionUUID->"0d8ce9e3-3d1c-4b51-bbf8-bfea000bc644"],
Cell[135997, 3225, 259, 7, 31, "Echo",ExpressionUUID->"9eb41b1c-ef3d-41fb-8c37-67f9cdacf12f"],
Cell[136259, 3234, 265, 7, 31, "Echo",ExpressionUUID->"29e4fd58-d955-4279-b892-45ea7a826c8e"],
Cell[136527, 3243, 262, 7, 31, "Echo",ExpressionUUID->"bbaf28c7-d161-431d-a971-13e10c66cf2c"],
Cell[136792, 3252, 252, 6, 31, "Echo",ExpressionUUID->"c06ecfa1-4722-40d8-abe1-5deb418fd7fa"],
Cell[137047, 3260, 261, 7, 31, "Echo",ExpressionUUID->"e8ac999f-b4c8-47ad-b0c0-061183c91727"],
Cell[137311, 3269, 253, 6, 31, "Echo",ExpressionUUID->"172e5367-a061-41a0-9f5a-c5e8d6ecc651"],
Cell[137567, 3277, 262, 6, 31, "Echo",ExpressionUUID->"85818d6b-69d6-4cd2-92e6-cc27e690b382"],
Cell[137832, 3285, 249, 5, 31, "Echo",ExpressionUUID->"07a2e469-e0a4-4cc1-b6ab-e201f61490cc"],
Cell[138084, 3292, 252, 6, 31, "Echo",ExpressionUUID->"99998cf4-5126-4e15-96f7-1fe107af87be"],
Cell[138339, 3300, 262, 7, 31, "Echo",ExpressionUUID->"bff391fd-48e7-463a-a441-71619770e0e9"],
Cell[138604, 3309, 267, 7, 31, "Echo",ExpressionUUID->"94bbb5ca-3851-4009-ae3a-daf81defba10"],
Cell[138874, 3318, 276, 8, 31, "Echo",ExpressionUUID->"c6a197c9-12b5-4490-8c7d-24295a51b1e5"],
Cell[139153, 3328, 263, 7, 31, "Echo",ExpressionUUID->"4fad130a-5a08-4684-98b0-41bd0fdb1a7e"],
Cell[139419, 3337, 240, 5, 31, "Echo",ExpressionUUID->"6d899783-f594-462c-858b-cc079e7e84a1"],
Cell[139662, 3344, 252, 6, 31, "Echo",ExpressionUUID->"5462756f-b11f-4c05-8414-f8fd28af189f"],
Cell[139917, 3352, 254, 6, 31, "Echo",ExpressionUUID->"21f9b208-b8db-47e0-83bc-395cbb2bb182"],
Cell[140174, 3360, 249, 5, 31, "Echo",ExpressionUUID->"6ab66a56-1d3c-4ea4-9bb9-1c67475a41b7"],
Cell[140426, 3367, 259, 7, 31, "Echo",ExpressionUUID->"f66e9e76-693e-4982-9b33-ebbfbe54fb7a"],
Cell[140688, 3376, 262, 7, 31, "Echo",ExpressionUUID->"fc2bef47-ba0a-4cad-b945-b34086b2cf13"],
Cell[140953, 3385, 259, 7, 31, "Echo",ExpressionUUID->"6e274f09-0b61-4180-a599-5f1c1cda86a6"],
Cell[141215, 3394, 252, 6, 31, "Echo",ExpressionUUID->"0988629c-dba7-4487-bb8d-12d52a2450b2"],
Cell[141470, 3402, 252, 6, 31, "Echo",ExpressionUUID->"a10d4756-db7a-4755-90bc-33544009eb27"],
Cell[141725, 3410, 259, 7, 31, "Echo",ExpressionUUID->"c353dd6f-e4de-4487-85f6-a58d59a9e4e2"],
Cell[141987, 3419, 254, 6, 31, "Echo",ExpressionUUID->"c2e8f7a3-e71e-44e1-b5e4-66476c38367a"],
Cell[142244, 3427, 261, 7, 31, "Echo",ExpressionUUID->"bb4b6486-8167-426a-a8d1-6b2f71145c0f"],
Cell[142508, 3436, 270, 7, 31, "Echo",ExpressionUUID->"908831aa-00fe-4ff6-a28f-82bbef1ff184"],
Cell[142781, 3445, 270, 7, 31, "Echo",ExpressionUUID->"c583158a-9f12-4ec1-a6cd-2a5059571065"],
Cell[143054, 3454, 259, 7, 31, "Echo",ExpressionUUID->"982761b4-9a13-4846-a6f1-05a697747cfe"],
Cell[143316, 3463, 257, 7, 31, "Echo",ExpressionUUID->"bac8d2e0-5a12-44a5-8c86-74273ac3ce3b"],
Cell[143576, 3472, 276, 8, 31, "Echo",ExpressionUUID->"5177e208-9d5f-4667-8ee1-1b81effb5499"],
Cell[143855, 3482, 265, 7, 31, "Echo",ExpressionUUID->"b075946e-2ca5-4182-b427-00ef8469aebc"],
Cell[144123, 3491, 264, 7, 31, "Echo",ExpressionUUID->"270210bd-c2a0-4411-bf57-5b192d0bfb60"],
Cell[144390, 3500, 249, 6, 31, "Echo",ExpressionUUID->"103f31d6-ad4a-4b44-bc90-be796f9c37a3"],
Cell[144642, 3508, 266, 7, 31, "Echo",ExpressionUUID->"a6d1c140-49c4-42af-aa9b-4b56e8e22ae4"],
Cell[144911, 3517, 258, 7, 31, "Echo",ExpressionUUID->"8d228374-41f5-44b0-8f4b-6a252b9bf58f"],
Cell[145172, 3526, 277, 8, 31, "Echo",ExpressionUUID->"14daa5a8-267b-45b4-93ef-f65827aabb09"],
Cell[145452, 3536, 250, 6, 31, "Echo",ExpressionUUID->"eae1837b-9947-4067-b2d2-1f2ae72ab7a0"],
Cell[145705, 3544, 284, 8, 31, "Echo",ExpressionUUID->"616f8be8-15fb-46af-8c3a-6bb75e722a8c"],
Cell[145992, 3554, 261, 7, 31, "Echo",ExpressionUUID->"27e53abf-6b82-40b1-97a0-947d28989a76"],
Cell[146256, 3563, 254, 6, 31, "Echo",ExpressionUUID->"f3a8e358-8f9c-404e-b735-b0c89a2aa527"],
Cell[146513, 3571, 264, 7, 31, "Echo",ExpressionUUID->"541e432c-6734-43f3-b127-6ccf688c83ae"],
Cell[146780, 3580, 263, 7, 31, "Echo",ExpressionUUID->"396e60d7-4e56-425e-9b30-d0fc46c76a01"],
Cell[147046, 3589, 267, 7, 31, "Echo",ExpressionUUID->"d5839b9c-4128-4e1e-b000-a66dfa389f05"],
Cell[147316, 3598, 272, 8, 31, "Echo",ExpressionUUID->"66e3493e-d26e-405c-929d-1aa006158e98"],
Cell[147591, 3608, 260, 7, 31, "Echo",ExpressionUUID->"2a68a892-243b-4e32-98d3-a893b8836774"],
Cell[147854, 3617, 268, 7, 31, "Echo",ExpressionUUID->"bfc54fd3-58f5-42f9-80f2-e88658d23c75"],
Cell[148125, 3626, 272, 8, 31, "Echo",ExpressionUUID->"525677e9-2473-48f6-99bf-b2efd53d3518"],
Cell[148400, 3636, 264, 7, 31, "Echo",ExpressionUUID->"72d39278-bef5-404f-a229-d80c549c4828"],
Cell[148667, 3645, 275, 8, 31, "Echo",ExpressionUUID->"40d94fa7-8f9b-4b72-8fd2-881cc361cb8a"],
Cell[148945, 3655, 266, 7, 31, "Echo",ExpressionUUID->"24b53c3e-86f1-4e0a-aad8-583c88d4a74c"],
Cell[149214, 3664, 262, 7, 31, "Echo",ExpressionUUID->"302e2822-260f-4644-9479-01ad0ecb3130"],
Cell[149479, 3673, 259, 7, 31, "Echo",ExpressionUUID->"0e30b10f-a0f2-47b0-927a-fc4b74700321"],
Cell[149741, 3682, 274, 8, 31, "Echo",ExpressionUUID->"22079b26-bc75-49d4-90a1-e75e6be9b6cc"],
Cell[150018, 3692, 271, 8, 31, "Echo",ExpressionUUID->"01480860-a8ba-41f9-a559-ab9d0332c978"],
Cell[150292, 3702, 266, 7, 31, "Echo",ExpressionUUID->"44b2fe81-14b1-45b6-8b92-939fd27ea15b"],
Cell[150561, 3711, 260, 7, 31, "Echo",ExpressionUUID->"2c8d1d98-3a4c-4514-be29-295dc8a5ed52"],
Cell[150824, 3720, 263, 7, 31, "Echo",ExpressionUUID->"fe7b29bd-f9a5-497f-80f6-9770239947e1"],
Cell[151090, 3729, 276, 8, 31, "Echo",ExpressionUUID->"1e1955a6-2320-4d87-b69a-f385f9fb321f"],
Cell[151369, 3739, 268, 7, 31, "Echo",ExpressionUUID->"275dfa53-b07e-4214-a47c-ce847399682c"],
Cell[151640, 3748, 264, 7, 31, "Echo",ExpressionUUID->"c6024e93-ebfe-4fef-a337-369981b516fa"],
Cell[151907, 3757, 280, 8, 31, "Echo",ExpressionUUID->"bfd081a4-cdca-4aaf-ab04-311977a5c795"],
Cell[152190, 3767, 265, 7, 31, "Echo",ExpressionUUID->"ca69cc93-913a-4562-8749-637aff51d227"],
Cell[152458, 3776, 266, 7, 31, "Echo",ExpressionUUID->"491a8b41-d190-428f-9ef3-a32bb5c87120"],
Cell[152727, 3785, 262, 7, 31, "Echo",ExpressionUUID->"684ac7c0-0ad9-4604-af28-1552ef5206b0"],
Cell[152992, 3794, 262, 7, 31, "Echo",ExpressionUUID->"ccd8e88d-6e4d-4d30-95ec-5cafd36f5c49"],
Cell[153257, 3803, 261, 7, 31, "Echo",ExpressionUUID->"00359b65-1883-4080-8a9f-16bb9b256815"],
Cell[153521, 3812, 270, 7, 31, "Echo",ExpressionUUID->"e8ae9f1e-08ea-4580-84ec-2b1acbfb3b83"],
Cell[153794, 3821, 270, 7, 31, "Echo",ExpressionUUID->"1427f435-d19c-4a89-8a9d-d4bb9092269c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154113, 3834, 315, 7, 28, "Input",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],
Cell[154431, 3843, 4477, 70, 169, "Output",ExpressionUUID->"2cbc5bf7-98dc-41d4-b5d9-3b1ccc070dba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158945, 3918, 213, 4, 28, "Input",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],
Cell[159161, 3924, 19375, 453, 339, "Output",ExpressionUUID->"cae69735-80a6-48d2-a5a1-21a34a801ee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178573, 4382, 342, 8, 28, "Input",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],
Cell[178918, 4392, 224, 4, 32, "Output",ExpressionUUID->"0307bef9-22f3-463b-b984-d1f387952f7b"]
}, Open  ]],
Cell[179157, 4399, 253, 5, 28, "Input",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],
Cell[179413, 4406, 266, 6, 28, "Input",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],
Cell[179682, 4414, 431, 11, 28, "Input",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],
Cell[180116, 4427, 211, 4, 28, "Input",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],
Cell[180330, 4433, 235, 4, 28, "Input",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],
Cell[180568, 4439, 251, 5, 28, "Input",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],
Cell[180822, 4446, 181, 3, 28, "Input",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
}
]
*)

