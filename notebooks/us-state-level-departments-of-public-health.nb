(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    316741,       6621]
NotebookOptionsPosition[    313401,       6557]
NotebookOutlinePosition[    314120,       6579]
CellTagsIndexPosition[    314077,       6576]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["ResourceUpdate"], "Input",
 CellChangeTimes->{{3.7928521094061832`*^9, 
  3.792852111480219*^9}},ExpressionUUID->"51a5f1f3-2b83-43f6-a1fa-\
02a08e5976c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ResourceObject", "[", 
  "\"\<Epidemic Data for Novel Coronavirus COVID-19\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7928522471441793`*^9, 3.792852247145177*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4b06dcf3-10e9-464d-aaf9-a5d1351feb3f"],

Cell[BoxData[
 TemplateBox[{
  "CloudConnect", "clver", 
   "\"Connecting to a cloud running an earlier version of the Wolfram Engine: \
\\!\\(\\*RowBox[{\\\"\\\\\\\"12.0\\\\\\\"\\\"}]\\)\"", 2, 1, 1, 
   20661416388555183455, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.792852250889231*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b79fc2a4-0ee7-450d-89f4-d711baee8de1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], {
               FaceForm[{
                 RGBColor[0.648987, 0.648987, 0.648987], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                3.266}, {3.789, 3.266}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129, 
                54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                15.57}, {14.129, 15.57}}}]}, {
               FaceForm[{
                 RGBColor[0.274612, 0.618881, 0.810913], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129, 
                41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191, 
                31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                42.191, 15.569999999999997`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                51.223000000000006`, 46.875}, {56.973000000000006`, 46.875}, {
                56.973000000000006`, 15.57}, {51.223000000000006`, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254, 
                37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
               FaceForm[{
                 RGBColor[0.648987, 0.648987, 0.648987], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                56.547}, {9.879000000000001, 56.547}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121, 
                9.097999999999999}, {9.871, 9.097999999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                 66.54700000000001}, {45., 82.418}, {78.398, 
                 66.54700000000001}}, {{45., 86.73400000000001}, {
                 2.2230000000000003`, 66.54700000000001}, {
                 2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                 66.54700000000001}}}]}}, AspectRatio -> 1, Axes -> False, 
             Background -> None, Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"Epidemic Data for Novel Coronavirus COVID-19\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Epidemic-Data-for-Novel-Coronavirus-COVID-19"}, "HyperlinkURL"]}, 
                   "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Estimated cases of novel coronavirus (COVID-19, formerly \
known as 2019-nCoV) infection by country or region", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Estimated cases of novel coronavirus (COVID-19, formerly \
known as 2019-nCoV) infection by country or region", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm], 
                    ImageSizeCache -> {340., {2., 7.}}], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "SummaryItem"]}], DynamicModuleValues :> {}], 
                "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"], 
               ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{
              Thickness[0.011111111111111112`], {
               FaceForm[{
                 RGBColor[0.648987, 0.648987, 0.648987], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{3.789, 
                7.266}, {86.20700000000001, 7.266}, {86.20700000000001, 
                3.266}, {3.789, 3.266}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14.129, 
                54.07}, {19.878999999999998`, 54.07}, {19.878999999999998`, 
                15.57}, {14.129, 15.57}}}]}, {
               FaceForm[{
                 RGBColor[0.274612, 0.618881, 0.810913], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.129, 
                41.82}, {29.879, 41.82}, {29.879, 15.57}, {24.129, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                33.160000000000004`, 54.07}, {38.910000000000004`, 54.07}, {
                38.910000000000004`, 15.57}, {33.160000000000004`, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.191, 
                31.781}, {47.941, 31.781}, {47.941, 15.569999999999997`}, {
                42.191, 15.569999999999997`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                51.223000000000006`, 46.875}, {56.973000000000006`, 46.875}, {
                56.973000000000006`, 15.57}, {51.223000000000006`, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{60.254, 
                37.707}, {66.00399999999999, 37.707}, {66.00399999999999, 
                15.569999999999997`}, {60.254, 15.569999999999997`}}}]}, {
               FaceForm[{
                 RGBColor[0.648987, 0.648987, 0.648987], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                70.12899999999999, 54.07}, {75.87899999999999, 54.07}, {
                75.87899999999999, 15.57}, {70.12899999999999, 15.57}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                9.879000000000001, 60.547}, {24.129, 60.547}, {24.129, 
                56.547}, {9.879000000000001, 56.547}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{9.871, 
                13.097999999999999`}, {80.121, 13.097999999999999`}, {80.121, 
                9.097999999999999}, {9.871, 9.097999999999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                65.87899999999999, 60.547}, {80.12899999999999, 60.547}, {
                80.12899999999999, 56.547}, {65.87899999999999, 56.547}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.469000000000001`, 
                 66.54700000000001}, {45., 82.418}, {78.398, 
                 66.54700000000001}}, {{45., 86.73400000000001}, {
                 2.2230000000000003`, 66.54700000000001}, {
                 2.2230000000000003`, 62.547}, {87.777, 62.547}, {87.777, 
                 66.54700000000001}}}]}}, AspectRatio -> 1, Axes -> False, 
             Background -> None, Frame -> None, FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {45., {0., 9.}}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"Epidemic Data for Novel Coronavirus COVID-19\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Epidemic-Data-for-Novel-Coronavirus-COVID-19"}, "HyperlinkURL"]}, 
                   "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DataResource\"", "SummaryItem"]}], 
               "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Estimated cases of novel coronavirus (COVID-19, formerly \
known as 2019-nCoV) infection by country or region", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Estimated cases of novel coronavirus (COVID-19, formerly \
known as 2019-nCoV) infection by country or region", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm], 
                    ImageSizeCache -> {340., {2., 7.}}], Appearance -> None, 
                    BaseStyle -> {}, 
                    ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Evaluator -> Automatic, Method -> "Preemptive"], 
                    "SummaryItem"]}], DynamicModuleValues :> {}], 
                "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    ",", "\",\"", "\"Health\"", "\"Healthcare\"", 
                    "\"Medicine\"", "\"Statistics\""}, "RowWithSeparators"], 
                   Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ContentTypes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Time Series\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"Novel Coronavirus\"", ",", "\"Coronavirus\"", ",", 
                    RowBox[{"\[LeftSkeleton]", "16", "\[RightSkeleton]"}], 
                    ",", "\"infectious disease\""}], Short], "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://datarepository.wolframcloud.com/resources/\
Epidemic-Data-for-Novel-Coronavirus-COVID-19\"", 
                    "https://datarepository.wolframcloud.com/resources/\
Epidemic-Data-for-Novel-Coronavirus-COVID-19"}, "HyperlinkURL"], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Data Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  DynamicModuleBox[{
                   ResourceSystemClient`Private`typesetstorage$$ = 
                    ResourceSystemClient`Private`typesetstorageLocation, 
                    ResourceSystemClient`Private`info$$ = 
                    Association[
                    "RepositoryLocation" -> 
                    URL["https://www.wolframcloud.com/objects/resourcesystem/\
api/1.0"], "MyAccount" -> False, "Name" -> 
                    "Epidemic Data for Novel Coronavirus COVID-19", "UUID" -> 
                    "dba89a96-2b3a-4254-8824-cb1f9e01a94b", 
                    "ContentElementLocations" -> 
                    Association[
                    "Dataset" -> 
                    LocalObject[
                    "file:///C:/Users/arnoudb.WRI/AppData/Roaming/Wolfram/\
Objects/Resources/dba/dba89a96-2b3a-4254-8824-cb1f9e01a94b/download/Dataset/\
2992664539ec521f/data"]], "ResourceType" -> "DataResource", "ContentSize" -> 
                    Quantity[1982.928, "Kilobytes"], 
                    "ContentElements" -> {"Dataset"}, "Version" -> "42.0.0", 
                    "Description" -> 
                    "Estimated cases of novel coronavirus (COVID-19, formerly \
known as 2019-nCoV) infection by country or region", 
                    "ContentTypes" -> {"Time Series"}, 
                    "Categories" -> {
                    "Health", "Healthcare", "Medicine", "Statistics"}, 
                    "Keywords" -> {
                    "Novel Coronavirus", "Coronavirus", "COVID-19", "covid19",
                     "2019-nCoV", "ncov-2019", "nCoV-2019", "nCoV2019", 
                    "ncov2019", "2019nCoV", "2019-ncov", "2019ncov", "Corona",
                     "Wuhan", "virus", "epidemics", "epidemic", "Infection", 
                    "infectious disease"}, 
                    "Attributes" -> {
                    "LocalCopyable", "CloudCopyable", "Multipart"}, 
                    "LatestUpdate" -> 
                    DateObject[{2020, 3, 10}, "Day", "Gregorian", -5.], 
                    "DefaultReturnFormat" -> "wdf", "AutoUpdate" -> Automatic,
                     "ContentElementAccessType" -> 
                    Association["Dataset" -> "Dataset"], 
                    "ContributorInformation" -> 
                    Association[
                    "PublisherID" -> "Wolfram", "DisplayName" -> 
                    "Wolfram Research", "ContributedBy" -> 
                    Missing["NoInput"]], "DefaultContentElement" -> "Dataset",
                     "Details" -> 
                    "Estimated confirmed COVID-19 infection trend by country \
or region. \nData is based on WHO,\[NonBreakingSpace]U.S. CDC, ECDC,  China \
CDC (CCDC), NHC\[NonBreakingSpace]and\[NonBreakingSpace]DXY. \nData for Hong \
Kong SAR, Macau SAR, and Taiwan is separate from data for China.", "DOI" -> 
                    "https://doi.org/10.24097/wolfram.04123.data", "Format" -> 
                    Association["Dataset" -> "MX"], "InformationElements" -> 
                    Association[], "Originator" -> Missing["NoInput"], 
                    "ReleaseDate" -> 
                    DateObject[{2020, 2, 1}, "Day", "Gregorian", -5.], 
                    "SeeAlso" -> {
                    "Patient Medical Data for Novel Coronavirus COVID-19", 
                    "Genetic Sequences for the SARS-CoV-2 Coronavirus"}, 
                    "ShortName" -> 
                    "Epidemic-Data-for-Novel-Coronavirus-COVID-19", 
                    "SourceMetadata" -> 
                    Association[
                    "Creator" -> 
                    "Johns Hopkins University Center for Systems Science and \
Engineering", "GeographicCoverage" -> "Global", "TemporalCoverage" -> 
                    "21 January, 2020 - Current", "Description" -> 
                    "Tracking the Novel Coronavirus (COVID-19) Global Cases", 
                    "Language" -> "English", "Source" -> 
                    Hyperlink[
                    "Johns Hopkins: Mapping 2019-nCoV", 
                    "https://systems.jhu.edu/research/public-health/ncov/"], 
                    "Title" -> "Novel Coronavirus (COVID-19) Cases"], 
                    "WolframLanguageVersionRequired" -> "10.0", 
                    "ResourceLocations" -> {
                    LocalObject[
                    "file:///C:/Users/arnoudb.WRI/AppData/Roaming/Wolfram/\
Objects/Resources/dba/dba89a96-2b3a-4254-8824-cb1f9e01a94b"]}, 
                    "DownloadedVersion" -> "42.0.0"]}, 
                   DynamicBox[
                    ToBoxes[
                    ResourceSystemClient`Private`info$$ = 
                    ResourceSystemClient`Private`resourceInfo[
                    "dba89a96-2b3a-4254-8824-cb1f9e01a94b"]; If[
                    AssociationQ[ResourceSystemClient`Private`info$$], 
                    ResourceSystemClient`Private`typesetstorage$$[
                    Lookup[
                    ResourceSystemClient`Private`info$$, 
                    "ContentElementLocations", None]], 
                    Missing["NotAvailable"]], StandardForm], 
                    ImageSizeCache -> {20., {0., 7.}}], 
                   DynamicModuleValues :> {}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"dba89a96-2b3a-4254-8824-cb1f9e01a94b\"", "SummaryItem"]}],
                ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"42.0.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "1982.928`", "\"kB\"", "kilobytes", "\"Kilobytes\""}, 
                   "Quantity"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"Dataset\""}, 
                    "RowWithSeparators"], Short[#, 2]& ], "SummaryItem"]}], 
               ""}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[
   Association[
   "Name" -> "Epidemic Data for Novel Coronavirus COVID-19", "UUID" -> 
    "dba89a96-2b3a-4254-8824-cb1f9e01a94b", "ResourceType" -> "DataResource", 
    "Version" -> "42.0.0", "Description" -> 
    "Estimated cases of novel coronavirus (COVID-19, formerly known as \
2019-nCoV) infection by country or region", "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
    "WolframLanguageVersionRequired" -> "10.0", "ContentSize" -> 
    Quantity[1982.928, "Kilobytes"], "ContentElements" -> {"Dataset"}], {
   ResourceSystemBase -> 
    "https://www.wolframcloud.com/objects/resourcesystem/api/1.0"}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7928522520022526`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"4c187966-9e0a-4366-8b8f-a648bc6a82d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<Epidemic Data for Novel Coronavirus COVID-19\>\"",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.7928522660564485`*^9, 3.792852266057448*^9}, {
  3.792852339969154*^9, 3.792852340158159*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e05343a5-659f-4004-bc93-7863a833cfea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
       Association[
        "InitialData" -> 
         TypeSystem`CacheKey[
          7030715672636626209484451679761789896544578981470796294440], 
         "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
            1, {All, "MoreSpecificLocation"} -> 1, {All, "GeoPosition"} -> 
            1, {All, "ConfirmedCases"} -> 1, {All, "RecoveredCases"} -> 
            1, {All, "Deaths"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "AdministrativeDivision" -> 
                TypeSystem`PackageScope`AtomShape[150], "Country" -> 
                TypeSystem`PackageScope`AtomShape[90], "MoreSpecificLocation" -> 
                TypeSystem`PackageScope`AtomShape[60], "GeoPosition" -> 
                TypeSystem`PackageScope`AtomShape[106], "ConfirmedCases" -> 
                TypeSystem`PackageScope`AtomShape[160], "RecoveredCases" -> 
                TypeSystem`PackageScope`AtomShape[160], "Deaths" -> 
                TypeSystem`PackageScope`AtomShape[160]]], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "AdministrativeDivision", "Country", "MoreSpecificLocation", 
             "GeoPosition", "ConfirmedCases", "RecoveredCases", "Deaths"}, {
             TypeSystem`Atom[
              Entity["AdministrativeDivision"]], 
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[Entity], 
             TypeSystem`Atom[GeoPosition], 
             TypeSystem`Atom[TemporalData], 
             TypeSystem`Atom[TemporalData], 
             TypeSystem`Atom[TemporalData]}], 266], "Meta" -> 
         Association["ID" -> 85976850629096], "RowTarget" -> 20, 
         "ColumnTarget" -> 20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
           
           Association[{All, "AdministrativeDivision"} -> 1, {All, "Country"} -> 
            1, {All, "MoreSpecificLocation"} -> 1, {All, "GeoPosition"} -> 
            1, {All, "ConfirmedCases"} -> 1, {All, "RecoveredCases"} -> 
            1, {All, "Deaths"} -> 1], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`RowShape[
               Association[
               "AdministrativeDivision" -> 
                TypeSystem`PackageScope`AtomShape[150], "Country" -> 
                TypeSystem`PackageScope`AtomShape[90], "MoreSpecificLocation" -> 
                TypeSystem`PackageScope`AtomShape[60], "GeoPosition" -> 
                TypeSystem`PackageScope`AtomShape[106], "ConfirmedCases" -> 
                TypeSystem`PackageScope`AtomShape[160], "RecoveredCases" -> 
                TypeSystem`PackageScope`AtomShape[160], "Deaths" -> 
                TypeSystem`PackageScope`AtomShape[160]]], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "AdministrativeDivision", "Country", "MoreSpecificLocation", 
             "GeoPosition", "ConfirmedCases", "RecoveredCases", "Deaths"}, {
             TypeSystem`Atom[
              Entity["AdministrativeDivision"]], 
             TypeSystem`Atom[
              Entity["Country"]], 
             TypeSystem`Atom[Entity], 
             TypeSystem`Atom[GeoPosition], 
             TypeSystem`Atom[TemporalData], 
             TypeSystem`Atom[TemporalData], 
             TypeSystem`Atom[TemporalData]}], 266], "Path" -> {}, 
         "BaseIndices" -> {}, "DisplayedRowCount" -> 20, 
         "DisplayedColumnCount" -> 7, "DataRowCount" -> 266, 
         "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["AdministrativeDivision", 
                    Style[
                    "AdministrativeDivision", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "AdministrativeDivision"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "AdministrativeDivision"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Country", 
                    Style[
                    "Country", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Country"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Country"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["MoreSpecificLocation", 
                    Style[
                    "MoreSpecificLocation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MoreSpecificLocation"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MoreSpecificLocation"}, "ColumnHeader", True], 
                    "Mouse"], " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["GeoPosition", 
                    Style[
                    "GeoPosition", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "GeoPosition"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "GeoPosition"}, "ColumnHeader", True], "Mouse"], " ",
                     ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["ConfirmedCases", 
                    Style[
                    "ConfirmedCases", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "ConfirmedCases"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "ConfirmedCases"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["RecoveredCases", 
                    Style[
                    "RecoveredCases", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "RecoveredCases"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "RecoveredCases"}, "ColumnHeader", True], "Mouse"], 
                    " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Row[{
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Deaths", 
                    Style[
                    "Deaths", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Deaths"}, 1]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Deaths"}, "ColumnHeader", True], "Mouse"], " ", 
                    ""}], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Hubei, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"30.98\[Degree]N 112.3\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Italy\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"43.0\[Degree]N 12.0\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"South Korea\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"36.0\[Degree]N 128.0\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Iran\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"32.0\[Degree]N 53.0\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Guangdong, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"23.34\[Degree]N 113.4\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Henan, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"33.88\[Degree]N 113.6\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Zhejiang, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"29.18\[Degree]N 120.1\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"France\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"47.0\[Degree]N 2.0\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Germany\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"51.0\[Degree]N 9.0\[Degree]E\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Spain\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"40.0\[Degree]N 4.0\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Hunan, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"27.61\[Degree]N 111.7\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Anhui, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"31.83\[Degree]N 117.2\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Jiangxi, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"27.61\[Degree]N 115.7\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Shandong, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"36.34\[Degree]N 118.1\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"35.44\[Degree]N 139.6\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Jiangsu, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"32.97\[Degree]N 119.5\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Chongqing, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"30.06\[Degree]N 107.9\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Sichuan, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"30.62\[Degree]N 102.7\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Japan\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"36.0\[Degree]N 138.0\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"Heilongjiang, China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["AdministrativeDivision"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{150, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["\"China\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Country"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{90, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   Style["-", 
                    GrayLevel[0.85]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MoreSpecificLocation"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    "\"47.86\[Degree]N 127.8\[Degree]E\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["GeoPosition"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{106, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["ConfirmedCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["RecoveredCases"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    
                    RowBox[{
                    "\[LeftGuillemet]", TimeSeries, "\[RightGuillemet]"}], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Deaths"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{160, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 266, 1], {1, 266 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 266, 1], {1, 266 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    266, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    266, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 266, 1], {1, 266 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 266, 1], {1, 266 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                    Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                    Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
                 Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
                "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
              Left, Dividers -> All, FrameStyle -> 
              GrayLevel[0.7490196078431373], 
              BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
             LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
             False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             If[GeneralUtilities`$DebugMode, 
              Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                TypeSystem`NestedGrid`PackagePrivate`formatState[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
      DynamicBox[
       ToBoxes[
        Dataset`DatasetContent[
        1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
         TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
         TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
         TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
          TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm], 
       ImageSizeCache -> {1047., {289., 295.}}, 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> 
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
        Needs["Dataset`"]; 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]], 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7030715672636626209484451679761789896544578981470796294440,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7928523427641954`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"46eafd4c-7225-4b53-b74b-a1b4b19ca665"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ts", "=", 
  RowBox[{"ds", "[", 
   RowBox[{"1", ",", "\"\<ConfirmedCases\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7928523421451845`*^9, 3.792852359734439*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"58aa172c-7a22-4586-9945-082e863e0ba9"],

Cell[BoxData[
 RowBox[{"\[LeftGuillemet]", "TimeSeries", "\[RightGuillemet]"}]], "Output",
 CellChangeTimes->{{3.7928523468372545`*^9, 3.7928523600954437`*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"0333f142-4250-4b39-b0e5-815db89e9b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "ts", "]"}]], "Input",
 CellChangeTimes->{{3.7928523631944857`*^9, 3.7928523730716286`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1ad97bd0-26bb-47bb-a4f4-a6623866495a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 22 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "22", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "444"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 23 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "23", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "444"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 24 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "24", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "549"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 25 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "25", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "761"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 26 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "26", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1058"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 27 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "27", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "1423"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 28 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "28", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "3554"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 29 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "29", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "3554"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 30 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "30", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "4903"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 31 Jan 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "1", ",", "31", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "5806"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 1 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "1", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "7153"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 2 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "2", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "11177"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 3 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "3", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "13522"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 4 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "4", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "16678"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 5 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "5", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "19665"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 6 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "6", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "22112"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 7 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "7", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "24953"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 8 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "8", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "27100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 9 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "9", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "29631"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 10 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "10", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "31728"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 11 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "11", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "33366"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 12 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "12", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "33366"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 13 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "13", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "48206"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 14 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "14", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "54406"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 15 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "15", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "56249"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 16 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "16", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "58182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 17 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "17", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "59989"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 18 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "18", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "61682"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 19 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "19", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "62031"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 20 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "20", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "62442"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 21 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "21", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "62662"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 22 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "22", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "64084"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 23 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "23", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "64084"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 24 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "24", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "64287"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 25 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "25", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "64786"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 26 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "26", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "65187"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 27 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "27", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "65596"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 28 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "28", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "65914"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 29 Feb 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "2", ",", "29", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "66337"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 1 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "1", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "66907"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 2 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "2", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67103"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Tue 3 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "3", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67217"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Wed 4 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "4", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67332"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 5 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "5", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67466"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Fri 6 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "6", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67592"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sat 7 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "7", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67666"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Sun 8 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "8", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67707"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Mon 9 Mar 2020 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "9", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           RowBox[{"-", "5.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "67743"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.792852365912525*^9, 3.792852373365634*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"c4382d45-0668-4ed7-ab94-9d653ece28d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Disable", "[", "\"\<SummaryBox\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.792852325881955*^9, 3.7928523302140164`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"169216ef-eec8-4803-95b9-b1115804ee0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RowBox", "[", 
   RowBox[{"{", 
    RowBox[{"\<\"\[LeftGuillemet]\"\>", ",", "#1", 
     ",", "\<\"\[RightGuillemet]\"\>"}], "}"}], "]"}], "&"}]], "Output",
 CellChangeTimes->{3.792852330866026*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ddcc9caa-c056-4b46-b46d-9e81646535f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"names", "=", 
  RowBox[{"EntityList", "[", 
   TemplateBox[{"\"all US states with District of Columbia\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}], 
       "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
    "EntityClass"], "]"}]}]], "Input",
 CellChangeTimes->{{3.7928525822930303`*^9, 3.7928526076973915`*^9}, {
  3.7928528881662197`*^9, 3.792852895907332*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"eb8b4f88-4d43-49b9-bb43-ac7777c8ff40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Alabama, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Alaska, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alaska\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Arizona, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Arizona\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Arkansas, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Arkansas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"California, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Colorado, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Colorado\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Connecticut, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Connecticut\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Connecticut\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Delaware, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Delaware\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"District of Columbia, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"DistrictOfColumbia\"", ",", "\"UnitedStates\""}], 
           "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"DistrictOfColumbia\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Florida, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Florida\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Georgia, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Georgia\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hawaii, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Idaho, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Idaho\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Idaho\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Illinois, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Illinois\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indiana, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Indiana\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iowa, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Iowa\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Iowa\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kansas, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Kansas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kansas\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kentucky, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Kentucky\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Louisiana, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Louisiana\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Maine, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Maine\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maine\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Maryland, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Massachusetts, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Massachusetts\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Massachusetts\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Michigan, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Michigan\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Minnesota, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Minnesota\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mississippi, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Mississippi\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Mississippi\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Missouri, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Missouri\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Montana, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Montana\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Montana\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nebraska, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Nebraska\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nevada, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Nevada\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Hampshire, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NewHampshire\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewHampshire\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Jersey, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NewJersey\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewJersey\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Mexico, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NewMexico\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewMexico\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"New York, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NewYork\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"North Carolina, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NorthCarolina\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NorthCarolina\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"North Dakota, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"NorthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthDakota\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ohio, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Ohio\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oklahoma, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Oklahoma\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oregon, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Oregon\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pennsylvania, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Pennsylvania\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Pennsylvania\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rhode Island, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"RhodeIsland\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"RhodeIsland\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Carolina, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"SouthCarolina\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"SouthCarolina\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Dakota, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"SouthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthDakota\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tennessee, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Tennessee\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Texas, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Texas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Utah, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Utah\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Utah\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vermont, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Vermont\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Virginia, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Virginia\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Washington, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Washington\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Washington\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"West Virginia, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"WestVirginia\"", ",", "\"UnitedStates\""}], "}"}]}], 
       "]"}], "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"WestVirginia\\\", \\\"UnitedStates\\\"}]\"", 
     "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wisconsin, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Wisconsin\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
      "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wyoming, United States\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Wyoming\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wyoming\\\", \
\\\"UnitedStates\\\"}]\"", "\"administrative division\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7928525993432746`*^9, 3.792852608053397*^9}, {
  3.7928528888552294`*^9, 3.7928528962053366`*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"47798dc2-ab8a-4ac9-9944-4eeac7aeab7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<Name\>\"", "]"}], "&"}], ",", 
   TemplateBox[{"\"all US states with District of Columbia\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}], 
       "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
    "EntityClass"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7928529035244384`*^9, 3.792852917501636*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"52d0d0f0-af0a-4d92-9936-61f301efeaee"],

Cell[BoxData[
 RowBox[{"EntityClass", "[", 
  RowBox[{
   RowBox[{"\<\"AdministrativeDivision\"\>", "[", "\<\"Name\"\>", "]"}], ",", 
   RowBox[{"\<\"AllUSStatesPlusDC\"\>", "[", "\<\"Name\"\>", "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.79285291418559*^9, 3.7928529176856413`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"524dda34-e1cc-432b-9ac7-1ff0a5b628d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityMap", "[", 
   RowBox[{"function_Function", ",", "class_EntityClass"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{"function", ",", 
    RowBox[{"EntityList", "[", "class", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7928529333728623`*^9, 3.792852968795367*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c298a43d-7fd8-4d74-b62d-8e997f935b7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<Name\>\"", "]"}], "&"}], ",", 
   TemplateBox[{"\"all US states with District of Columbia\"", 
     RowBox[{"EntityClass", "[", 
       RowBox[{"\"AdministrativeDivision\"", ",", "\"AllUSStatesPlusDC\""}], 
       "]"}], "\"EntityClass[\\\"AdministrativeDivision\\\", \
\\\"AllUSStatesPlusDC\\\"]\"", "\"administrative divisions\""},
    "EntityClass"]}], "]"}]], "Input",
 CellChangeTimes->{{3.79285296989338*^9, 3.7928529806035347`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"86b1e555-fd8d-4f1d-b7d1-87642b9bd77a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Alabama, United States\"\>", 
   ",", "\<\"Alaska, United States\"\>", 
   ",", "\<\"Arizona, United States\"\>", 
   ",", "\<\"Arkansas, United States\"\>", 
   ",", "\<\"California, United States\"\>", 
   ",", "\<\"Colorado, United States\"\>", 
   ",", "\<\"Connecticut, United States\"\>", 
   ",", "\<\"Delaware, United States\"\>", 
   ",", "\<\"District of Columbia, United States\"\>", 
   ",", "\<\"Florida, United States\"\>", 
   ",", "\<\"Georgia, United States\"\>", 
   ",", "\<\"Hawaii, United States\"\>", ",", "\<\"Idaho, United States\"\>", 
   ",", "\<\"Illinois, United States\"\>", 
   ",", "\<\"Indiana, United States\"\>", ",", "\<\"Iowa, United States\"\>", 
   ",", "\<\"Kansas, United States\"\>", 
   ",", "\<\"Kentucky, United States\"\>", 
   ",", "\<\"Louisiana, United States\"\>", 
   ",", "\<\"Maine, United States\"\>", 
   ",", "\<\"Maryland, United States\"\>", 
   ",", "\<\"Massachusetts, United States\"\>", 
   ",", "\<\"Michigan, United States\"\>", 
   ",", "\<\"Minnesota, United States\"\>", 
   ",", "\<\"Mississippi, United States\"\>", 
   ",", "\<\"Missouri, United States\"\>", 
   ",", "\<\"Montana, United States\"\>", 
   ",", "\<\"Nebraska, United States\"\>", 
   ",", "\<\"Nevada, United States\"\>", 
   ",", "\<\"New Hampshire, United States\"\>", 
   ",", "\<\"New Jersey, United States\"\>", 
   ",", "\<\"New Mexico, United States\"\>", 
   ",", "\<\"New York, United States\"\>", 
   ",", "\<\"North Carolina, United States\"\>", 
   ",", "\<\"North Dakota, United States\"\>", 
   ",", "\<\"Ohio, United States\"\>", ",", "\<\"Oklahoma, United States\"\>",
    ",", "\<\"Oregon, United States\"\>", 
   ",", "\<\"Pennsylvania, United States\"\>", 
   ",", "\<\"Rhode Island, United States\"\>", 
   ",", "\<\"South Carolina, United States\"\>", 
   ",", "\<\"South Dakota, United States\"\>", 
   ",", "\<\"Tennessee, United States\"\>", 
   ",", "\<\"Texas, United States\"\>", ",", "\<\"Utah, United States\"\>", 
   ",", "\<\"Vermont, United States\"\>", 
   ",", "\<\"Virginia, United States\"\>", 
   ",", "\<\"Washington, United States\"\>", 
   ",", "\<\"West Virginia, United States\"\>", 
   ",", "\<\"Wisconsin, United States\"\>", 
   ",", "\<\"Wyoming, United States\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.792852981025541*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"b484e9a0-7fdf-4b2a-97f9-84e52b3e7be6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Map", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"state", "=", 
           RowBox[{"First", "[", 
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"#", "[", "\"\<Name\>\"", "]"}], ",", "\"\<,\>\""}], 
             "]"}], "]"}]}], ",", "url"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"url", "=", 
          RowBox[{"First", "@", 
           RowBox[{"WebSearch", "[", 
            RowBox[{
             RowBox[{
             "state", "<>", "\"\< department of health site:gov\>\""}], ",", 
             "\"\<Hyperlinks\>\"", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Google\>\""}], ",", 
             RowBox[{"MaxItems", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<state\>\"", "\[Rule]", "#"}], ",", 
           RowBox[{"\"\<url\>\"", "\[Rule]", 
            RowBox[{"URL", "[", 
             RowBox[{"URLParse", "[", 
              RowBox[{"url", ",", "\"\<AbsoluteDomain\>\""}], "]"}], 
             "]"}]}]}], "|>"}]}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"EntityList", "[", "names", "]"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.792852547947528*^9, 3.79285255952069*^9}, {
  3.792852627828198*^9, 3.7928526658017373`*^9}, {3.7928527403317957`*^9, 
  3.7928528717149897`*^9}, {3.792852997515774*^9, 3.7928530204521008`*^9}, {
  3.792853206863675*^9, 3.7928533149587545`*^9}, {3.792853348921228*^9, 
  3.792853351982272*^9}, {3.792853813348598*^9, 3.7928538275387945`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"687482f1-d3cf-4aac-a48b-701beb846cfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"Dataset", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.792853468136899*^9, 3.792853468502902*^9}, {
  3.7928538363729167`*^9, 3.792853840345971*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"fa1c32fe-74d9-4983-9ebd-af58a339b521"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Alabama", "UnitedStates"}], "url" -> 
        URL["http://www.alabamapublichealth.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Alaska", "UnitedStates"}], "url" -> 
        URL["http://dhss.alaska.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Arizona", "UnitedStates"}], "url" -> 
        URL["https://www.azdhs.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Arkansas", "UnitedStates"}], "url" -> 
        URL["https://www.healthy.arkansas.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"California", "UnitedStates"}], "url" -> 
        URL["https://www.cdph.ca.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Colorado", "UnitedStates"}], "url" -> 
        URL["https://www.colorado.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Connecticut", "UnitedStates"}], "url" -> 
        URL["https://portal.ct.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Delaware", "UnitedStates"}], "url" -> 
        URL["https://dhss.delaware.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"DistrictOfColumbia", "UnitedStates"}], 
        "url" -> URL["https://dchealth.dc.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Florida", "UnitedStates"}], "url" -> 
        URL["http://www.floridahealth.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Georgia", "UnitedStates"}], "url" -> 
        URL["https://dph.georgia.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Hawaii", "UnitedStates"}], "url" -> 
        URL["https://health.hawaii.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Idaho", "UnitedStates"}],
         "url" -> URL["https://healthandwelfare.idaho.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Illinois", "UnitedStates"}], "url" -> 
        URL["http://www.dph.illinois.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Indiana", "UnitedStates"}], "url" -> 
        URL["https://www.in.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Iowa", "UnitedStates"}], 
        "url" -> URL["https://idph.iowa.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Kansas", "UnitedStates"}], "url" -> 
        URL["http://www.kdheks.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Kentucky", "UnitedStates"}], "url" -> 
        URL["https://chfs.ky.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Louisiana", "UnitedStates"}], "url" -> 
        URL["http://ldh.la.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Maine", "UnitedStates"}],
         "url" -> URL["https://www.maine.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Maryland", "UnitedStates"}], "url" -> 
        URL["https://health.maryland.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Massachusetts", "UnitedStates"}], "url" -> 
        URL["https://www.mass.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Michigan", "UnitedStates"}], "url" -> 
        URL["https://www.michigan.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Minnesota", "UnitedStates"}], "url" -> 
        URL["http://www.health.minnesota.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Mississippi", "UnitedStates"}], "url" -> 
        URL["https://msdh.ms.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Missouri", "UnitedStates"}], "url" -> 
        URL["https://health.mo.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Montana", "UnitedStates"}], "url" -> 
        URL["https://dphhs.mt.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Nebraska", "UnitedStates"}], "url" -> 
        URL["http://dhhs.ne.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Nevada", "UnitedStates"}], "url" -> 
        URL["http://dhhs.nv.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NewHampshire", "UnitedStates"}], "url" -> 
        URL["https://www.dhhs.nh.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NewJersey", "UnitedStates"}], "url" -> 
        URL["https://www.nj.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NewMexico", "UnitedStates"}], "url" -> 
        URL["https://www.env.nm.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NewYork", "UnitedStates"}], "url" -> 
        URL["https://www.health.ny.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NorthCarolina", "UnitedStates"}], "url" -> 
        URL["https://www.ncdhhs.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"NorthDakota", "UnitedStates"}], "url" -> 
        URL["https://www.health.nd.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Ohio", "UnitedStates"}], 
        "url" -> URL["https://odh.ohio.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Oklahoma", "UnitedStates"}], "url" -> 
        URL["https://www.ok.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Oregon", "UnitedStates"}], "url" -> 
        URL["http://public.health.oregon.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Pennsylvania", "UnitedStates"}], "url" -> 
        URL["https://www.health.pa.gov/"]], 
       Association[
       "state" -> 
        Entity["AdministrativeDivision", {"RhodeIsland", "UnitedStates"}], 
        "url" -> URL["https://health.ri.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"SouthCarolina", "UnitedStates"}], "url" -> 
        URL["https://www.scdhec.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"SouthDakota", "UnitedStates"}], "url" -> 
        URL["https://doh.sd.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Tennessee", "UnitedStates"}], "url" -> 
        URL["https://www.tn.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Texas", "UnitedStates"}],
         "url" -> URL["https://www.dshs.texas.gov/"]], 
       Association[
       "state" -> Entity["AdministrativeDivision", {"Utah", "UnitedStates"}], 
        "url" -> URL["https://health.utah.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Vermont", "UnitedStates"}], "url" -> 
        URL["https://www.healthvermont.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Virginia", "UnitedStates"}], "url" -> 
        URL["http://www.vdh.virginia.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Washington", "UnitedStates"}], "url" -> 
        URL["https://www.doh.wa.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"WestVirginia", "UnitedStates"}], "url" -> 
        URL["https://dhhr.wv.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Wisconsin", "UnitedStates"}], "url" -> 
        URL["https://www.dhs.wisconsin.gov/"]], 
       Association[
       "state" -> Entity[
         "AdministrativeDivision", {"Wyoming", "UnitedStates"}], "url" -> 
        URL["https://health.wyo.gov/"]]}, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, "state"} -> 1, {All, "url"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "state" -> TypeSystem`PackageScope`AtomShape[150], "url" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"state", "url"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[URL]}], 51], "Meta" -> 
     Association["ID" -> 57350893616369], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "state"} -> 1, {All, "url"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "state" -> TypeSystem`PackageScope`AtomShape[150], "url" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"state", "url"}, {
         TypeSystem`Atom[
          Entity["AdministrativeDivision"]], 
         TypeSystem`Atom[URL]}], 51], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     51, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["state", 
                    Style[
                    "state", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "state"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "state"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["url", 
                    Style[
                    "url", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "url"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "url"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Alabama, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://www.alabamapublichealth.gov/", 
                URL["http://www.alabamapublichealth.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Alaska, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://dhss.alaska.gov/", 
                URL["http://dhss.alaska.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Arizona, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.azdhs.gov/", 
                URL["https://www.azdhs.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Arkansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.healthy.arkansas.gov/", 
                URL["https://www.healthy.arkansas.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"California, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.cdph.ca.gov/", 
                URL["https://www.cdph.ca.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Colorado, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.colorado.gov/", 
                URL["https://www.colorado.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Connecticut, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://portal.ct.gov/", 
                URL["https://portal.ct.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Delaware, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://dhss.delaware.gov/", 
                URL["https://dhss.delaware.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"District of Columbia, United States\"", FontColor -> 
                 RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://dchealth.dc.gov/", 
                URL["https://dchealth.dc.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Florida, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://www.floridahealth.gov/", 
                URL["http://www.floridahealth.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Georgia, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://dph.georgia.gov/", 
                URL["https://dph.georgia.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Hawaii, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://health.hawaii.gov/", 
                URL["https://health.hawaii.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Idaho, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://healthandwelfare.idaho.gov/", 
                URL["https://healthandwelfare.idaho.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://www.dph.illinois.gov/", 
                URL["http://www.dph.illinois.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Indiana, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.in.gov/", 
                URL["https://www.in.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Iowa, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://idph.iowa.gov/", 
                URL["https://idph.iowa.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Kansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://www.kdheks.gov/", 
                URL["http://www.kdheks.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Kentucky, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://chfs.ky.gov/", 
                URL["https://chfs.ky.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "\"Louisiana, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["http://ldh.la.gov/", 
                URL["http://ldh.la.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Maine, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{150, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink["https://www.maine.gov/", 
                URL["https://www.maine.gov/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["url"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 51, 1], {1, 51 - -20 + 1}], Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 51, 1], {1, 51 - -20 + 1}], Appearance -> None],
                     " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    51, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    51, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 51, 1], {1, 51 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 51, 1], {1, 51 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
        TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
     ImageSizeCache->{482., {277., 283.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7928534688539095`*^9, 3.7928540810707436`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"7cf09e58-4d3b-40d4-bce4-cfb08eef2932"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"SystemOpen", ",", 
   RowBox[{"Normal", "[", 
    RowBox[{"ds", "[", 
     RowBox[{"All", ",", "\"\<url\>\""}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7928540863258123`*^9, 3.792854124532346*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"48045bed-fe8f-4a4a-87fd-a8605e4fa6ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", 
   "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", ",", "Null", 
   ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.7928540912658834`*^9, 3.792854125310357*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"d1af2957-2378-482b-91dd-c2590361211b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "\"\<Iowa\>\"", "\[Rule]", 
    "\"\<https://idph.iowa.gov/Emerging-Health-Issues/Novel-Coronavirus\>\""}]\
, ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Colorado\>\"", "\[Rule]", 
    "\"\<https://www.colorado.gov/cdphe/2019-novel-coronavirus\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Alabama\>\"", "\[Rule]", 
    "\"\<http://alabamapublichealth.gov/infectiousdiseases/2019-coronavirus.\
html\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Indiana\>\"", "\[Rule]", 
    "\"\<https://www.in.gov/isdh/28470.htm\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Louisiana\>\"", "\[Rule]", 
    "\"\<http://ldh.la.gov/index.cfm/page/3835\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Washington DC\>\"", "\[Rule]", 
    "\"\<https://coronavirus.dc.gov/\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Montana\>\"", "\[Rule]", 
    "\"\<https://dphhs.mt.gov/publichealth/cdepi/diseases/coronavirusmt\>\""}]\
, ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Florida\>\"", "\[Rule]", 
    "\"\<http://www.floridahealth.gov/diseases-and-conditions/COVID-19/index.\
html\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Connecticut\>\"", "\[Rule]", 
    "\"\<https://portal.ct.gov/Coronavirus\>\""}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Washington\>\"", "\[Rule]", 
    "\"\<https://www.doh.wa.gov/Emergencies/Coronavirus\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "\"\<Massachusetts\>\"", "\[Rule]", 
    "\"\<https://www.mass.gov/resource/information-on-the-outbreak-of-\
coronavirus-disease-2019-covid-19\>\""}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7928542662793107`*^9, 3.7928543406853385`*^9}, {
  3.7928543846219454`*^9, 3.7928544983195124`*^9}, {3.7928545432881308`*^9, 
  3.7928545491192136`*^9}, {3.79285459080958*^9, 3.7928546257920794`*^9}, {
  3.7928546649685326`*^9, 3.792854670680609*^9}, {3.792854740704574*^9, 
  3.792854755432778*^9}},ExpressionUUID->"7710f885-c470-421f-82c6-\
64382dfb3b5e"]
},
WindowSize->{960, 1018},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules->{
 "DocuToolsSettingsInternal" -> {
   "$ApplicationName" -> "smartcvs", "$LinkBase" -> "smartcvs", 
    "$ApplicationDirectory" -> "D:\\smartcvs\\", "$DocumentationDirectory" -> 
    "D:\\smartcvs\\English\\", "$UseNewPageDialog" -> "", "$PacletVersion" -> 
    "0.10.2210"}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 7, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"10d8fffc-facf-4749-bd4a-e59cee11bae4"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 168, 3, 28, "Input",ExpressionUUID->"51a5f1f3-2b83-43f6-a1fa-02a08e5976c9"],
Cell[CellGroupData[{
Cell[751, 27, 267, 4, 28, "Input",ExpressionUUID->"4b06dcf3-10e9-464d-aaf9-a5d1351feb3f"],
Cell[1021, 33, 423, 10, 23, "Message",ExpressionUUID->"b79fc2a4-0ee7-450d-89f4-d711baee8de1"],
Cell[1447, 45, 24098, 467, 209, "Output",ExpressionUUID->"4c187966-9e0a-4366-8b8f-a648bc6a82d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25582, 517, 342, 7, 28, "Input",ExpressionUUID->"e05343a5-659f-4004-bc93-7863a833cfea"],
Cell[25927, 526, 152565, 3030, 603, "Output",ExpressionUUID->"46eafd4c-7225-4b53-b74b-a1b4b19ca665"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178529, 3561, 270, 5, 28, "Input",ExpressionUUID->"58aa172c-7a22-4586-9945-082e863e0ba9"],
Cell[178802, 3568, 238, 3, 32, "Output",ExpressionUUID->"0333f142-4250-4b39-b0e5-815db89e9b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179077, 3576, 208, 3, 28, "Input",ExpressionUUID->"1ad97bd0-26bb-47bb-a4f4-a6623866495a"],
Cell[179288, 3581, 32882, 868, 575, "Output",ExpressionUUID->"c4382d45-0668-4ed7-ab94-9d653ece28d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212207, 4454, 223, 3, 28, "Input",ExpressionUUID->"169216ef-eec8-4803-95b9-b1115804ee0d"],
Cell[212433, 4459, 311, 7, 32, "Output",ExpressionUUID->"ddcc9caa-c056-4b46-b46d-9e81646535f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212781, 4471, 609, 11, 40, "Input",ExpressionUUID->"eb8b4f88-4d43-49b9-bb43-ac7777c8ff40"],
Cell[213393, 4484, 19695, 422, 358, "Output",ExpressionUUID->"47798dc2-ab8a-4ac9-9944-4eeac7aeab7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233125, 4911, 605, 12, 40, "Input",ExpressionUUID->"52d0d0f0-af0a-4d92-9936-61f301efeaee"],
Cell[233733, 4925, 370, 7, 32, "Output",ExpressionUUID->"524dda34-e1cc-432b-9ac7-1ff0a5b628d0"]
}, Open  ]],
Cell[234118, 4935, 393, 8, 28, "Input",ExpressionUUID->"c298a43d-7fd8-4d74-b62d-8e997f935b7d"],
Cell[CellGroupData[{
Cell[234536, 4947, 610, 12, 40, "Input",ExpressionUUID->"86b1e555-fd8d-4f1d-b7d1-87642b9bd77a"],
Cell[235149, 4961, 2432, 50, 266, "Output",ExpressionUUID->"b484e9a0-7fdf-4b2a-97f9-84e52b3e7be6"]
}, Open  ]],
Cell[237596, 5014, 1890, 43, 145, "Input",ExpressionUUID->"687482f1-d3cf-4aac-a48b-701beb846cfb"],
Cell[CellGroupData[{
Cell[239511, 5061, 283, 5, 28, "Input",ExpressionUUID->"fa1c32fe-74d9-4983-9ebd-af58a339b521"],
Cell[239797, 5068, 70073, 1405, 579, "Output",ExpressionUUID->"7cf09e58-4d3b-40d4-bce4-cfb08eef2932"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309907, 6478, 338, 7, 28, "Input",ExpressionUUID->"48045bed-fe8f-4a4a-87fd-a8605e4fa6ee"],
Cell[310248, 6487, 902, 14, 72, "Output",ExpressionUUID->"d1af2957-2378-482b-91dd-c2590361211b"]
}, Open  ]],
Cell[311165, 6504, 2232, 51, 358, "Input",ExpressionUUID->"7710f885-c470-421f-82c6-64382dfb3b5e"]
}
]
*)

