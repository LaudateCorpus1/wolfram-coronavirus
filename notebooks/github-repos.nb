(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    271434,       6381]
NotebookOptionsPosition[    234827,       5967]
NotebookOutlinePosition[    235230,       5983]
CellTagsIndexPosition[    235187,       5980]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"file", "=", 
  RowBox[{
  "URLDownload", "[", 
   "\"\<https://img1.dxycdn.com/2020/0203/561/3394511511061134801-135.png\>\"\
", "]"}]}]], "Input",
 CellChangeTimes->{{3.7897415004221816`*^9, 3.7897415167403717`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"06120850-5f41-494b-8210-ede3bffba84b"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<PNG\>\"", ",", "\"\<XMP\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7897419028000064`*^9, 3.7897419237822556`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"3697c5e1-45e9-4e8a-a8c2-78f7e8b0bfb9"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"file", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<PNG\>\"", ",", "\"\<Comments\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7897419028000064`*^9, 3.7897419664742794`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"bd66e8f5-b64c-4f25-b6f7-8b9657844443"],

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"All", ",", "\"\<AdministrativeDivision\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7897420922647867`*^9, 3.7897421013109074`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"fa3b2450-d1f7-4d8d-bc08-14c78eae08ac"],

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<https://github.com/login/oauth/authorize?client_id=arnoudbuzing&\
redirect_uri=https://www.wolfram.com\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7897449928871045`*^9, 3.789745021876433*^9}, {
  3.7897450922202277`*^9, 3.7897450953092628`*^9}, {3.789745166186065*^9, 
  3.7897451902073345`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"30411d89-a59c-45ec-baca-63b27fd9ce41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HTTPRequest", "[", 
  RowBox[{
   RowBox[{"\"\<https://api.github.com/search/repositories?page=\>\"", "<>", 
    RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<&q=coronavirus\>\""}], 
   ",", 
   RowBox[{"<|", 
    RowBox[{"\"\<Headers\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
       RowBox[{"\"\<token \>\"", "<>", "token"}]}], "}"}]}], "|>"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7898206544407363`*^9, 3.7898206609199543`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4c1ff1ba-2b47-4440-887f-5d20a3c2de3c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPRequest",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"GET\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    TagBox[
                    "\"https://api.github.com/search/repositories?page=i&q=\
coronavirus\"", Short], 
                    "https://api.github.com/search/repositories?page=i&q=\
coronavirus"}, "HyperlinkURL"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"GET\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    TagBox[
                    "\"https://api.github.com/search/repositories?page=i&q=\
coronavirus\"", Short], 
                    "https://api.github.com/search/repositories?page=i&q=\
coronavirus"}, "HyperlinkURL"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPRequest[
  "https://api.github.com/search/repositories?page=i&q=coronavirus", 
   Association[
   "Headers" -> {
     "Authorization" -> "token b24fb346da91bde2762051f73f2d9dde41ac59e0"}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.789820685513794*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"2719b1b4-7f33-42b3-a0d8-44de5b9591a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"more", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"more", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"search", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"HTTPRequest", "[", 
        RowBox[{
         RowBox[{"\"\<https://api.github.com/search/repositories?page=\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          "\"\<&q=coronavirus\>\""}], ",", 
         RowBox[{"<|", 
          RowBox[{"\"\<Headers\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
             RowBox[{"\"\<token \>\"", "<>", "token"}]}], "}"}]}], "|>"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"json", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"search", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"Length", "[", "json", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "json", "]"}], "=!=", "3"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}], ">", "0"}], ",", 
       "Null", ",", 
       RowBox[{"more", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7897455431293077`*^9, 3.7897455994161572`*^9}, {
   3.7897480915230665`*^9, 3.7897481293775277`*^9}, {3.7897481815960894`*^9, 
   3.7897481827621*^9}, {3.7897482440850425`*^9, 3.7897484190110197`*^9}, {
   3.7897484934288244`*^9, 3.789748519132101*^9}, {3.789748593422042*^9, 
   3.789748600745116*^9}, {3.78974874043098*^9, 3.789748770221323*^9}, {
   3.789748809238738*^9, 3.789748810988757*^9}, {3.7897488681444035`*^9, 
   3.7897489505752788`*^9}, 3.7898206936120663`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Echo",
 CellChangeTimes->{
  3.789820701893344*^9},ExpressionUUID->"817abbcf-31dc-4b2f-aeda-\
bf97e9a2a77f"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207036294036`*^9},ExpressionUUID->"714d1974-952a-4a98-8bc1-\
c80340248e36"],

Cell[BoxData["2"], "Echo",
 CellChangeTimes->{
  3.7898207046484365`*^9},ExpressionUUID->"4e1a3809-5758-4a9d-892d-\
9afb915f3563"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820706490503*^9},ExpressionUUID->"a054c463-5fd2-4b19-a26d-\
9fdae858e5a0"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820707501532*^9},ExpressionUUID->"ea8aa9b8-7d58-40b9-b9e9-\
907b28971998"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207089795856`*^9},ExpressionUUID->"c963fbf3-8e18-4d40-a6cd-\
8eebadf40dbc"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.789820709988616*^9},ExpressionUUID->"259864d1-607f-4e9c-a638-\
24693a405441"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820711440662*^9},ExpressionUUID->"2d62e003-b71b-4cef-b47f-\
d3836d3e22ba"],

Cell[BoxData["5"], "Echo",
 CellChangeTimes->{
  3.7898207124516983`*^9},ExpressionUUID->"6d7fe2a6-264c-44be-bccf-\
1d7f83329f5e"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207146367764`*^9},ExpressionUUID->"18235990-89ac-4938-b1bd-\
28480e1137ba"],

Cell[BoxData["6"], "Echo",
 CellChangeTimes->{
  3.789820715647806*^9},ExpressionUUID->"d38255dd-b307-4c74-a43c-\
2497d7d582c2"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207178208833`*^9},ExpressionUUID->"72e50399-0ee5-46cb-806e-\
11af1e69f46a"],

Cell[BoxData["7"], "Echo",
 CellChangeTimes->{
  3.7898207188309135`*^9},ExpressionUUID->"0795cd1c-0fb6-4442-a4bc-\
68b8cbc8cb99"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820720609973*^9},ExpressionUUID->"97c34ede-f0a5-43ba-a176-\
4ecdad1d520f"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.789820721621007*^9},ExpressionUUID->"9c24ac90-5c03-4c3e-94ac-\
83650903df27"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207231800756`*^9},ExpressionUUID->"719e66e5-0f22-4b3a-a7b3-\
fcf387d022a5"],

Cell[BoxData["9"], "Echo",
 CellChangeTimes->{
  3.7898207241901054`*^9},ExpressionUUID->"98304163-87ad-47a3-9b33-\
1a24dc280975"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820725867166*^9},ExpressionUUID->"f05714bd-962b-4a5d-991e-\
354ab7b57828"],

Cell[BoxData["10"], "Echo",
 CellChangeTimes->{
  3.7898207268761935`*^9},ExpressionUUID->"88849a3e-b6d9-47bd-b97a-\
25056e9de461"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.789820728735262*^9},ExpressionUUID->"19462fbb-4350-41be-96bb-\
2f608702645b"],

Cell[BoxData["11"], "Echo",
 CellChangeTimes->{
  3.7898207297812967`*^9},ExpressionUUID->"8a78e3bf-59ff-433c-8b63-\
89d406e80529"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207309933343`*^9},ExpressionUUID->"214d7b4f-acbb-44d6-8a0a-\
c4a537d7ef83"],

Cell[BoxData["12"], "Echo",
 CellChangeTimes->{
  3.7898207320033693`*^9},ExpressionUUID->"ea0d8629-8920-4f1f-ba22-\
688302b3a718"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7898207321813917`*^9},ExpressionUUID->"cb23007e-49b5-451f-901e-\
039c164cf67e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Flatten", "[", "result", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897485526625276`*^9, 3.7897485780198717`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],

Cell[BoxData["324"], "Output",
 CellChangeTimes->{3.789748986976712*^9, 3.7898207365035315`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"014ab079-a96a-4379-85c6-699b1b620902"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<name\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<name\>\"", "]"}]}], ",", 
        RowBox[{"\"\<owner\>\"", "\[Rule]", 
         RowBox[{
          RowBox[{"#", "[", "\"\<owner\>\"", "]"}], "[", "\"\<login\>\"", 
          "]"}]}]}], "|>"}], "&"}], ",", 
     RowBox[{"Flatten", "[", "result", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7897489993198404`*^9, 3.7897490224101105`*^9}, {
  3.7897490545694537`*^9, 3.7897490924458632`*^9}, {3.7897491775737777`*^9, 
  3.789749230686346*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "name" -> "2019-wuhan-coronavirus-data", "owner" -> "globalcitizen"], 
       Association["name" -> "ncov", "owner" -> "nextstrain"], 
       Association[
       "name" -> "Novel-Coronavirus-Updates", "owner" -> "839Studio"], 
       Association["name" -> "choropleth", "owner" -> "ncovis"], 
       Association[
       "name" -> "coronatracker-analytics", "owner" -> "docligot"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "AaronWard"], 
       Association["name" -> "2019-ncov-frontend", "owner" -> "sorxrob"], 
       Association["name" -> "coronavirus", "owner" -> "hysios"], 
       Association[
       "name" -> "2020-new-coronavirus-live-map", "owner" -> "lbj96347"], 
       Association[
       "name" -> "Coronavirus-Epidemic-2019-nCov", "owner" -> "YiranJing"], 
       Association["name" -> "2019-ncov-api", "owner" -> "sorxrob"], 
       Association["name" -> "coronavirus-map", "owner" -> "TIT-Lab"], 
       Association["name" -> "coronavirus", "owner" -> "dreamerjackson"], 
       Association["name" -> "wuhan", "owner" -> "chrism0dwk"], 
       Association[
       "name" -> "wuhan-coronavirus-outbreak", "owner" -> "vilaca"], 
       Association["name" -> "artic-ncov2019", "owner" -> "artic-network"], 
       Association["name" -> "2019-nCoV", "owner" -> "antonlukin"], 
       Association["name" -> "ncov_incubation", "owner" -> "HopkinsIDD"], 
       Association["name" -> "Anti_2019-ncoV", "owner" -> "MeoncStudio"], 
       Association["name" -> "transparent-info", "owner" -> "DnCov"], 
       Association["name" -> "nCovMemory", "owner" -> "2019ncovmemory"], 
       Association["name" -> "coronavirus-stats", "owner" -> "alext234"], 
       Association["name" -> "corona-tracker", "owner" -> "iidx"], 
       Association["name" -> "coronavirus-ds", "owner" -> "pdtyreus"], 
       Association["name" -> "corona", "owner" -> "Xetera"], 
       Association["name" -> "cov", "owner" -> "nextstrain"], 
       Association["name" -> "2020-new-coronavirus", "owner" -> "coddec"], 
       Association["name" -> "red-cross", "owner" -> "WeileiZeng"], 
       Association["name" -> "Coronavirus", "owner" -> "instafluff"], 
       Association["name" -> "coronavirus", "owner" -> "aitahtman"], 
       Association[
       "name" -> "CoronaVirus-2019-nCoV-Live-Tracking", "owner" -> 
        "Kyald1412"], 
       Association["name" -> "DonationChannel", "owner" -> "WuhanZhuRong"], 
       Association["name" -> "Wuhan-Coronavirus-API", "owner" -> "Laeyoung"], 
       Association[
       "name" -> "Coronavirus-Dashboard", "owner" -> "avischiffmann"], 
       Association["name" -> "corona-bot", "owner" -> "the-robot"], 
       Association[
       "name" -> "ncov-data-fetcher", "owner" -> "jarekpelczynski"], 
       Association["name" -> "coronavirus_data", "owner" -> "sijiali57"], 
       Association["name" -> "coronavirus_scrapper", "owner" -> "renyi"], 
       Association[
       "name" -> "SMART-CORONA_VIRUS_DETECTOR", "owner" -> 
        "JordanMicahBennett"], 
       Association["name" -> "corona", "owner" -> "kevinlu1248"], 
       Association["name" -> "Coronavirus", "owner" -> "xcv58"], 
       Association[
       "name" -> "coronavirus-world-map", "owner" -> "labsletemps"], 
       Association["name" -> "2019-nCoV", "owner" -> "yitao94"], 
       Association[
       "name" -> "Coronavirus-Chrome-Extension", "owner" -> 
        "WebDevSimplified"], 
       Association["name" -> "coronavirus-2020", "owner" -> "fangohr"], 
       Association[
       "name" -> "wolfram-coronavirus", "owner" -> "arnoudbuzing"], 
       Association["name" -> "ncov2019", "owner" -> "etchorigin"], 
       Association[
       "name" -> "Coronavirus-Estimation", "owner" -> "JunjieZhouwust"], 
       Association["name" -> "corona", "owner" -> "kaiyz"], 
       Association[
       "name" -> "CoronavirusOdesseyRepo", "owner" -> "Sviper-07"], 
       Association["name" -> "viral-coronavirus", "owner" -> "muditham90"], 
       Association["name" -> "coronavirus-api", "owner" -> "jairoD"], 
       Association["name" -> "GameJame2020", "owner" -> "iPomme"], 
       Association["name" -> "coronavirus", "owner" -> "mshyun"], 
       Association[
       "name" -> "2020-novel-coronavirus", "owner" -> "Cyberist-Edgar"], 
       Association["name" -> "coronavirus-stat", "owner" -> "netqyq"], 
       Association["name" -> "viral-coronavirus", "owner" -> "mudiant"], 
       Association[
       "name" -> "Coronavirus-2019", "owner" -> "Coronavirus2019"], 
       Association["name" -> "dash-coronavirus", "owner" -> "chunyeow"], 
       Association[
       "name" -> "2020-new-coronavirus-info-crawler", "owner" -> "lbj96347"], 
       Association["name" -> "coronavirus", "owner" -> "mcodz"], 
       Association["name" -> "lina.github.io", "owner" -> "lina"], 
       Association["name" -> "coronavirus-data-hq", "owner" -> "stephan227"], 
       Association[
       "name" -> "Coronavirus_quantity_prediction", "owner" -> "POGE0124"], 
       Association["name" -> "coronavirus", "owner" -> "joshuaferr1s"], 
       Association["name" -> "corona", "owner" -> "dranoer"], 
       Association["name" -> "coronavirus-info", "owner" -> "SpencerAung"], 
       Association["name" -> "2019-nCoV", "owner" -> "burgess"], 
       Association["name" -> "mc-2d", "owner" -> "ivan-iliev"], 
       Association["name" -> "2019-ncov", "owner" -> "ricosmall"], 
       Association["name" -> "Wuhan2019", "owner" -> "kealyn"], 
       Association["name" -> "Coronavirus", "owner" -> "iuming"], 
       Association["name" -> "coronavirusapi", "owner" -> "filswa"], 
       Association["name" -> "WuhanCoronavirusDataCrawel", "owner" -> "XuCQ"], 
       Association["name" -> "coronavirus-map", "owner" -> "piscium2010"], 
       Association["name" -> "situation-coronavirus", "owner" -> "aknow2"], 
       Association["name" -> "Coronavirus_Epidemic", "owner" -> "htso"], 
       Association["name" -> "corona-oh-na-na", "owner" -> "ddlan"], 
       Association[
       "name" -> "CoronaV_Challenge", "owner" -> "widscommunityorg"], 
       Association[
       "name" -> "Data-Visualisation--Coronavirus-confirmed-cases", "owner" -> 
        "kianweelee"], 
       Association["name" -> "2019ncov", "owner" -> "eragmus"], 
       Association["name" -> "VirusTracker", "owner" -> "henryshw"], 
       Association["name" -> "cido", "owner" -> "biomedontology"], 
       Association[
       "name" -> "coronavirus-outbreak-log", "owner" -> "aliciawyy"], 
       Association["name" -> "wuhan_coronavirus", "owner" -> "itsyaoyu"], 
       Association["name" -> "epidemicsituation2020", "owner" -> "sanghy"], 
       Association["name" -> "Coronavirus", "owner" -> "QMHTMY"], 
       Association["name" -> "wuhancov", "owner" -> "audreyqyfu"], 
       Association["name" -> "coronatracker", "owner" -> "RuyiLi"], 
       Association["name" -> "Wuhan_Coronavirus", "owner" -> "KezhiLi"], 
       Association[
       "name" -> "WuhanSeedingVsTransmission", "owner" -> "epiforecasts"], 
       Association["name" -> "mers-analysis", "owner" -> "sdwfrost"], 
       Association[
       "name" -> "novel-coronavirus", "owner" -> "martinedoesgis"], 
       Association["name" -> "wuhan", "owner" -> "yx-z"], 
       Association["name" -> "coronavirus-data-ETL", "owner" -> "JenQian"], 
       Association["name" -> "coronavirus-scraper", "owner" -> "AndyLPK247"], 
       Association["name" -> "NCP-Model", "owner" -> "SuperDiscovery"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "ergodiclife"], 
       Association["name" -> "coronavirus_viz", "owner" -> "ljnicol"], 
       Association[
       "name" -> "Wuhan-Coronavirus-Even-Timeline", "owner" -> "ShuuTsubaki"], 
       Association["name" -> "coronavirus-mongodb", "owner" -> "MaBeuLux88"], 
       Association["name" -> "Shanghai2020", "owner" -> "ykl124"], 
       Association[
       "name" -> "The-Rise-of-CoronaVirus", "owner" -> "elvinaqa"], 
       Association["name" -> "coronavirus", "owner" -> "xstarseed"], 
       Association["name" -> "CoronavirusVisualization", "owner" -> "sgfm"], 
       Association[
       "name" -> "CoronavirusObserver", "owner" -> "SuriousCompany"], 
       Association[
       "name" -> "CoronavirusTracking", "owner" -> "jubayer-hossain"], 
       Association["name" -> "2019-nCoV", "owner" -> "perlatex"], 
       Association["name" -> "wuhancv", "owner" -> "liu-zoe"], 
       Association["name" -> "coronavirus", "owner" -> "lukas-jue"], 
       Association["name" -> "coronavirusMap", "owner" -> "donpaul999"], 
       Association["name" -> "coronavirusMonitor", "owner" -> "qingzma"], 
       Association["name" -> "coronavirus", "owner" -> "JackJoeng"], 
       Association["name" -> "coronavirus", "owner" -> "choderalab"], 
       Association["name" -> "2019-nCoV", "owner" -> "ChengF-Lab"], 
       Association["name" -> "2019-ncov", "owner" -> "FrankChen021"], 
       Association["name" -> "CoronaTracker", "owner" -> "bahe007"], 
       Association["name" -> "coronavirus", "owner" -> "yuhanbae06"], 
       Association["name" -> "Coronavirus", "owner" -> "blowsys"], 
       Association["name" -> "coronavirus", "owner" -> "kaixin1976"], 
       Association["name" -> "CoronavirusTracker", "owner" -> "hriewe"], 
       Association["name" -> "CoronavirusHackUCI", "owner" -> "flyffast"], 
       Association["name" -> "wuhan2020-oversea", "owner" -> "PengKuang"], 
       Association[
       "name" -> "2019-n-CoV-Virus-Dashboard", "owner" -> "PranavPable"], 
       Association[
       "name" -> "infection_prediction", "owner" -> "liuyangly25"], 
       Association["name" -> "404-not-found", "owner" -> "bwanglzu"], 
       Association[
       "name" -> "coronavirusRealTimeData", "owner" -> "dizzySummer"], 
       Association["name" -> "true-coronavirus", "owner" -> "apex-stack"], 
       Association["name" -> "coronavirus", "owner" -> "SuperSt3ve"], 
       Association["name" -> "coronavirus", "owner" -> "lprone"], 
       Association["name" -> "Coronavirus", "owner" -> "finateautomata"], 
       Association["name" -> "Coronavirus", "owner" -> "ozpv"], 
       Association["name" -> "coronavirus", "owner" -> "itoic"], 
       Association["name" -> "coronavirus", "owner" -> "toyourheart163"], 
       Association["name" -> "Coronavirus", "owner" -> "herokilito"], 
       Association[
       "name" -> "appex-04-coronavirus", "owner" -> "sta199-sp20-002"], 
       Association["name" -> "Coronavirus", "owner" -> "notfree"], 
       Association["name" -> "Coronavirus", "owner" -> "Schukerz"], 
       Association["name" -> "coronavirus", "owner" -> "nurulc"], 
       Association["name" -> "coronavirus", "owner" -> "bjwa2020"], 
       Association["name" -> "coronaVirus", "owner" -> "DuongThuyet"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "JakeJing"], 
       Association["name" -> "nCoV-2019", "owner" -> "CoDeRgAnEsh"], 
       Association["name" -> "lstm4ncor", "owner" -> "changbing2019"], 
       Association["name" -> "coronavirus-crawling", "owner" -> "chunyeow"], 
       Association["name" -> "2019-nCov", "owner" -> "sungml92"], 
       Association["name" -> "Coronavirus", "owner" -> "Yuriyama"], 
       Association["name" -> "coronavirus", "owner" -> "yarfer"], 
       Association["name" -> "Coronavirus", "owner" -> "GHumorBS"], 
       Association["name" -> "Toronto2020", "owner" -> "ncoronavirus"], 
       Association["name" -> "2019-nCoV", "owner" -> "donghoony1"], 
       Association["name" -> "CoronaVirus-MD", "owner" -> "TheCode-Jedi"], 
       Association["name" -> "DnCov", "owner" -> "DnCov"], 
       Association["name" -> "coronavirus-neo4j", "owner" -> "bovinemagnet"], 
       Association["name" -> "corona_bot", "owner" -> "casperbrike"], 
       Association["name" -> "nCoV-API", "owner" -> "kalzeo"], 
       Association["name" -> "CoronaVirus", "owner" -> "johnmelodyme"], 
       Association["name" -> "coronaVirus", "owner" -> "themarcusaurelius"], 
       Association["name" -> "Coronavirus", "owner" -> "TheGodOfHuaji"], 
       Association["name" -> "coronavirus", "owner" -> "Dork3yyyy"], 
       Association["name" -> "Coronavirus", "owner" -> "joaogrosso"], 
       Association["name" -> "CoronaVirus", "owner" -> "mot200286mot"], 
       Association["name" -> "2019-nCoV_Donation", "owner" -> "leonluleonlu"], 
       Association["name" -> "data2019nCoV", "owner" -> "eebrown"], 
       Association[
       "name" -> "CoronavirusWebsiteTracker", "owner" -> "kalzeo"], 
       Association["name" -> "coronavirus", "owner" -> "MarGonz7"], 
       Association["name" -> "coronavirus", "owner" -> "cfshi"], 
       Association["name" -> "coronavirus", "owner" -> "juwikuang"], 
       Association["name" -> "nCoV", "owner" -> "EthanGeekFan"], 
       Association["name" -> "novel_coronavirus", "owner" -> "WooilJeong"], 
       Association[
       "name" -> "Coronavirus-Wuhan-nCoV-2019", "owner" -> "ThinkGeo"], 
       Association["name" -> "coronavirus_dashboard", "owner" -> "nyem69"], 
       Association["name" -> "coronavirus", "owner" -> "nickofc"], 
       Association["name" -> "coronavirus", "owner" -> "teddylun"], 
       Association["name" -> "Coronavirus", "owner" -> "alamjane"], 
       Association["name" -> "coronavirus", "owner" -> "Zhnan811"], 
       Association[
       "name" -> "Coronavirus_Bayseian_Modelling", "owner" -> "Koohoko"], 
       Association["name" -> "coronavirus", "owner" -> "colortail"], 
       Association["name" -> "coronavirus", "owner" -> "HardWorkerIlya"], 
       Association["name" -> "coronavirus", "owner" -> "henry123i"], 
       Association["name" -> "coronavirus", "owner" -> "741wcai"], 
       Association["name" -> "coronavirus", "owner" -> "diehard04"], 
       Association["name" -> "coronavirus", "owner" -> "escudero"], 
       Association["name" -> "CoronaVirus", "owner" -> "Ruchit007"], 
       Association[
       "name" -> "propagation-model-for-2019-nCov", "owner" -> "davy868"], 
       Association["name" -> "ncov-api-k8s", "owner" -> "damonYuan"], 
       Association["name" -> "nCoV-2019", "owner" -> "hernanmd"], 
       Association[
       "name" -> "novel-coronavirus-exploratory-analysis", "owner" -> 
        "aejsong"], 
       Association["name" -> "CoronaVirus", "owner" -> "Dajnowicz"], 
       Association["name" -> "CoronaVirus", "owner" -> "NarekSag"], 
       Association["name" -> "coronavirus", "owner" -> "Gazerbeamco"], 
       Association["name" -> "coronavirus", "owner" -> "karolkolodziej"], 
       Association["name" -> "-coronavirus-", "owner" -> "143034"], 
       Association[
       "name" -> "coronavirustracker", "owner" -> "guptaekarigar"], 
       Association["name" -> "coronavirusmap", "owner" -> "daniel2231"], 
       Association["name" -> "coronaviruslamp", "owner" -> "larsgimse"], 
       Association["name" -> "coronavirusanalysis", "owner" -> "PratirupG"], 
       Association["name" -> "coronavirustracker", "owner" -> "nerocui"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "joshualeung"], 
       Association[
       "name" -> "coronavirus-seasonality", "owner" -> "ctedijanto"], 
       Association["name" -> "Coronavirus_ios", "owner" -> "jwktls"], 
       Association[
       "name" -> "coronavirus-virus", "owner" -> "mrmattwright-inc"], 
       Association["name" -> "coronavirus-stats", "owner" -> "optoisolated"], 
       Association["name" -> "coronavirus-website", "owner" -> "maksim72"], 
       Association["name" -> "Coronavirus-macro", "owner" -> "geunm"], 
       Association["name" -> "2019-nCoV_Notes", "owner" -> "nnikniL"], 
       Association[
       "name" -> "coronavirus-protect", "owner" -> "android-apps-apk"], 
       Association[
       "name" -> "coronavirus-infographics", "owner" -> "epignatelli"], 
       Association["name" -> "Wuhan-Coronavirus", "owner" -> "JILI1028"], 
       Association["name" -> "coronavirus-map", "owner" -> "pavel-ilin"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "cyrusxzw"], 
       Association["name" -> "coronavirus-dashboard", "owner" -> "tmsharp"], 
       Association["name" -> "Anti-2019-nCoV", "owner" -> "Sun2yKid"], 
       Association[
       "name" -> "corona-virus-data-tracker", "owner" -> "fasalmbt"], 
       Association[
       "name" -> "Coronavirus-things", "owner" -> "developers-arm"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "HesterLim"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "A-Yifeng"], 
       Association["name" -> "coronavirus_project", "owner" -> "nancyyanyu"], 
       Association["name" -> "coronavirus_map", "owner" -> "Olivine-Ryo"], 
       Association["name" -> "Coronavirus-Map", "owner" -> "imsoncod"], 
       Association[
       "name" -> "coronavirus_genbank", "owner" -> "smorfopoulou"], 
       Association[
       "name" -> "coronavirus_gizmo", "owner" -> "andrewadiletta"], 
       Association[
       "name" -> "Coronavirus-Report", "owner" -> "SamuelePolimi"], 
       Association["name" -> "coronavirus_data", "owner" -> "nyem69"], 
       Association["name" -> "Corona-Monitor", "owner" -> "thiennv2896"], 
       Association[
       "name" -> "LSTM4Coronavirusprediction", "owner" -> "changbing2019"], 
       Association["name" -> "wuhan-virus-paper", "owner" -> "edwardcooper"], 
       Association["name" -> "VxAfee", "owner" -> "feraliscatus"], 
       Association[
       "name" -> "coronavirus-detection", "owner" -> "PatornJantara"], 
       Association["name" -> "gmod_coronavirus", "owner" -> "ExtReMLapin"], 
       Association[
       "name" -> "coronavirus-research", "owner" -> "victormaggie"], 
       Association["name" -> "data-coronavirus", "owner" -> "kobkrit"], 
       Association[
       "name" -> "Coronavirus-Tracker", "owner" -> "samjakobcavazos"], 
       Association["name" -> "wuhan", "owner" -> "EnderRL"], 
       Association["name" -> "pandemic2020", "owner" -> "zire"], 
       Association["name" -> "coronavirus-bot", "owner" -> "lichader"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "yongjun21"], 
       Association["name" -> "coronavirus-tracker", "owner" -> "ExpDev07"], 
       Association["name" -> "coronavirus-map", "owner" -> "yixinshi"], 
       Association["name" -> "CoronaVirus-", "owner" -> "Vijayb023"], 
       Association["name" -> "coronavirus-api", "owner" -> "samrahimi"], 
       Association["name" -> "Coronavirus_android", "owner" -> "jwktls"], 
       Association["name" -> "coronavirus-api", "owner" -> "catofsof"], 
       Association["name" -> "Coronavirus_spread", "owner" -> "PrabhaSahiti"], 
       Association["name" -> "coronavirus-map", "owner" -> "yc111"], 
       Association["name" -> "coronavirus-news", "owner" -> "dexterwah"], 
       Association["name" -> "Coronavirus-Analysis", "owner" -> "Fjallen"], 
       Association["name" -> "corona-tracker", "owner" -> "rbrick"], 
       Association["name" -> "2019nCov", "owner" -> "ZhanweiDU"], 
       Association[
       "name" -> "wuhan-stochastic-model", "owner" -> "jdrakephd"], 
       Association[
       "name" -> "coronavirus-data-analysis", "owner" -> "imanpalsingh"], 
       Association["name" -> "CoronaVirusSpread", "owner" -> "Pyxisq"], 
       Association[
       "name" -> "x-coronavirus-volunteer", "owner" -> "craftsman-lab"], 
       Association[
       "name" -> "CoronaVirusMapper", "owner" -> "johnjaiharjose"], 
       Association["name" -> "-", "owner" -> "garchingastronomy"], 
       Association["name" -> "2019-nCoV-", "owner" -> "mame0521"], 
       Association["name" -> "n-Cov2019", "owner" -> "louisnot"], 
       Association["name" -> "Coronavirus-Analysis", "owner" -> "Bohan-S"], 
       Association[
       "name" -> "WuhanCoronaVirusMutationMonitoring", "owner" -> 
        "CalBearKen"], 
       Association["name" -> "wuhan_coronavirus_risk", "owner" -> "dankaki"], 
       Association[
       "name" -> "Visualization_for_Wuhan-Coronavirus_2019-nCov_cases_HK", 
        "owner" -> "easonlai"], 
       Association["name" -> "rn-coronavirus-info", "owner" -> "suhanlee"], 
       Association[
       "name" -> "Coronavirus_Tweets_Analysis", "owner" -> "bhuwanesh340"], 
       Association["name" -> "Coronavirus-Wuhan-101", "owner" -> "yuejoo"], 
       Association[
       "name" -> "interactive-coronavirus-tracker-map", "owner" -> 
        "guardian"], 
       Association[
       "name" -> "2019-novel-coronavirus", "owner" -> "yangmingleiSYSU"], 
       Association[
       "name" -> "A3-coronavirus-alert", "owner" -> "UW-CSE442-WI20"], 
       Association["name" -> "coronavirus-map-backend", "owner" -> "TIT-Lab"], 
       Association[
       "name" -> "CoronaVirusTweetScraper", "owner" -> "realvivekganta"], 
       Association[
       "name" -> "wuhan-coronavirus-prediction-", "owner" -> "Cricetulus"], 
       Association[
       "name" -> "CoronaVirus-Vizualizer", "owner" -> "thegostisdead"], 
       Association["name" -> "CoronaVirusModel", "owner" -> "jonklaric"], 
       Association["name" -> "conronavirus_viz", "owner" -> "diy2learn"], 
       Association["name" -> "ncov-analysis", "owner" -> "anevaluator"], 
       Association["name" -> "KoronaCS", "owner" -> "lumaaaaaa"], 
       Association["name" -> "x-coronavirus-bee", "owner" -> "x-craftsman"], 
       Association["name" -> "x-coronavirus-fee", "owner" -> "x-craftsman"], 
       Association["name" -> "coronavirus_live_map", "owner" -> "AlaaSenjab"], 
       Association["name" -> "2020_wuhan_coronavirus", "owner" -> "odaiwai"], 
       Association[
       "name" -> "2019-nCov-data-collection", "owner" -> "presstofan"], 
       Association[
       "name" -> 
        "Shanghai-During-and-After-Bastyr-Landing-CoronaVirus-Source-", 
        "owner" -> "CoryAndrewHofstad"], 
       Association["name" -> "news_coronavirus_json", "owner" -> "msyazwan"], 
       Association[
       "name" -> "x-coronavirus-apis", "owner" -> "craftsman-lab"], 
       Association["name" -> "2020WuhanCoronavirus", "owner" -> "yuwei1985"], 
       Association["name" -> "CoronaVirusTracker", "owner" -> "kalzeo"], 
       Association["name" -> "CoronaVirusMap", "owner" -> "OBMGIS"], 
       Association[
       "name" -> "Project_2_Coronavirus_-Pneumonia", "owner" -> "peirangxu"], 
       Association[
       "name" -> "x-coronavirus-hospital", "owner" -> "craftsman-lab"], 
       Association[
       "name" -> "Joke.Win32.Coronavirus", "owner" -> "thecatgamer137"], 
       Association["name" -> "AntiCoronavirus2", "owner" -> "hwei"], 
       Association[
       "name" -> "coronavirus-data-hq-api", "owner" -> "stephan227"], 
       Association[
       "name" -> "2019-Novel-Coronavirus-analysis", "owner" -> "muniah"], 
       Association[
       "name" -> "Coronavirus-data-visalization-project", "owner" -> 
        "juliuswuwu"], 
       Association[
       "name" -> "2019-wuhan-coronavirus-data", "owner" -> "perell2014"], 
       Association["name" -> "CoronaVirusMaleware", "owner" -> "HwdTech010"], 
       Association[
       "name" -> "Coronavirus-Data-Visualization", "owner" -> "iam-abbas"], 
       Association[
       "name" -> "Coronavirus-2019-ncov-Predictions-ML", "owner" -> 
        "ciszakdamian"], 
       Association[
       "name" -> "wuhan_2019_coronavirus_model_navigate", "owner" -> 
        "Jinchili"], 
       Association["name" -> "CoronaStats", "owner" -> "raphtlw"], 
       Association["name" -> "2019-nCoV", "owner" -> "cooerson"], 
       Association["name" -> "get-out-game", "owner" -> "duiyu"], 
       Association[
       "name" -> "20200203-international-novel-coronavirus-live", "owner" -> 
        "initiumdev"], 
       Association[
       "name" -> "interactive-coronavirus-tracker-asia-map", "owner" -> 
        "guardian"], 
       Association["name" -> "rumorsbreaker", "owner" -> "standwithwuhan"], 
       Association["name" -> "powerbi-ncov2019", "owner" -> "jenzushsu"], 
       Association["name" -> "Korona", "owner" -> "lumaaaaaa"], 
       Association["name" -> "corona_virus", "owner" -> "flippe3"], 
       Association["name" -> "CSAPP_labs", "owner" -> "DarlingHang"], 
       Association[
       "name" -> "nCov-transportation-subscriber", "owner" -> "Vopaaz"], 
       Association[
       "name" -> "Days-In-China-with-Coronavirus-Spreading", "owner" -> 
        "Nova-Xue"], 
       Association[
       "name" -> "Actualizaciones-Coronavirus-2019-nCoV-Gobierno-de-Espana", 
        "owner" -> "BrunoCdot"], 
       Association[
       "name" -> "-Novel-Coronavirus-2019-nCoV-Outbreake-Timelapse", "owner" -> 
        "aasgary"], 
       Association[
       "name" -> "PROCEDIMIENTO-DE-ACTUACION-2019-nCoV-", "owner" -> 
        "BrunoCdot"], 
       Association[
       "name" -> "StockMarket_Virus_Relationship", "owner" -> "akalia25"], 
       Association[
       "name" -> 
        "SOURCE-OF-CORONAVIRUS-OUTBREAK-BOSC23-HUMAN-LABORATORY-SLAVES", 
        "owner" -> "CoryAndrewHofstad"], 
       Association[
       "name" -> "Eidolon_helvum_CoV_seasonality", "owner" -> "dmontecino"], 
       Association[
       "name" -> 
        "Images-of-CoronaVirus-cells-are-white-blood-cells-swarmed-by-\
Pycnogonida-Larvae", "owner" -> "CoryAndrewHofstad"], 
       Association[
       "name" -> 
        "Extinction-Threat-by-Physalia-Physalis-Pycnogonida-EEE-AIDS-HIV-SARS-\
SMALLPOX-CORONAVIRUS", "owner" -> "Gundam-MS"], 
       Association["name" -> "ncov.io", "owner" -> "ncov-io"], 
       Association["name" -> "2019-nCoV", "owner" -> "mame0521"], 
       Association["name" -> "WuhanWin", "owner" -> "Jonasonw"], 
       Association[
       "name" -> "East-African-bats-and-CoV-shedding", "owner" -> 
        "dmontecino"], 
       Association[
       "name" -> "2019-nCoV-Articles-Compilation", "owner" -> "febrifahmi"], 
       Association["name" -> "FightTheVirus", "owner" -> "kevinxyc1"]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "owner" -> TypeSystem`PackageScope`AtomShape[
             124.80000000000001`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 324], "Meta" -> 
     Association["ID" -> 86947510216165], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[480.00000000000006`], 
            "owner" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 324], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     324, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1326579190][{All, "name"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1326579190][{All, "name"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["owner", 
                    Style[
                    "owner", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1326579190][{All, "owner"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1326579190][{All, "owner"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2019-wuhan-coronavirus-data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["globalcitizen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{1, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nextstrain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{2, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Novel-Coronavirus-Updates", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["839Studio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{3, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["choropleth", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ncovis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{4, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronatracker-analytics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["docligot", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{5, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-analysis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AaronWard", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{6, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-ncov-frontend", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sorxrob", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{7, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["hysios", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{8, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-new-coronavirus-live-map", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{9, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lbj96347", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{9, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Coronavirus-Epidemic-2019-nCov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{10, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["YiranJing", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{10, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-ncov-api", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{11, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sorxrob", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{11, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-map", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{12, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TIT-Lab", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{12, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{13, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dreamerjackson", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{13, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{14, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["chrism0dwk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{14, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan-coronavirus-outbreak", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{15, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["vilaca", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{15, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["artic-ncov2019", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{16, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["artic-network", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{16, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-nCoV", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{17, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["antonlukin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{17, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov_incubation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{18, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HopkinsIDD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{18, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Anti_2019-ncoV", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{19, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MeoncStudio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{19, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["transparent-info", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{20, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DnCov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1326579190][{20, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 324, 1], {1, 324 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 324, 1], {1, 324 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    324, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    324, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190},
                     "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190},
                     "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190},
                     "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190},
                     "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190},
                     "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 324, 1], {1, 324 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 324, 1], {1, 324 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1326579190, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1326579190]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1326579190][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1326579190][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1326579190; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{658., {277., 283.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.789749223375264*^9, 3.789749231476348*^9}, 
   3.7898207405776696`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"9cc6862b-5111-4534-8161-a0794a5441ae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "=", 
   RowBox[{"ImportByteArray", "[", 
    RowBox[{
     RowBox[{"search", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
     "\"\<RawJSON\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
   3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
   3.789745755087923*^9}, {3.7897458756102743`*^9, 3.7897458783683057`*^9}, {
   3.789748097676133*^9, 3.789748098265136*^9}, 3.7897481954432373`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"cc9ca28d-6356-4973-bfc6-5451a28fdce5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
   3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
   3.789745755087923*^9}, {3.7897458756102743`*^9, 3.7897458783683057`*^9}, {
   3.789748097676133*^9, 3.789748098265136*^9}, 3.7897481954432373`*^9, {
   3.7897482527381344`*^9, 3.7897482537221446`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"6fb701e1-2f52-4d7f-9268-c746954bbabf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gettags", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"repo", ",", "owner", ",", "url", ",", "tags"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", ".1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"repo", "=", 
      RowBox[{"assoc", "[", "\"\<name\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"owner", "=", 
      RowBox[{"assoc", "[", "\"\<owner\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"url", "=", 
       RowBox[{"URL", "[", 
        RowBox[{
        "\"\<https://api.github.com/repos/\>\"", "<>", "owner", "<>", 
         "\"\</\>\"", "<>", "repo", "<>", "\"\</topics\>\""}], "]"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"HTTPRequest", "[", 
        RowBox[{"url", ",", 
         RowBox[{"<|", 
          RowBox[{"\"\<Headers\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "\"\<Accept\>\"", "\[Rule]", 
              "\"\<application/vnd.github.mercy-preview+json\>\""}], ",", 
             RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
              RowBox[{"\"\<token \>\"", "<>", "token"}]}]}], "}"}]}], 
          "|>"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"tags", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<owner\>\"", "\[Rule]", "owner"}], ",", 
       RowBox[{"\"\<repo\>\"", "\[Rule]", "repo"}], ",", 
       RowBox[{"\"\<tags\>\"", "\[Rule]", 
        RowBox[{"tags", "[", "\"\<names\>\"", "]"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
  3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
  3.789745755087923*^9}, {3.7897458756102743`*^9, 3.789745963865261*^9}, {
  3.789746016155851*^9, 3.789746057913308*^9}, {3.789746098485759*^9, 
  3.7897461562023993`*^9}, {3.789746264548639*^9, 3.7897462690666924`*^9}, {
  3.7897465392139564`*^9, 3.7897465583641624`*^9}, {3.78974660906273*^9, 
  3.7897466263809147`*^9}, {3.7897467247360544`*^9, 3.7897467603974495`*^9}, {
  3.789749255130604*^9, 3.7897492987731085`*^9}, {3.7897493931301184`*^9, 
  3.789749413952345*^9}, {3.7897495212584887`*^9, 3.789749543911763*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"Take", "[", 
    RowBox[{"ds", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749445352681*^9, 3.7897494506647367`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       $CellContext`f[
        Association[
        "name" -> "2019-wuhan-coronavirus-data", "owner" -> "globalcitizen"]], 
       $CellContext`f[
        Association["name" -> "ncov", "owner" -> "nextstrain"]], 
       $CellContext`f[
        Association[
        "name" -> "Novel-Coronavirus-Updates", "owner" -> "839Studio"]]}, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 3], "Meta" -> 
     Association["ID" -> 70815612981099], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 3, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Vector[TypeSystem`AnyType, 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     1, "DataRowCount" -> 3, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"name\"", "\[Rule]", 
                    "\"2019-wuhan-coronavirus-data\""}], ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"globalcitizen\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"name\"", "\[Rule]", "\"ncov\""}], ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"nextstrain\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"f", "[", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"name\"", "\[Rule]", "\"Novel-Coronavirus-Updates\""}], 
                    ",", 
                    RowBox[{"\"owner\"", "\[Rule]", "\"839Studio\""}]}], 
                    "\[RightAssociation]"}], "]"}], FontFamily -> 
                 "Source Code Pro", ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1078712005][{3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[
               TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1078712005, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1078712005]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1078712005][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1078712005][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1078712005; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{521., {54., 60.}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7897494511127377`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"33282a92-f78e-486d-b23f-1d6b0e7403d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"gettags", ",", "ds"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746129877107*^9, 3.789746144636273*^9}, {
  3.789746275245758*^9, 3.7897462776657853`*^9}, {3.7897464398548174`*^9, 
  3.7897464400038204`*^9}, {3.78974648410369*^9, 3.789746484225689*^9}, {
  3.789746572735321*^9, 3.7897465733473344`*^9}, {3.7897493112082415`*^9, 
  3.789749316870306*^9}, {3.7897494287705035`*^9, 3.7897494841110954`*^9}, {
  3.7897495384607058`*^9, 3.789749552142856*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/globalcitizen/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820774459809*^9},ExpressionUUID->"9663142e-a94d-4a85-939a-\
70cad1f04a17"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820774891827*^9},ExpressionUUID->"0cc07b67-eda3-479e-8770-\
3a724792467e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/839Studio/Novel-Coronavirus-Updates/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207756798496`*^9},ExpressionUUID->"cb7c544a-229d-455f-85b6-\
be8098d25811"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ncovis/choropleth/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207763418756`*^9},ExpressionUUID->"69897d03-e35d-4538-93f0-\
bb59179f7252"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/docligot/coronatracker-analytics/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820776635886*^9},ExpressionUUID->"90a9b532-95e2-4b43-b47c-\
f68978e9c78f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AaronWard/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820776944892*^9},ExpressionUUID->"cdb999bd-73a1-4929-8b30-\
8ea852273332"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sorxrob/2019-ncov-frontend/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820777270907*^9},ExpressionUUID->"76d4e7a2-c3ce-4496-88fb-\
ae260411839d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hysios/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207775719132`*^9},ExpressionUUID->"fd8d9ccf-8aaa-4716-bc29-\
8c5a74e33633"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-live-map/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207778289223`*^9},ExpressionUUID->"e7429579-4086-4430-ab31-\
495e3c4555ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/YiranJing/Coronavirus-Epidemic-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207781799335`*^9},ExpressionUUID->"62909f2e-2ced-4aab-b46d-\
33dccf1c6054"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sorxrob/2019-ncov-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207785069485`*^9},ExpressionUUID->"4619b110-a510-4232-a194-\
e2c8489d5639"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TIT-Lab/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820778803959*^9},ExpressionUUID->"72b2d9ef-5a76-4198-827e-\
74f592c02044"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dreamerjackson/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207790649633`*^9},ExpressionUUID->"89f86e81-819b-4f52-b018-\
71c6d3f3cc8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/chrism0dwk/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207793649735`*^9},ExpressionUUID->"44dd8ffd-3414-49dd-8e4e-\
5925990bce30"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/vilaca/wuhan-coronavirus-outbreak/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820779638983*^9},ExpressionUUID->"02478110-d159-4658-85bb-\
d1ab91bbd94c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/artic-network/artic-ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207799019914`*^9},ExpressionUUID->"7d967f2d-525d-46f0-b803-\
1bd41a291330"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/antonlukin/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207802000017`*^9},ExpressionUUID->"93e17e64-d283-4b1b-b028-\
0c41197ec0e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HopkinsIDD/ncov_incubation/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207804910154`*^9},ExpressionUUID->"459a2010-a4be-4cdf-a8b9-\
dacab38c6d8b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MeoncStudio/Anti_2019-ncoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820780765024*^9},ExpressionUUID->"95f5551b-7647-43c1-a5c0-\
debe1f078fde"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DnCov/transparent-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820781020028*^9},ExpressionUUID->"31c8d604-20de-45ed-970f-\
cd7e93ccba5e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/2019ncovmemory/nCovMemory/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820781297038*^9},ExpressionUUID->"5bcc4f82-089c-436e-b072-\
050db5f0f554"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/alext234/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820781581048*^9},ExpressionUUID->"8645c72a-4ef2-42af-aa78-\
ffb54ad5cb21"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iidx/corona-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207818520575`*^9},ExpressionUUID->"c68ecdef-f194-4f7e-8aa9-\
3da101c74376"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/pdtyreus/coronavirus-ds/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820782153067*^9},ExpressionUUID->"2799c43d-92b2-4de3-b902-\
2fa66d5cf35b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Xetera/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207824110756`*^9},ExpressionUUID->"4a85cac0-8b55-4afd-8dbd-\
8f140090730d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/cov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207827000895`*^9},ExpressionUUID->"db7e3603-c85c-4b4a-9b9a-\
5be576bd9ceb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/coddec/2020-new-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207829690943`*^9},ExpressionUUID->"6a4a66fa-c82a-4450-879b-\
844c4f905bf0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/WeileiZeng/red-cross/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207832681084`*^9},ExpressionUUID->"8b68ebe9-d281-4851-a222-\
3b70425b3565"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/instafluff/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207835331106`*^9},ExpressionUUID->"3329e5f1-e1ef-41f0-beb7-\
8f9241b89ebd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aitahtman/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820783791119*^9},ExpressionUUID->"97ac93d4-ed37-4de3-ab22-\
c610f0d18f0c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Kyald1412/CoronaVirus-2019-nCoV-Live-\
Tracking/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207840741315`*^9},ExpressionUUID->"a0cf9b03-2c94-4f8f-b224-\
5b088bd3351f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WuhanZhuRong/DonationChannel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207843291407`*^9},ExpressionUUID->"f6c7ad36-69f7-4ac4-bc2b-\
429948366da7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Laeyoung/Wuhan-Coronavirus-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820784707153*^9},ExpressionUUID->"d491fe1a-f00a-423c-959c-\
56b5f22dbd33"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/avischiffmann/Coronavirus-Dashboard/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820784964161*^9},ExpressionUUID->"6afc4ea1-8809-432c-b9fb-\
463714f8064a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/the-robot/corona-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207852211704`*^9},ExpressionUUID->"ff533e1e-ae19-47ae-838b-\
61184cd9b825"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jarekpelczynski/ncov-data-fetcher/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820785489177*^9},ExpressionUUID->"f13a6cdc-90f3-42b4-a19e-\
dcaafa83cac2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sijiali57/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207861352015`*^9},ExpressionUUID->"fc0ab652-3d47-42f7-a55a-\
51ad3f836b52"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/renyi/coronavirus_scrapper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982078639921*^9},ExpressionUUID->"9bed6e83-04f4-4abb-aebc-77ee33836f5b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JordanMicahBennett/SMART-CORONA_VIRUS_\
DETECTOR/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207866652184`*^9},ExpressionUUID->"62d55976-ca9f-4cd6-a0a5-\
38623170ea87"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kevinlu1248/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207870082345`*^9},ExpressionUUID->"89361066-d53d-4e86-b240-\
a3187a1e85f8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/xcv58/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982078728424*^9},ExpressionUUID->"e8124e72-ffcc-4d74-8f76-add1baf7c844"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/labsletemps/coronavirus-world-map/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207875452485`*^9},ExpressionUUID->"3eeb4453-a118-4bf4-af99-\
b62c142b5788"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yitao94/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207878372583`*^9},ExpressionUUID->"1a78b127-35d3-4582-a5e6-\
ca6fbb1430bc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WebDevSimplified/Coronavirus-Chrome-\
Extension/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207880852633`*^9},ExpressionUUID->"9e38c2d0-6f9f-4ca3-95d5-\
699cb2168aae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/fangohr/coronavirus-2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820788343279*^9},ExpressionUUID->"bda2d02f-ac7a-43b4-adce-\
bf081af1f327"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/arnoudbuzing/wolfram-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207886262846`*^9},ExpressionUUID->"ea1fc6bf-bdc8-49fb-bc3d-\
52a63f0b2693"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/etchorigin/ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820788904295*^9},ExpressionUUID->"8f0246c6-b990-4a68-b4ff-\
926f3852a7c6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JunjieZhouwust/Coronavirus-Estimation/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207891783037`*^9},ExpressionUUID->"639be5a7-9db8-4a1b-bbde-\
e0f2c7f4e348"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kaiyz/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820789435316*^9},ExpressionUUID->"17bc74b7-2587-4555-8769-\
3884c97642d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sviper-07/CoronavirusOdesseyRepo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207896903243`*^9},ExpressionUUID->"a54d1666-b411-4c56-ba0e-\
d62e97271f62"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/muditham90/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820789941355*^9},ExpressionUUID->"9005d7bc-db8f-4815-afc0-\
4cbbc4d9eb3f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jairoD/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207901843624`*^9},ExpressionUUID->"7bb227b8-f2bc-4a3d-85d6-\
7863f6d3a824"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iPomme/GameJame2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207914944057`*^9},ExpressionUUID->"0baad619-0df0-4e32-a3b2-\
8377a4858ea7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mshyun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982079174542*^9},ExpressionUUID->"33159400-961a-4f55-a67c-d3f937c9cb8f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Cyberist-Edgar/2020-novel-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820792004422*^9},ExpressionUUID->"ddafa687-c869-4091-bf2f-\
509b9e0aadf8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/netqyq/coronavirus-stat/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820792248433*^9},ExpressionUUID->"4ed1f291-14e9-46b0-8bb5-\
e6636235daaf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mudiant/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207925074453`*^9},ExpressionUUID->"5a211cb6-46f3-411c-a4f8-\
1b9938b89bdb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Coronavirus2019/Coronavirus-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207928034515`*^9},ExpressionUUID->"826341f6-3b1e-4dab-bb17-\
96dbc13d4c94"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/dash-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207930494585`*^9},ExpressionUUID->"de0d274e-3908-4508-a5b1-\
0ecda2e56d42"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-info-crawler/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820793298472*^9},ExpressionUUID->"2cdae43e-906f-46e5-87f1-\
f006d5f71f65"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mcodz/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207935554743`*^9},ExpressionUUID->"f0118631-2f6b-4a3a-8da4-\
4cb7aaabcefb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lina/lina.github.io/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207937964845`*^9},ExpressionUUID->"4570905c-cd8e-42bd-8e53-\
f455ce1fab17"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/stephan227/coronavirus-data-hq/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207940414925`*^9},ExpressionUUID->"d116807f-412b-4f1c-be09-\
7581bdc4d4af"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/POGE0124/Coronavirus_quantity_prediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207943235025`*^9},ExpressionUUID->"51396a6a-1fab-4ca9-8797-\
91a93c44c3d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshuaferr1s/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207945975137`*^9},ExpressionUUID->"1279947f-b95f-4ef0-bfc6-\
a749d746ae63"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/dranoer/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820794854521*^9},ExpressionUUID->"f80ee3e6-7f55-4f38-9e0f-\
d1e69f21d32c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SpencerAung/coronavirus-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820795131528*^9},ExpressionUUID->"3bfafe9a-31c5-4f30-a54f-\
3a046dfdd99b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/burgess/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820795381538*^9},ExpressionUUID->"388754db-6a2b-47b6-b3df-\
4ba6d6b3bfab"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ivan-iliev/mc-2d/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207956445465`*^9},ExpressionUUID->"2a1ca708-8340-45f9-8281-\
1183733c7005"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ricosmall/2019-ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207959235563`*^9},ExpressionUUID->"a511816a-294c-487d-bfe6-\
9c379e39cd49"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kealyn/Wuhan2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820796275572*^9},ExpressionUUID->"8e2d71fa-1549-4edb-aa57-\
59eb8f805c7e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iuming/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207965215735`*^9},ExpressionUUID->"a9a7e86d-3e6c-468c-8847-\
e757750a2243"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/filswa/coronavirusapi/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820798035631*^9},ExpressionUUID->"a2bcb6b6-ae52-4aab-8662-\
23116a7984e3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/XuCQ/WuhanCoronavirusDataCrawel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820798281658*^9},ExpressionUUID->"5817977c-4492-42f8-abe7-\
a08b3885c675"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/piscium2010/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820798579672*^9},ExpressionUUID->"a4aede4e-c8db-494f-a7bd-\
09b84bcd7ce2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aknow2/situation-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820798863678*^9},ExpressionUUID->"056f35a7-9de8-4ca7-b8b1-\
f07009d1f263"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/htso/Coronavirus_Epidemic/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820799230694*^9},ExpressionUUID->"2dc34d82-747a-444f-b186-\
46be265218e3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ddlan/corona-oh-na-na/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207995607014`*^9},ExpressionUUID->"9363bfc8-6cc6-4f9c-b107-\
dab72f51b533"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/widscommunityorg/CoronaV_Challenge/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898207999207144`*^9},ExpressionUUID->"dc86c6e2-3c52-450d-b02f-\
fda2857b20b7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kianweelee/Data-Visualisation--Coronavirus-\
confirmed-cases/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820800219727*^9},ExpressionUUID->"46e6d969-6732-40c2-ba06-\
b5459abb380a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eragmus/2019ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820800465731*^9},ExpressionUUID->"5d13b1ce-6dbd-4962-9be2-\
d3b8e3bce5af"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/henryshw/VirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820800731741*^9},ExpressionUUID->"ceed77f9-c85e-4c08-bea1-\
1ec903bd797d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/biomedontology/cido/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208010337553`*^9},ExpressionUUID->"d8a6a69c-a105-4b53-be32-\
d820f1a3ba06"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aliciawyy/coronavirus-outbreak-log/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820801286756*^9},ExpressionUUID->"dabca680-90d7-42d7-8c8c-\
71ca0b9eee99"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/itsyaoyu/wuhan_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820801527772*^9},ExpressionUUID->"2aa069cf-5180-4297-9092-\
95e08856abdb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sanghy/epidemicsituation2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208017897763`*^9},ExpressionUUID->"6e45dc65-93ec-46e2-9e49-\
6332226bb382"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/QMHTMY/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208020727825`*^9},ExpressionUUID->"0f346535-c350-4a99-8cb9-\
e3d8682e4a34"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/audreyqyfu/wuhancov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820802448802*^9},ExpressionUUID->"6f239e1d-5948-405b-91af-\
d08f1a664ae5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/RuyiLi/coronatracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208027098274`*^9},ExpressionUUID->"aa76f61a-18a0-4c93-b9a6-\
e36f4eb6f40b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/KezhiLi/Wuhan_Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208029558396`*^9},ExpressionUUID->"5f5b15c5-8822-4051-93e9-\
f243b01159cf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epiforecasts/WuhanSeedingVsTransmission/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820803194847*^9},ExpressionUUID->"2a8d6fbb-62fb-4385-b892-\
6551af2afdb5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sdwfrost/mers-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820803452856*^9},ExpressionUUID->"e8db6db3-547e-4c30-b4ff-\
9e685768279d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/martinedoesgis/novel-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208037038794`*^9},ExpressionUUID->"da9a62a2-c4ba-4359-b0a1-\
6c6d699c9c1d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yx-z/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820804012888*^9},ExpressionUUID->"e1cb9264-1787-4be9-b1d7-\
a3b578bf46ad"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JenQian/coronavirus-data-ETL/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208042589025`*^9},ExpressionUUID->"8f02cc3b-db6c-4c84-a272-\
f91b359f6ff1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AndyLPK247/coronavirus-scraper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820804503911*^9},ExpressionUUID->"ec9d36f0-dccf-4135-bbbf-\
27ad412a1873"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperDiscovery/NCP-Model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208047639194`*^9},ExpressionUUID->"c9762611-0053-4afe-b748-\
28bf2f700f3c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ergodiclife/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208050259223`*^9},ExpressionUUID->"caf98c4c-b0f8-4568-92e0-\
7938636dbcd1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ljnicol/coronavirus_viz/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820805284933*^9},ExpressionUUID->"39600542-bf4e-4fa6-a5d3-\
f36fe37192ac"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ShuuTsubaki/Wuhan-Coronavirus-Even-\
Timeline/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208055329447`*^9},ExpressionUUID->"9174f0a4-4063-458c-9634-\
14cf64c3ebfc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MaBeuLux88/coronavirus-mongodb/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982080581295*^9},ExpressionUUID->"37edaa54-f52d-4ea7-b7ff-a68991dd9554"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ykl124/Shanghai2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208060599575`*^9},ExpressionUUID->"4f1e89d9-c824-4e6e-9466-\
68c12f5a47b9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/elvinaqa/The-Rise-of-CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982080631297*^9},ExpressionUUID->"6cece78b-9646-4eef-8a85-1ca8ef0f67de"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/xstarseed/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820806555975*^9},ExpressionUUID->"2bc91fd1-371f-4bf7-9cdf-\
d1eff07ce11e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sgfm/CoronavirusVisualization/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820806797982*^9},ExpressionUUID->"2cf4e93d-bb8f-4468-9ae1-\
226d90910d17"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuriousCompany/CoronavirusObserver/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820807041994*^9},ExpressionUUID->"ba11ce3b-af1d-4391-8670-\
c841369fcd74"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jubayer-hossain/CoronavirusTracking/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820807320999*^9},ExpressionUUID->"f5407c99-1215-4689-ae3f-\
76a823f6eab7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/perlatex/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208076040087`*^9},ExpressionUUID->"f51eacfa-e3ab-4008-ba74-\
f1af7ab34523"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/liu-zoe/wuhancv/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820807854017*^9},ExpressionUUID->"4b2342c6-3f85-4414-a413-\
1f33cbc580bf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lukas-jue/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820808134025*^9},ExpressionUUID->"1de729aa-3c44-402c-ba71-\
dff013476c65"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/donpaul999/coronavirusMap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208083810344`*^9},ExpressionUUID->"7d578bbf-f273-4f86-a4cb-\
7f4df8a2017a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/qingzma/coronavirusMonitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208086320424`*^9},ExpressionUUID->"db339e63-1f59-4055-8937-\
ecd801272263"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JackJoeng/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208088870544`*^9},ExpressionUUID->"f677b514-0621-451b-8088-\
5d43887f6210"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/choderalab/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820809183064*^9},ExpressionUUID->"d637af2b-9fcc-46fc-98a7-\
2b7e6bf206b1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ChengF-Lab/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208094630733`*^9},ExpressionUUID->"ae75124d-e479-45b7-9408-\
ddcdecc36947"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/FrankChen021/2019-ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820809722082*^9},ExpressionUUID->"7107e2a5-5be0-46db-a321-\
48fd15a3587f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bahe007/CoronaTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820810016087*^9},ExpressionUUID->"0e7bfdfa-75cb-4336-85af-\
5c09aec6fea4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuhanbae06/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208102690964`*^9},ExpressionUUID->"273568f6-dcc2-44d8-a8e6-\
98316ef71396"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/blowsys/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208105321026`*^9},ExpressionUUID->"c0291d74-fc1c-4b4c-98d5-\
d4f5b8a72255"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kaixin1976/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820810784112*^9},ExpressionUUID->"4fa53a84-ef2b-4cf4-91cd-\
74b76a5db6d2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/hriewe/CoronavirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982081103412*^9},ExpressionUUID->"ed18febe-6de8-414d-bbc8-09e0c566817b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/flyffast/CoronavirusHackUCI/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208112661257`*^9},ExpressionUUID->"a11c8eac-a990-4d44-aafd-\
29b3ee83228e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PengKuang/wuhan2020-oversea/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208115131407`*^9},ExpressionUUID->"f2a63569-b33a-466d-adbf-\
3439db0c699c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PranavPable/2019-n-CoV-Virus-Dashboard/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208117581444`*^9},ExpressionUUID->"ee053eee-8a35-4e87-a8bd-\
692e0cb9e1f3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/liuyangly25/infection_prediction/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208119981527`*^9},ExpressionUUID->"fd2c41d5-4972-421a-85ba-\
ae389f354dd5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bwanglzu/404-not-found/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208122701607`*^9},ExpressionUUID->"cf5c42a5-3b9a-49b8-b78c-\
f6c0d3be933c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dizzySummer/coronavirusRealTimeData/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820812540199*^9},ExpressionUUID->"742cbbc9-5496-4063-b68b-\
b4a718699185"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/apex-stack/true-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208128012033`*^9},ExpressionUUID->"a16afa34-12a9-4311-9558-\
cce01adcd73c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperSt3ve/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208130492153`*^9},ExpressionUUID->"35903cb9-e4ac-4f37-98e7-\
41c129e42972"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lprone/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982081330322*^9},ExpressionUUID->"fb6a559f-3682-447c-b66a-c0b92ccf6b6c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/finateautomata/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820813552232*^9},ExpressionUUID->"696641a2-dc28-4b02-a000-\
20e8caa2968d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ozpv/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208138182364`*^9},ExpressionUUID->"709ff0d8-2de7-4dcf-b7bb-\
4c0804839946"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/itoic/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208140942693`*^9},ExpressionUUID->"cd92e597-812d-4b05-bf11-\
136131718611"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/toyourheart163/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208144162836`*^9},ExpressionUUID->"9b408c27-775d-4d6f-9ad0-\
d8eb95e51123"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/herokilito/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820814697293*^9},ExpressionUUID->"ff34c57e-6b11-4657-823b-\
8ccda882e8e4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sta199-sp20-002/appex-04-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208149363003`*^9},ExpressionUUID->"6f1f03dd-2924-4c1a-8b96-\
34fc635d4995"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/notfree/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820815191305*^9},ExpressionUUID->"51db4ad5-8b3d-4093-adee-\
3c9244b1ece2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Schukerz/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208154623137`*^9},ExpressionUUID->"9fd87bcc-44b1-4f2f-8eb7-\
ce84fa75d6f1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nurulc/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820815728323*^9},ExpressionUUID->"c1000a18-0a36-4388-a8d5-\
861fd17e77ee"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/bjwa2020/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820815984331*^9},ExpressionUUID->"7ac73557-f80c-4aaf-9c68-\
bbaff159e8d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DuongThuyet/coronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820816236339*^9},ExpressionUUID->"4495f73f-640e-4c66-bb82-\
28d5dac2df36"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JakeJing/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208164913473`*^9},ExpressionUUID->"19c775c7-bf9a-436d-a349-\
a5a9c27aef43"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoDeRgAnEsh/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820816741356*^9},ExpressionUUID->"cc94abe1-a97f-4d66-9a66-\
15aeee88fee7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/lstm4ncor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208169983644`*^9},ExpressionUUID->"3b8f22c7-a187-41bb-8a54-\
f3445626225e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/coronavirus-crawling/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820817257373*^9},ExpressionUUID->"bae44705-a668-4466-a425-\
03bfd777c03c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/sungml92/2019-nCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208175223813`*^9},ExpressionUUID->"986ced73-6cb7-4f34-99c6-\
3795d6fd2b1d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Yuriyama/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208177823896`*^9},ExpressionUUID->"4df065c5-5ff8-4d23-b3ca-\
fa5bd75944b3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yarfer/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208180393963`*^9},ExpressionUUID->"19e36e8a-a60a-4773-b990-\
dc0642e934a6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/GHumorBS/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208183724127`*^9},ExpressionUUID->"0e4878a2-6a44-4300-85d9-\
81daaee681d8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ncoronavirus/Toronto2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820818606415*^9},ExpressionUUID->"a23911f7-afaf-4c9c-a081-\
28532890af4c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/donghoony1/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208188644247`*^9},ExpressionUUID->"fc0eeab5-2b0b-4375-92e6-\
7e3d4f8880b9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheCode-Jedi/CoronaVirus-MD/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208191334343`*^9},ExpressionUUID->"02b9ce21-d9f1-4876-80f9-\
10d7e4b29fca"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/DnCov/DnCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208193804417`*^9},ExpressionUUID->"f96ea7a1-82f8-466a-842d-\
162014533c14"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bovinemagnet/coronavirus-neo4j/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208196334505`*^9},ExpressionUUID->"ac2792b1-b557-45f4-bef9-\
2d6d68e6a5ff"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/casperbrike/corona_bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208199494605`*^9},ExpressionUUID->"50e2f2c6-f4d7-4ae6-a255-\
ac6963fb802f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kalzeo/nCoV-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820820202469*^9},ExpressionUUID->"85c97091-40a2-4c7e-a865-\
89c60cee7105"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/johnmelodyme/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820820462502*^9},ExpressionUUID->"271a163d-fec9-42d3-abe2-\
b80f7c57fa0c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/themarcusaurelius/coronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208207145104`*^9},ExpressionUUID->"9fba4b6f-758e-4c61-aa3b-\
62a4e2d4e8b3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheGodOfHuaji/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208209855185`*^9},ExpressionUUID->"1f01b3e7-7ab5-4696-bdb6-\
5d0f085f04a9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dork3yyyy/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820821221555*^9},ExpressionUUID->"869a30e8-4c4b-4523-a550-\
5109f405375a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joaogrosso/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208214695635`*^9},ExpressionUUID->"7436849c-5fcc-4314-a7d3-\
f7c02de12804"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mot200286mot/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820821768569*^9},ExpressionUUID->"b57572d4-c10d-4f2d-a375-\
9434040bea83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/leonluleonlu/2019-nCoV_Donation/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208220236025`*^9},ExpressionUUID->"e516e6f7-aef4-4f3d-b627-\
1f8eaec607ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eebrown/data2019nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208222736163`*^9},ExpressionUUID->"96d3788a-5556-4baa-be82-\
f617f3eb7b54"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kalzeo/CoronavirusWebsiteTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820822537619*^9},ExpressionUUID->"7679c95d-56c2-45b9-897d-\
59f00e3da164"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/MarGonz7/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208229736357`*^9},ExpressionUUID->"2d90034a-29aa-466c-8812-\
d31de1a74077"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/cfshi/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208233146467`*^9},ExpressionUUID->"29a72045-7a45-4041-9334-\
56b525fe0047"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/juwikuang/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208236536617`*^9},ExpressionUUID->"4a39edc2-ca2f-4936-83fe-\
4e598843bbe8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EthanGeekFan/nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820824048668*^9},ExpressionUUID->"9ff6168b-0b86-4a50-83b1-\
627affb9ab54"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WooilJeong/novel_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820824388685*^9},ExpressionUUID->"2154d21f-3351-4ed9-803e-\
fc7ef0c2857d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ThinkGeo/Coronavirus-Wuhan-nCoV-2019/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208246476903`*^9},ExpressionUUID->"b98629b6-2eb4-4dea-946d-\
98ba87882add"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_dashboard/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208249046984`*^9},ExpressionUUID->"ab0b6a0d-8daa-40f5-93ad-\
6cefb6e0c155"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nickofc/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820825163707*^9},ExpressionUUID->"ee17ce06-c61e-4393-af17-\
ca185bc1b07a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/teddylun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208254117155`*^9},ExpressionUUID->"63977003-3222-4e11-ba3f-\
5bf2c50004fc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/alamjane/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208256607275`*^9},ExpressionUUID->"38598203-6736-4433-a2b1-\
44f08ffdda7d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Zhnan811/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208259087315`*^9},ExpressionUUID->"03c9171d-f743-4126-a75b-\
204b90284a49"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Koohoko/Coronavirus_Bayseian_Modelling/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208261647434`*^9},ExpressionUUID->"b52f87cc-3c08-4c75-8ac3-\
9ea09734e0db"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/colortail/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820826419746*^9},ExpressionUUID->"a136b199-09c5-4a4d-bf75-\
6bf8a4b7b587"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HardWorkerIlya/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208266617537`*^9},ExpressionUUID->"3f79e63c-08b0-4740-84e0-\
e6071d2077f6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/henry123i/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208269077616`*^9},ExpressionUUID->"c3bfa944-596e-4316-8d9b-\
798717f32fe7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/741wcai/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208271597767`*^9},ExpressionUUID->"1b3b0ed9-4571-4c66-a553-\
f09fd4a9eb52"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/diehard04/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820827399779*^9},ExpressionUUID->"af8d077c-d4d6-4d8e-93f6-\
4b51319b4dbf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/escudero/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982082770079*^9},ExpressionUUID->"033f7728-f5c0-4bf7-a2ee-d723839a2847"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Ruchit007/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208279677987`*^9},ExpressionUUID->"2a4c8162-9558-47d2-becd-\
4a09798aebf4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/davy868/propagation-model-for-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820828234812*^9},ExpressionUUID->"ad740628-5b06-4b03-89a6-\
71d95dbc0dc4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/damonYuan/ncov-api-k8s/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820828559819*^9},ExpressionUUID->"b5c90839-48ee-42fc-88db-\
a1ed62914ab8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hernanmd/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208288308306`*^9},ExpressionUUID->"b86a8865-813d-46e3-ac83-\
959b05520c38"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aejsong/novel-coronavirus-exploratory-\
analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982082908484*^9},ExpressionUUID->"50380846-2d3e-4efd-8b48-d5338bb71b4b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dajnowicz/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208293678427`*^9},ExpressionUUID->"005b8702-4b4c-4e72-b0f5-\
cfacaf949fdb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/NarekSag/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820829619857*^9},ExpressionUUID->"77be10f0-642d-4f79-8945-\
af34ba037238"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Gazerbeamco/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820829903884*^9},ExpressionUUID->"717a0dda-8459-4475-9fff-\
1c79d77c395b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/karolkolodziej/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208301598964`*^9},ExpressionUUID->"305e5455-1fa1-4bbd-bf90-\
f9dace041172"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/143034/-coronavirus-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820830445902*^9},ExpressionUUID->"5199ad9c-dd78-46c3-ad6b-\
f9b249abf462"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guptaekarigar/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208306989145`*^9},ExpressionUUID->"21b6a4f6-0d50-469f-91ff-\
8df9f8af3d4a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/daniel2231/coronavirusmap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208309729195`*^9},ExpressionUUID->"d50d71bb-467d-41b5-8958-\
5ceabeb2d496"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/larsgimse/coronaviruslamp/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820831231928*^9},ExpressionUUID->"e5869f9b-d5da-49fe-a0a8-\
863e593114cb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PratirupG/coronavirusanalysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208314899406`*^9},ExpressionUUID->"a4ffd02a-740f-4e5f-afac-\
278f4a93f0b8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nerocui/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208317379484`*^9},ExpressionUUID->"91c5f544-4c2e-4ff2-b2b3-\
012a17d9f24d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshualeung/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208320129533`*^9},ExpressionUUID->"2ef85cfd-91df-4241-9f61-\
d3ca6d094c61"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ctedijanto/coronavirus-seasonality/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208324009657`*^9},ExpressionUUID->"91a59bc5-9007-494a-847d-\
e43fe45e360e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jwktls/Coronavirus_ios/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208327859783`*^9},ExpressionUUID->"9a9cf70e-cf96-4774-a2c9-\
72d76f646697"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mrmattwright-inc/coronavirus-virus/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208342220254`*^9},ExpressionUUID->"963d402b-3b90-4db9-a24a-\
727f9dda3a0b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/optoisolated/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208347370424`*^9},ExpressionUUID->"6bb52cbd-bfa3-4376-aed6-\
357a0ce18585"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/maksim72/coronavirus-website/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208351780567`*^9},ExpressionUUID->"f62fde33-b38d-47f3-ae10-\
71074f439814"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/geunm/Coronavirus-macro/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820835520067*^9},ExpressionUUID->"c81f41de-2631-47a2-a613-\
fc92fd4fcdcd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nnikniL/2019-nCoV_Notes/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820835847079*^9},ExpressionUUID->"c2bb2547-9e27-4bf2-a37e-\
bb0a716fac36"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/android-apps-apk/coronavirus-protect/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208362380905`*^9},ExpressionUUID->"f9a039f5-5a48-4ba3-b958-\
4d43ced9f4be"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epignatelli/coronavirus-infographics/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820836772109*^9},ExpressionUUID->"1c769004-0f97-4278-8a37-\
d142c423973d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JILI1028/Wuhan-Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208370941195`*^9},ExpressionUUID->"386fd8a6-9b0e-475c-a014-\
b15f761652e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/pavel-ilin/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820839102189*^9},ExpressionUUID->"c0204068-f737-42cd-86bb-\
e01665c92b04"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/cyrusxzw/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208394151993`*^9},ExpressionUUID->"84c2a9f8-8c26-47bd-944f-\
cb3ead7412e5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/tmsharp/coronavirus-dashboard/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208397012043`*^9},ExpressionUUID->"28b2d5eb-6db0-4623-a5f8-\
5f1e24d1c303"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sun2yKid/Anti-2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208400732145`*^9},ExpressionUUID->"0755d11d-0474-4915-a5ba-\
0a4b0f583b2d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/fasalmbt/corona-virus-data-tracker/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820840368226*^9},ExpressionUUID->"92b9fbdd-c95a-40a3-adcd-\
b3976e5d2602"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/developers-arm/Coronavirus-things/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208407372384`*^9},ExpressionUUID->"3f251c3a-fd59-4187-b3e8-\
93d072f8d29d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HesterLim/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208412262545`*^9},ExpressionUUID->"2f0cfd44-e14a-483d-a369-\
2219734bcd06"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/A-Yifeng/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208416212716`*^9},ExpressionUUID->"c3531421-0865-4d45-803c-\
5ee80198c671"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nancyyanyu/coronavirus_project/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208419862785`*^9},ExpressionUUID->"d4bc8247-754e-4dde-992d-\
a98a588b1d74"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Olivine-Ryo/coronavirus_map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208424032927`*^9},ExpressionUUID->"ee0fbd8b-97be-4f6d-8447-\
36c1fc3e0012"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/imsoncod/Coronavirus-Map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208437263365`*^9},ExpressionUUID->"8c5b870b-71f0-4a5f-b9c0-\
595aa1d7ccc2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/smorfopoulou/coronavirus_genbank/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820844004346*^9},ExpressionUUID->"24656c73-b02f-4d0b-8ec8-\
1910c05b64d3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/andrewadiletta/coronavirus_gizmo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820844277358*^9},ExpressionUUID->"ab044997-378d-44dc-b173-\
88ee1f52364e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SamuelePolimi/Coronavirus-Report/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208445433626`*^9},ExpressionUUID->"1aab746c-fc2a-4ffa-a0ff-\
aca3a14b272c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208448133717`*^9},ExpressionUUID->"4af3edb2-ce12-4f01-9331-\
90cea16e4429"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thiennv2896/Corona-Monitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208451153817`*^9},ExpressionUUID->"5f9ae737-500a-49f6-aef3-\
4cc1502f9579"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/LSTM4Coronavirusprediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208455113983`*^9},ExpressionUUID->"c6e699cd-1791-441a-aaeb-\
0d47b07d3371"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/edwardcooper/wuhan-virus-paper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208457814007`*^9},ExpressionUUID->"e592a86e-8e0b-4c7e-af57-\
3b6c06ae4960"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/feraliscatus/VxAfee/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208460984125`*^9},ExpressionUUID->"419e0024-ff51-422d-a566-\
72d95902ec1b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PatornJantara/coronavirus-detection/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820846445425*^9},ExpressionUUID->"772ddf30-274f-4433-ab26-\
2d4e4f7919a6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExtReMLapin/gmod_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820846722434*^9},ExpressionUUID->"93c00df6-30d7-40fd-bf8f-\
de3c475117e7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/victormaggie/coronavirus-research/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820846986443*^9},ExpressionUUID->"075ed765-2b81-46ef-af28-\
3969f21b3949"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kobkrit/data-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820847305455*^9},ExpressionUUID->"b6b7e91e-dd86-4384-82db-\
8ba9c5e33a36"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samjakobcavazos/Coronavirus-Tracker/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820847589466*^9},ExpressionUUID->"6f7ad1ea-3792-47ca-8d10-\
10a67c2e6d82"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EnderRL/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208478324704`*^9},ExpressionUUID->"26487285-5786-4333-a9eb-\
0ba3ddcb7ef9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/zire/pandemic2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208482864857`*^9},ExpressionUUID->"ee4d264f-25ad-4e33-8ad5-\
df262ae5abbe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lichader/coronavirus-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208485454926`*^9},ExpressionUUID->"7313dcab-9700-4768-b2ae-\
568d6d413ae4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yongjun21/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208488065004`*^9},ExpressionUUID->"4da0d19a-257b-475f-8fc0-\
9fa73670f89b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExpDev07/coronavirus-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982084908151*^9},ExpressionUUID->"a77e3b00-1211-4d2d-95bd-b41afd869cf6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yixinshi/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208494205227`*^9},ExpressionUUID->"41ddda9e-c47c-46a2-b956-\
91faed144930"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Vijayb023/CoronaVirus-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208499725447`*^9},ExpressionUUID->"12ff99ca-548a-4c8f-975d-\
9ef9d5bfc84d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samrahimi/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208502335653`*^9},ExpressionUUID->"f10eee43-70ac-44b9-95c7-\
5da32d51e6e7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jwktls/Coronavirus_android/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820850510558*^9},ExpressionUUID->"ec441f2f-19e4-4f69-bb86-\
f5f5ef495423"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/catofsof/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208507855673`*^9},ExpressionUUID->"7faa3b9d-5627-47c9-ac5f-\
e65028e3b635"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PrabhaSahiti/Coronavirus_spread/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820851042576*^9},ExpressionUUID->"3c745e5d-530a-4c78-b56a-\
62330351cc1a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yc111/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208513135843`*^9},ExpressionUUID->"c83c7d10-bbe2-4c15-8e87-\
313c3bd1b47f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dexterwah/coronavirus-news/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208516025944`*^9},ExpressionUUID->"324537b3-339a-4b17-9cd5-\
8c2a2129c850"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Fjallen/Coronavirus-Analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208519576187`*^9},ExpressionUUID->"a5ac301c-3467-43e6-8047-\
6e479a3f8fe0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/rbrick/corona-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820852213627*^9},ExpressionUUID->"edd9a6a9-98fc-45a3-a199-\
25cf87460aa1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ZhanweiDU/2019nCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820852483634*^9},ExpressionUUID->"40872fb4-fc52-43aa-99c8-\
02cfb1a43f85"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jdrakephd/wuhan-stochastic-model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820852793645*^9},ExpressionUUID->"2afc3ade-ffaa-4d05-9177-\
49b127ca8ac0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/imanpalsingh/coronavirus-data-analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208530676537`*^9},ExpressionUUID->"daf3e5ff-a338-4e99-9a77-\
1d53f1410fa3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Pyxisq/CoronaVirusSpread/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208533216634`*^9},ExpressionUUID->"90daa9b1-b565-4521-af1c-\
d70b7604b5bd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-volunteer/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208536146774`*^9},ExpressionUUID->"aeb76cbf-ddfc-4d21-845d-\
30629847c860"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/johnjaiharjose/CoronaVirusMapper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982085387568*^9},ExpressionUUID->"e70409df-d795-44c7-836e-02b4a95886c8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/garchingastronomy/-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982085415069*^9},ExpressionUUID->"07f9c390-473b-4bee-a16b-c35b25ad8756"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mame0521/2019-nCoV-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208543956985`*^9},ExpressionUUID->"2ad04836-dc0b-46ed-bc1f-\
60dc488a2b7e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/louisnot/n-Cov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208546607075`*^9},ExpressionUUID->"900ff479-8c94-49c7-b07b-\
d58b9077ebbc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Bohan-S/Coronavirus-Analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208549317164`*^9},ExpressionUUID->"c6883541-634c-4ada-9a23-\
fdfe0f49cf9c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CalBearKen/\
WuhanCoronaVirusMutationMonitoring/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208551817207`*^9},ExpressionUUID->"bb26ff7c-dbee-43d3-8fbb-\
89de2ac82c27"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dankaki/wuhan_coronavirus_risk/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208554847345`*^9},ExpressionUUID->"179e2766-a414-4a9a-946c-\
39ee18abc2bf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/easonlai/Visualization_for_Wuhan-\
Coronavirus_2019-nCov_cases_HK/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820855769744*^9},ExpressionUUID->"4fa8f5f5-6cf2-4f94-a462-\
a087612dc314"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/suhanlee/rn-coronavirus-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208560417566`*^9},ExpressionUUID->"68661524-783d-4899-9d42-\
9c6aa7b98445"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bhuwanesh340/Coronavirus_Tweets_Analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.78982085627876*^9},ExpressionUUID->"57e1fd07-449d-472c-98eb-e646685ea22b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuejoo/Coronavirus-Wuhan-101/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208566377754`*^9},ExpressionUUID->"4d98fea1-9b00-4626-a394-\
666ebb80affd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guardian/interactive-coronavirus-tracker-\
map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820856922814*^9},ExpressionUUID->"4d994ab7-ba9d-4d4e-adce-\
1bf52209f796"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yangmingleiSYSU/2019-novel-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208571858225`*^9},ExpressionUUID->"2fdf408d-a135-450c-b855-\
202e98bf31d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/UW-CSE442-WI20/A3-coronavirus-alert/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208574848323`*^9},ExpressionUUID->"74290eb6-eeca-40b5-a39b-\
b0e30c3b9cde"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TIT-Lab/coronavirus-map-backend/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820857828843*^9},ExpressionUUID->"a84fd4ae-6424-4beb-a25f-\
b4b63b41cc99"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/realvivekganta/CoronaVirusTweetScraper/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208581398573`*^9},ExpressionUUID->"3e12a4d8-0951-486b-8e09-\
f132420bfb5f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Cricetulus/wuhan-coronavirus-prediction-/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208584028597`*^9},ExpressionUUID->"00a50a65-9f2e-488d-a86d-\
63bf60b1ccfe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thegostisdead/CoronaVirus-Vizualizer/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208586840887`*^9},ExpressionUUID->"f71e6c8d-eb88-43f2-bf64-\
3f72e2f4fd26"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jonklaric/CoronaVirusModel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820858949097*^9},ExpressionUUID->"dcb1d424-db0b-4b9c-9d8b-\
2fff3d05b90c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/diy2learn/conronavirus_viz/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820859211108*^9},ExpressionUUID->"54951bf7-0706-44b7-810b-\
bf627302ca05"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/anevaluator/ncov-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208594951177`*^9},ExpressionUUID->"e9d9c028-0942-49bf-93ad-\
6ef9a443383f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lumaaaaaa/KoronaCS/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820859762126*^9},ExpressionUUID->"3f4182c4-1a47-4827-9e95-\
1911715e7925"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/x-craftsman/x-coronavirus-bee/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820860039135*^9},ExpressionUUID->"d438a09c-12ee-415f-9b57-\
4f1759a7b660"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/x-craftsman/x-coronavirus-fee/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820860308144*^9},ExpressionUUID->"f7742ad4-6624-4dc9-b2df-\
3637a639e3ae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AlaaSenjab/coronavirus_live_map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208605671563`*^9},ExpressionUUID->"8a64bc5a-7ba7-4fa4-84cb-\
55a5872d4ba5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/odaiwai/2020_wuhan_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208608291607`*^9},ExpressionUUID->"add1a2fa-65b4-4031-ba2b-\
00801871c9ef"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/presstofan/2019-nCov-data-collection/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820861161172*^9},ExpressionUUID->"8b4db95e-d561-4099-a776-\
28c9bfcb0db0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/Shanghai-During-and-\
After-Bastyr-Landing-CoronaVirus-Source-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208614201803`*^9},ExpressionUUID->"302defd0-f98a-472a-a0ec-\
9ca59be308c8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/msyazwan/news_coronavirus_json/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208617071896`*^9},ExpressionUUID->"d6978eed-3e5a-4f7f-b3cc-\
b1189fc2fa8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-apis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208620081973`*^9},ExpressionUUID->"0d82d6f5-f8c5-4289-92e8-\
4e736495ee1b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuwei1985/2020WuhanCoronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820862296207*^9},ExpressionUUID->"c7538de9-0134-440a-a51a-\
658d32cca9be"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kalzeo/CoronaVirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208626202235`*^9},ExpressionUUID->"fefe5230-c209-48cd-af86-\
cf3f3e5206bd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/OBMGIS/CoronaVirusMap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208628812523`*^9},ExpressionUUID->"41623083-8f73-431d-9607-\
510a702f02e1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/peirangxu/Project_2_Coronavirus_-Pneumonia/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208631352587`*^9},ExpressionUUID->"f90c148b-e17b-4795-8d43-\
a0dc6df77d48"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-hospital/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208634142666`*^9},ExpressionUUID->"6d8d93c2-a03e-48cb-9c69-\
76350b6e61fa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thecatgamer137/Joke.Win32.Coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820863721278*^9},ExpressionUUID->"15d28d1d-fa9d-453f-b6da-\
d770c8af35c3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/hwei/AntiCoronavirus2/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820863986286*^9},ExpressionUUID->"af60a0bd-f44c-498e-ad78-\
d60ae195a397"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/stephan227/coronavirus-data-hq-api/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820864271296*^9},ExpressionUUID->"bf95e17c-5569-4aac-baad-\
d583bcd9490c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/muniah/2019-Novel-Coronavirus-analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208645503173`*^9},ExpressionUUID->"7e1a38d9-f905-4d4e-a65d-\
25f2f6c8f1fc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/juliuswuwu/Coronavirus-data-visalization-\
project/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820864818326*^9},ExpressionUUID->"e59db066-86ff-4e71-8bb7-\
91300f09ca53"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/perell2014/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208651163397`*^9},ExpressionUUID->"7ad1f656-79c2-480c-a19c-\
a95c5f955e83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HwdTech010/CoronaVirusMaleware/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820865417344*^9},ExpressionUUID->"b814604a-31bb-43ca-b2a9-\
fb38985fbda2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/iam-abbas/Coronavirus-Data-Visualization/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820865712355*^9},ExpressionUUID->"e74dc457-3395-4f77-bbb7-\
8997a48fd635"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ciszakdamian/Coronavirus-2019-ncov-\
Predictions-ML/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820865995364*^9},ExpressionUUID->"d235b0c9-4da1-48e6-ace1-\
b6afae7753b9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Jinchili/wuhan_2019_coronavirus_model_\
navigate/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208662783737`*^9},ExpressionUUID->"d5900974-1f4c-4802-bd19-\
d61fddd3422b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/raphtlw/CoronaStats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208665593834`*^9},ExpressionUUID->"e1f18b01-1bc1-4cb8-b19a-\
01abbb52b332"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/cooerson/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820866820391*^9},ExpressionUUID->"8b9ecead-670b-41af-8f7d-\
6078dad1517c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/duiyu/get-out-game/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208671144047`*^9},ExpressionUUID->"7dd695a3-0530-42dd-bf0c-\
5985c5d1e989"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/initiumdev/20200203-international-novel-\
coronavirus-live/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208673834095`*^9},ExpressionUUID->"06368c2b-c62a-493f-bd0c-\
82098f6ba0b5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guardian/interactive-coronavirus-tracker-\
asia-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820867630417*^9},ExpressionUUID->"2472037f-d061-4fd7-91f4-\
ffab3f0bfee4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/standwithwuhan/rumorsbreaker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820867893426*^9},ExpressionUUID->"68f199ba-c222-4235-9e22-\
dfae36ae897d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jenzushsu/powerbi-ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820868154435*^9},ExpressionUUID->"dc2970c2-2e9e-4c08-aeb4-\
e15b4d9d22ea"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lumaaaaaa/Korona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820868416444*^9},ExpressionUUID->"b914908c-dc28-4277-b5ad-\
16fe634fd81c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/flippe3/corona_virus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208687074523`*^9},ExpressionUUID->"a40f8164-dfb6-4243-83f3-\
6ab1e47868ea"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DarlingHang/CSAPP_labs/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208689584613`*^9},ExpressionUUID->"523c1323-c558-4e02-8fed-\
a802d51a0669"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Vopaaz/nCov-transportation-subscriber/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208692224703`*^9},ExpressionUUID->"1c194c05-429e-4259-bbdd-\
563455edab7f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Nova-Xue/Days-In-China-with-Coronavirus-\
Spreading/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820869503479*^9},ExpressionUUID->"80fbf36e-ae71-4bc6-b54d-\
339f1dafe9c6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/BrunoCdot/Actualizaciones-Coronavirus-2019-\
nCoV-Gobierno-de-Espana/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208697814884`*^9},ExpressionUUID->"3e1c193a-4087-4189-9081-\
44ce78b7abce"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aasgary/-Novel-Coronavirus-2019-nCoV-\
Outbreake-Timelapse/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820870114497*^9},ExpressionUUID->"000f0581-77c8-4d63-ba65-\
732ccdc5a9e1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/BrunoCdot/PROCEDIMIENTO-DE-ACTUACION-2019-\
nCoV-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208705205107`*^9},ExpressionUUID->"dff04aaa-f246-4eba-9911-\
ba96bbee5f73"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/akalia25/StockMarket_Virus_Relationship/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208707705207`*^9},ExpressionUUID->"050bb867-a235-4e86-ad6b-\
0926e0089060"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/SOURCE-OF-CORONAVIRUS-\
OUTBREAK-BOSC23-HUMAN-LABORATORY-SLAVES/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208710485296`*^9},ExpressionUUID->"948516b0-bf43-4506-bf94-\
77a88dbde2ce"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dmontecino/Eidolon_helvum_CoV_seasonality/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820871335539*^9},ExpressionUUID->"1ad12e32-ff2b-4532-a1c4-\
8ea5b4bb4d41"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/Images-of-CoronaVirus-\
cells-are-white-blood-cells-swarmed-by-Pycnogonida-Larvae/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208716405487`*^9},ExpressionUUID->"4046f94a-d2dd-42ed-b382-\
9ecec9c42411"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Gundam-MS/Extinction-Threat-by-Physalia-\
Physalis-Pycnogonida-EEE-AIDS-HIV-SARS-SMALLPOX-CORONAVIRUS/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208719145584`*^9},ExpressionUUID->"0452a42f-9891-4e3e-b354-\
a0afe65736ee"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ncov-io/ncov.io/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208722205653`*^9},ExpressionUUID->"0d4f1f8d-8151-489a-8dcc-\
de6f3a1aaab1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mame0521/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208725355783`*^9},ExpressionUUID->"ada11531-5ac5-4b47-a8ec-\
84220af74cca"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Jonasonw/WuhanWin/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820872809584*^9},ExpressionUUID->"ce804e7f-8748-4d29-af75-\
63a9f2a5bb31"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dmontecino/East-African-bats-and-CoV-\
shedding/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208730865936`*^9},ExpressionUUID->"eb4d3cae-4692-4793-ad4a-\
6c80d13ebcce"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/febrifahmi/2019-nCoV-Articles-Compilation/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7898208733456087`*^9},ExpressionUUID->"3f4ece79-caa8-4d0a-b954-\
4edb5856d216"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kevinxyc1/FightTheVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.789820873612612*^9},ExpressionUUID->"824f7ba2-122f-4662-a584-\
2b3e266f8b46"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"result2", "[", 
    RowBox[{"All", ",", "\"\<tags\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.789749631262018*^9, 3.789749653211327*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wuhan\"\>", ",", "\<\"2019ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"virology\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"pathogens\"\>", ",", "\<\"viruses\"\>",
    ",", "\<\"pandemic\"\>", ",", "\<\"opendata\"\>", 
   ",", "\<\"epedemiology\"\>", ",", "\<\"epedemic\"\>", ",", "\<\"wuhan\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"2019ncov\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"2020ncov\"\>", ",", "\<\"wuhan-virus\"\>", ",", "\<\"china\"\>", 
   ",", "\<\"virus\"\>", ",", "\<\"pandemic\"\>", ",", "\<\"google\"\>", 
   ",", "\<\"google-sheets\"\>", ",", "\<\"trend\"\>", 
   ",", "\<\"coronavirus-analysis\"\>", ",", "\<\"jhu-csse\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"scrapy\"\>", ",", "\<\"webcrawler\"\>", ",", "\<\"2019-ncov\"\>",
    ",", "\<\"statistical-models\"\>", ",", "\<\"visualization\"\>", 
   ",", "\<\"python\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"epidemic-model\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"lancaster-university\"\>", ",", "\<\"epidemic\"\>", 
   ",", "\<\"epidemic-model\"\>", ",", "\<\"wuhan-coronavirus-outbreak\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"jupyter-notebook\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"data-mining\"\>", 
   ",", "\<\"stats\"\>", ",", "\<\"china\"\>", ",", "\<\"scraping-data\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"wuhan-virus\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"corona-tracker\"\>", ",", "\<\"medical\"\>", 
   ",", "\<\"telegram-bot\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"jupyter-notebook\"\>", ",", "\<\"geopandas\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"new-coronavirus\"\>", 
   ",", "\<\"pneumonia\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"info-websites\"\>", ",", "\<\"information\"\>", 
   ",", "\<\"wuhan-pneumonia\"\>", ",", "\<\"wuhan-coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"novel-coronavirus\"\>", ",", "\<\"real-time-map\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"nvoc\"\>", ",", "\<\"coronavirus-maps\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"coronavirus-info\"\>", 
   ",", "\<\"coronavirus-websites\"\>", ",", "\<\"red-cross\"\>", 
   ",", "\<\"github-pages\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"mapbox-gl\"\>", 
   ",", "\<\"disease\"\>", ",", "\<\"kotlin\"\>", ",", "\<\"android\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"telegram-bot\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"mathematica\"\>", 
   ",", "\<\"wolfram-language\"\>", ",", "\<\"data-science\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"epidemics\"\>", 
   ",", "\<\"prediction-model\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"regression-models\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"ncov-data-visual\"\>", ",", "\<\"rstats\"\>", 
   ",", "\<\"rstats-package\"\>", ",", "\<\"corona\"\>", 
   ",", "\<\"python\"\>", ",", "\<\"pandas\"\>", ",", "\<\"numpy\"\>", 
   ",", "\<\"matplotlib\"\>", ",", "\<\"seaborn\"\>", ",", "\<\"corona\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"wuhan-coronavirus\"\>", 
   ",", "\<\"ncov-2019\"\>", ",", "\<\"ncov\"\>", ",", "\<\"wuhan-virus\"\>", 
   ",", "\<\"data-analysis\"\>", ",", "\<\"statistics\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"rpackage\"\>", ",", "\<\"data\"\>", 
   ",", "\<\"epidemiology\"\>", ",", "\<\"ncov\"\>", ",", "\<\"ncov-2019\"\>",
    ",", "\<\"dataset\"\>", ",", "\<\"kubernetes\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"api\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"bioinformatics\"\>", ",", "\<\"smalltalk\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", ",", "\<\"wuhan\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"sars\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"gmod\"\>", ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"virus\"\>", ",", "\<\"infection\"\>", ",", "\<\"bat\"\>", 
   ",", "\<\"soup\"\>", ",", "\<\"dashboard\"\>", ",", "\<\"livedata\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"tracker\"\>", ",", "\<\"map\"\>", 
   ",", "\<\"visualization\"\>", ",", "\<\"emberjs\"\>", 
   ",", "\<\"up-to-date\"\>", ",", "\<\"data\"\>", ",", "\<\"go\"\>", 
   ",", "\<\"golang\"\>", ",", "\<\"coronavirus\"\>", ",", "\<\"bot\"\>", 
   ",", "\<\"telegram\"\>", ",", "\<\"coronavirus-tracking\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"nodejs\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"coronavirus\"\>", ",", "\<\"java\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"wuhan-pneumonia\"\>", ",", "\<\"wuhan-coronavirus-outbreak\"\>", 
   ",", "\<\"coronavirus\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7897496348912296`*^9, 3.789749653574343*^9}, 
   3.789820888694104*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"b39dc22d-8f5e-4848-b590-9479c30b5e50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.789749657310564*^9, 3.7897496606837664`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19444444444444445`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus-outbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05555555555555556],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {0., -35.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"2019-ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09444444444444444],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-12., 29.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-tracking\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044444444444444446`],
     FontColor->RGBColor[1, 0.75, 0]], {0., 50.}, Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044444444444444446`],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {0., -52.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-globaloutbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {0., 63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08333333333333334],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-13., -70.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"coronavirus-real-time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.044444444444444446`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., 76.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"jupyter-notebook\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {0., -88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemic-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., 89.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-2019\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {75., -65.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {0., -99.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {0., 101.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lancaster-university\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {2., -109.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"regression-models\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {0., 112.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"telegram-bot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-104., -50.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-maps\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {107., -49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prediction-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {0., -119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03888888888888889],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {116., 34.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan-virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03888888888888889],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-100., -65.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {0., 122.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"real-time-map\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {85., -78.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {108., 47.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"google-sheets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-82., 85.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scraping-data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-106., 48.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rstats-package\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-82., -85.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {82., 88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"github-pages\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {81., -88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {112., 20.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {105., 58.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {0., -129.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"statistical-models\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {0., 132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-mining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-108., 60.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"visualization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-83., -98.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-data-visual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {90., -100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-95., 95.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-info\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-131., 28.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {106., 69.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"geopandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {81., 100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05555555555555556],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-66., -109.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"up-to-date\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-70., 110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mapbox-gl\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-104., 70.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pathogens\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {69., 112.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {74., -110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona-tracker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {0., -139.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bioinformatics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., 142.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matplotlib\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {69., -120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-67., -123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2019ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-76., 121.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"info-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {82., 122.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"opendata\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {66., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-66., -133.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {0., -149.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"telegram\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-64., 132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rpackage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {64., 134.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"python\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-148., -32.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jhu-csse\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-141., 38.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"information\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {0., 152.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"virology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {55., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"emberjs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {139., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kubernetes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-60., 142.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {148., -31.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dashboard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {59., 144.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2020ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-111., -109.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"numpy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-52., -141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nodejs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {130., 79.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"google\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-133., -77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"golang\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {137., -71.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-116., 104.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"red-cross\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-138., 78.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"smalltalk\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {0., -159.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"scrapy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {150., -39.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"infection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-49., 152.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"statistics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {116., 110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"seaborn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {51., -150.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"medical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {128., 96.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"livedata\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {47., 154.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"gmod\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {128., -88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dataset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {117., -110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"android\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-50., -153.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"china\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {149., 56.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {0., 162.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"soup\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-127., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"viruses\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-109., -119.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tracker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {110., -120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-154., 49.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"map\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {156., 22.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"java\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-154., -45.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-150., 61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kotlin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-117., 113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"trend\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {157., 43.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rstats\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {147., 67.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nvoc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {90., 77.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"stats\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-129., -97.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"api\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-150., -55.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sars\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-82., -75.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"go\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-5., 36.}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"bot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {93., 132.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {97., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03333333333333333],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-5., 9.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-180.5, 179.5}, {-164.5, 167.5}}]], "Output",
 CellChangeTimes->{3.789749664825003*^9, 3.789820894550297*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"053937f4-b386-4531-ab47-551288c17af5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<D:\\\\git\\\\wolfram-coronavirus\\\\github-topic-wordcloud.png\>\"", 
   ",", 
   RowBox[{"Out", "[", "54", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749677903779*^9, 3.7897497020382204`*^9}, {
  3.7898209090557723`*^9, 3.7898209091017733`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],

Cell[BoxData["\<\"D:\\\\git\\\\wolfram-coronavirus\\\\github-topic-wordcloud.\
png\"\>"], "Output",
 CellChangeTimes->{3.789749704188345*^9, 3.7898209099897995`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"9a873b7c-81d7-4654-a1da-2a67ab400583"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897466559972534`*^9, 3.789746669704405*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"items", "=", 
   RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746711541909*^9, 3.7897467195079966`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"gettags", "[", 
     RowBox[{"json", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "30"}], "}"}]}], "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.7897467034057817`*^9, 3.789746705703845*^9}, {
  3.789746765084499*^9, 3.7897467815496793`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],

Cell[BoxData[
 RowBox[{"Keys", "[", "json", "]"}]], "Input",
 CellChangeTimes->{{3.789747085992421*^9, 3.7897470928615103`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],

Cell[BoxData[
 RowBox[{"json", "[", "\"\<incomplete_results\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7897482010763025`*^9, 3.7897482086013794`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7897471305364866`*^9, 3.7897471390714846`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],

Cell[BoxData["json"], "Input",
 CellChangeTimes->{{3.789747100792595*^9, 3.7897471010616045`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
},
WindowSize->{959, 1012},
WindowMargins->{{Automatic, -965}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (January 29, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b5593095-0dc5-4a6e-9371-2bdcb0248b0a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 320, 7, 28, "Input",ExpressionUUID->"06120850-5f41-494b-8210-ede3bffba84b"],
Cell[881, 29, 303, 6, 28, "Input",ExpressionUUID->"3697c5e1-45e9-4e8a-a8c2-78f7e8b0bfb9"],
Cell[1187, 37, 308, 6, 28, "Input",ExpressionUUID->"bd66e8f5-b64c-4f25-b6f7-8b9657844443"],
Cell[1498, 45, 260, 4, 28, "Input",ExpressionUUID->"fa3b2450-d1f7-4d8d-bc08-14c78eae08ac"],
Cell[1761, 51, 425, 7, 28, "Input",ExpressionUUID->"30411d89-a59c-45ec-baca-63b27fd9ce41"],
Cell[CellGroupData[{
Cell[2211, 62, 588, 13, 28, "Input",ExpressionUUID->"4c1ff1ba-2b47-4440-887f-5d20a3c2de3c"],
Cell[2802, 77, 4620, 104, 64, "Output",ExpressionUUID->"2719b1b4-7f33-42b3-a0d8-44de5b9591a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7459, 186, 2659, 58, 281, "Input",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],
Cell[CellGroupData[{
Cell[10143, 248, 128, 3, 24, "Echo",ExpressionUUID->"817abbcf-31dc-4b2f-aeda-bf97e9a2a77f"],
Cell[10274, 253, 130, 3, 24, "Echo",ExpressionUUID->"714d1974-952a-4a98-8bc1-c80340248e36"],
Cell[10407, 258, 130, 3, 24, "Echo",ExpressionUUID->"4e1a3809-5758-4a9d-892d-9afb915f3563"],
Cell[10540, 263, 128, 3, 24, "Echo",ExpressionUUID->"a054c463-5fd2-4b19-a26d-9fdae858e5a0"],
Cell[10671, 268, 128, 3, 24, "Echo",ExpressionUUID->"ea8aa9b8-7d58-40b9-b9e9-907b28971998"],
Cell[10802, 273, 130, 3, 24, "Echo",ExpressionUUID->"c963fbf3-8e18-4d40-a6cd-8eebadf40dbc"],
Cell[10935, 278, 128, 3, 24, "Echo",ExpressionUUID->"259864d1-607f-4e9c-a638-24693a405441"],
Cell[11066, 283, 128, 3, 24, "Echo",ExpressionUUID->"2d62e003-b71b-4cef-b47f-d3836d3e22ba"],
Cell[11197, 288, 130, 3, 24, "Echo",ExpressionUUID->"6d7fe2a6-264c-44be-bccf-1d7f83329f5e"],
Cell[11330, 293, 130, 3, 24, "Echo",ExpressionUUID->"18235990-89ac-4938-b1bd-28480e1137ba"],
Cell[11463, 298, 128, 3, 24, "Echo",ExpressionUUID->"d38255dd-b307-4c74-a43c-2497d7d582c2"],
Cell[11594, 303, 130, 3, 24, "Echo",ExpressionUUID->"72e50399-0ee5-46cb-806e-11af1e69f46a"],
Cell[11727, 308, 130, 3, 24, "Echo",ExpressionUUID->"0795cd1c-0fb6-4442-a4bc-68b8cbc8cb99"],
Cell[11860, 313, 128, 3, 24, "Echo",ExpressionUUID->"97c34ede-f0a5-43ba-a176-4ecdad1d520f"],
Cell[11991, 318, 128, 3, 24, "Echo",ExpressionUUID->"9c24ac90-5c03-4c3e-94ac-83650903df27"],
Cell[12122, 323, 130, 3, 24, "Echo",ExpressionUUID->"719e66e5-0f22-4b3a-a7b3-fcf387d022a5"],
Cell[12255, 328, 130, 3, 24, "Echo",ExpressionUUID->"98304163-87ad-47a3-9b33-1a24dc280975"],
Cell[12388, 333, 128, 3, 24, "Echo",ExpressionUUID->"f05714bd-962b-4a5d-991e-354ab7b57828"],
Cell[12519, 338, 131, 3, 24, "Echo",ExpressionUUID->"88849a3e-b6d9-47bd-b97a-25056e9de461"],
Cell[12653, 343, 128, 3, 24, "Echo",ExpressionUUID->"19462fbb-4350-41be-96bb-2f608702645b"],
Cell[12784, 348, 131, 3, 24, "Echo",ExpressionUUID->"8a78e3bf-59ff-433c-8b63-89d406e80529"],
Cell[12918, 353, 130, 3, 24, "Echo",ExpressionUUID->"214d7b4f-acbb-44d6-8a0a-c4a537d7ef83"],
Cell[13051, 358, 131, 3, 24, "Echo",ExpressionUUID->"ea0d8629-8920-4f1f-ba22-688302b3a718"],
Cell[13185, 363, 130, 3, 24, "Echo",ExpressionUUID->"cb23007e-49b5-451f-901e-039c164cf67e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13364, 372, 247, 4, 28, "Input",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],
Cell[13614, 378, 175, 2, 32, "Output",ExpressionUUID->"014ab079-a96a-4379-85c6-699b1b620902"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13826, 385, 758, 18, 28, "Input",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],
Cell[14587, 405, 74818, 1413, 579, "Output",ExpressionUUID->"9cc6862b-5111-4534-8161-a0794a5441ae"]
}, Open  ]],
Cell[89420, 1821, 589, 12, 28, "Input",ExpressionUUID->"cc9ca28d-6356-4973-bfc6-5451a28fdce5"],
Cell[90012, 1835, 527, 9, 28, "Input",ExpressionUUID->"6fb701e1-2f52-4d7f-9268-c746954bbabf"],
Cell[90542, 1846, 2677, 58, 184, "Input",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],
Cell[CellGroupData[{
Cell[93244, 1908, 288, 7, 28, "Input",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],
Cell[93535, 1917, 20494, 375, 133, "Output",ExpressionUUID->"33282a92-f78e-486d-b23f-1d6b0e7403d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114066, 2297, 633, 11, 28, "Input",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],
Cell[CellGroupData[{
Cell[114724, 2312, 279, 8, 31, "Echo",ExpressionUUID->"9663142e-a94d-4a85-939a-70cad1f04a17"],
Cell[115006, 2322, 247, 6, 31, "Echo",ExpressionUUID->"0cc07b67-eda3-479e-8770-3a724792467e"],
Cell[115256, 2330, 275, 8, 31, "Echo",ExpressionUUID->"cb7c544a-229d-455f-85b6-be8098d25811"],
Cell[115534, 2340, 251, 6, 31, "Echo",ExpressionUUID->"69897d03-e35d-4538-93f0-bb59179f7252"],
Cell[115788, 2348, 268, 7, 31, "Echo",ExpressionUUID->"90a9b532-95e2-4b43-b47c-f68978e9c78f"],
Cell[116059, 2357, 266, 7, 31, "Echo",ExpressionUUID->"cdb999bd-73a1-4929-8b30-8ea852273332"],
Cell[116328, 2366, 262, 7, 31, "Echo",ExpressionUUID->"76d4e7a2-c3ce-4496-88fb-ae260411839d"],
Cell[116593, 2375, 252, 6, 31, "Echo",ExpressionUUID->"fd8d9ccf-8aaa-4716-bc29-8c5a74e33633"],
Cell[116848, 2383, 278, 8, 31, "Echo",ExpressionUUID->"e7429579-4086-4430-ab31-495e3c4555ec"],
Cell[117129, 2393, 280, 8, 31, "Echo",ExpressionUUID->"62909f2e-2ced-4aab-b46d-33dccf1c6054"],
Cell[117412, 2403, 259, 7, 31, "Echo",ExpressionUUID->"4619b110-a510-4232-a194-e2c8489d5639"],
Cell[117674, 2412, 259, 7, 31, "Echo",ExpressionUUID->"72b2d9ef-5a76-4198-827e-74f592c02044"],
Cell[117936, 2421, 264, 7, 31, "Echo",ExpressionUUID->"89f86e81-819b-4f52-b018-71c6d3f3cc8c"],
Cell[118203, 2430, 250, 6, 31, "Echo",ExpressionUUID->"44dd8ffd-3414-49dd-8e4e-5925990bce30"],
Cell[118456, 2438, 271, 8, 31, "Echo",ExpressionUUID->"02478110-d159-4658-85bb-d1ab91bbd94c"],
Cell[118730, 2448, 266, 7, 31, "Echo",ExpressionUUID->"7d967f2d-525d-46f0-b803-1bd41a291330"],
Cell[118999, 2457, 254, 6, 31, "Echo",ExpressionUUID->"93e17e64-d283-4b1b-b028-0c41197ec0e9"],
Cell[119256, 2465, 264, 7, 31, "Echo",ExpressionUUID->"459a2010-a4be-4cdf-a8b9-dacab38c6d8b"],
Cell[119523, 2474, 262, 7, 31, "Echo",ExpressionUUID->"95f5551b-7647-43c1-a5c0-debe1f078fde"],
Cell[119788, 2483, 258, 7, 31, "Echo",ExpressionUUID->"31c8d604-20de-45ed-970f-cd7e93ccba5e"],
Cell[120049, 2492, 261, 7, 31, "Echo",ExpressionUUID->"5bcc4f82-089c-436e-b072-050db5f0f554"],
Cell[120313, 2501, 262, 7, 31, "Echo",ExpressionUUID->"8645c72a-4ef2-42af-aa78-ffb54ad5cb21"],
Cell[120578, 2510, 253, 6, 31, "Echo",ExpressionUUID->"c68ecdef-f194-4f7e-8aa9-3da101c74376"],
Cell[120834, 2518, 259, 7, 31, "Echo",ExpressionUUID->"2799c43d-92b2-4de3-b902-2fa66d5cf35b"],
Cell[121096, 2527, 247, 6, 31, "Echo",ExpressionUUID->"4a85cac0-8b55-4afd-8dbd-8f140090730d"],
Cell[121346, 2535, 248, 6, 31, "Echo",ExpressionUUID->"db7e3603-c85c-4b4a-9b9a-5be576bd9ceb"],
Cell[121597, 2543, 265, 7, 31, "Echo",ExpressionUUID->"6a4a66fa-c82a-4450-879b-844c4f905bf0"],
Cell[121865, 2552, 254, 6, 31, "Echo",ExpressionUUID->"8b68ebe9-d281-4851-a222-3b70425b3565"],
Cell[122122, 2560, 260, 7, 31, "Echo",ExpressionUUID->"3329e5f1-e1ef-41f0-beb7-8f9241b89ebd"],
Cell[122385, 2569, 257, 7, 31, "Echo",ExpressionUUID->"97ac93d4-ed37-4de3-ab22-c610f0d18f0c"],
Cell[122645, 2578, 285, 8, 31, "Echo",ExpressionUUID->"a0cf9b03-2c94-4f8f-b224-5b088bd3351f"],
Cell[122933, 2588, 266, 7, 31, "Echo",ExpressionUUID->"f6c7ad36-69f7-4ac4-bc2b-429948366da7"],
Cell[123202, 2597, 266, 7, 31, "Echo",ExpressionUUID->"d491fe1a-f00a-423c-959c-56b5f22dbd33"],
Cell[123471, 2606, 273, 8, 31, "Echo",ExpressionUUID->"6afc4ea1-8809-432c-b9fb-463714f8064a"],
Cell[123747, 2616, 254, 6, 31, "Echo",ExpressionUUID->"ff533e1e-ae19-47ae-838b-61184cd9b825"],
Cell[124004, 2624, 271, 8, 31, "Echo",ExpressionUUID->"f13a6cdc-90f3-42b4-a19e-dcaafa83cac2"],
Cell[124278, 2634, 264, 7, 31, "Echo",ExpressionUUID->"fc0ab652-3d47-42f7-a55a-51ad3f836b52"],
Cell[124545, 2643, 259, 6, 31, "Echo",ExpressionUUID->"9bed6e83-04f4-4abb-aebc-77ee33836f5b"],
Cell[124807, 2651, 286, 8, 31, "Echo",ExpressionUUID->"62d55976-ca9f-4cd6-a0a5-38623170ea87"],
Cell[125096, 2661, 252, 6, 31, "Echo",ExpressionUUID->"89361066-d53d-4e86-b240-a3187a1e85f8"],
Cell[125351, 2669, 246, 5, 31, "Echo",ExpressionUUID->"e8124e72-ffcc-4d74-8f76-add1baf7c844"],
Cell[125600, 2676, 273, 8, 31, "Echo",ExpressionUUID->"3eeb4453-a118-4bf4-af99-b62c142b5788"],
Cell[125876, 2686, 251, 6, 31, "Echo",ExpressionUUID->"1a78b127-35d3-4582-a5e6-ca6fbb1430bc"],
Cell[126130, 2694, 285, 8, 31, "Echo",ExpressionUUID->"9e38c2d0-6f9f-4ca3-95d5-699cb2168aae"],
Cell[126418, 2704, 260, 7, 31, "Echo",ExpressionUUID->"bda2d02f-ac7a-43b4-adce-bf081af1f327"],
Cell[126681, 2713, 270, 7, 31, "Echo",ExpressionUUID->"ea1fc6bf-bdc8-49fb-bc3d-52a63f0b2693"],
Cell[126954, 2722, 251, 6, 31, "Echo",ExpressionUUID->"8f0246c6-b990-4a68-b4ff-926f3852a7c6"],
Cell[127208, 2730, 277, 8, 31, "Echo",ExpressionUUID->"639be5a7-9db8-4a1b-bbde-e0f2c7f4e348"],
Cell[127488, 2740, 244, 6, 31, "Echo",ExpressionUUID->"17bc74b7-2587-4555-8769-3884c97642d5"],
Cell[127735, 2748, 270, 7, 31, "Echo",ExpressionUUID->"a54d1666-b411-4c56-ba0e-d62e97271f62"],
Cell[128008, 2757, 264, 7, 31, "Echo",ExpressionUUID->"9005d7bc-db8f-4815-afc0-4cbbc4d9eb3f"],
Cell[128275, 2766, 260, 7, 31, "Echo",ExpressionUUID->"7bb227b8-f2bc-4a3d-85d6-7863f6d3a824"],
Cell[128538, 2775, 253, 6, 31, "Echo",ExpressionUUID->"0baad619-0df0-4e32-a3b2-8377a4858ea7"],
Cell[128794, 2783, 247, 5, 31, "Echo",ExpressionUUID->"33159400-961a-4f55-a67c-d3f937c9cb8f"],
Cell[129044, 2790, 275, 8, 31, "Echo",ExpressionUUID->"ddafa687-c869-4091-bf2f-509b9e0aadf8"],
Cell[129322, 2800, 259, 7, 31, "Echo",ExpressionUUID->"4ed1f291-14e9-46b0-8bb5-e6636235daaf"],
Cell[129584, 2809, 263, 7, 31, "Echo",ExpressionUUID->"5a211cb6-46f3-411c-a4f8-1b9938b89bdb"],
Cell[129850, 2818, 270, 7, 31, "Echo",ExpressionUUID->"826341f6-3b1e-4dab-bb17-96dbc13d4c94"],
Cell[130123, 2827, 263, 7, 31, "Echo",ExpressionUUID->"de0d274e-3908-4508-a5b1-0ecda2e56d42"],
Cell[130389, 2836, 280, 8, 31, "Echo",ExpressionUUID->"2cdae43e-906f-46e5-87f1-f006d5f71f65"],
Cell[130672, 2846, 251, 6, 31, "Echo",ExpressionUUID->"f0118631-2f6b-4a3a-8da4-4cb7aaabcefb"],
Cell[130926, 2854, 253, 6, 31, "Echo",ExpressionUUID->"4570905c-cd8e-42bd-8e53-f455ce1fab17"],
Cell[131182, 2862, 268, 7, 31, "Echo",ExpressionUUID->"d116807f-412b-4f1c-be09-7581bdc4d4af"],
Cell[131453, 2871, 280, 8, 31, "Echo",ExpressionUUID->"51396a6a-1fab-4ca9-8797-91a93c44c3d5"],
Cell[131736, 2881, 262, 7, 31, "Echo",ExpressionUUID->"1279947f-b95f-4ef0-bfc6-a749d746ae63"],
Cell[132001, 2890, 246, 6, 31, "Echo",ExpressionUUID->"f80ee3e6-7f55-4f38-9e0f-d1e69f21d32c"],
Cell[132250, 2898, 264, 7, 31, "Echo",ExpressionUUID->"3bfafe9a-31c5-4f30-a54f-3a046dfdd99b"],
Cell[132517, 2907, 249, 6, 31, "Echo",ExpressionUUID->"388754db-6a2b-47b6-b3df-4ba6d6b3bfab"],
Cell[132769, 2915, 250, 6, 31, "Echo",ExpressionUUID->"2a1ca708-8340-45f9-8281-1183733c7005"],
Cell[133022, 2923, 253, 6, 31, "Echo",ExpressionUUID->"a511816a-294c-487d-bfe6-9c379e39cd49"],
Cell[133278, 2931, 248, 6, 31, "Echo",ExpressionUUID->"8e2d71fa-1549-4edb-aa57-59eb8f805c7e"],
Cell[133529, 2939, 252, 6, 31, "Echo",ExpressionUUID->"a9a7e86d-3e6c-468c-8847-e757750a2243"],
Cell[133784, 2947, 257, 7, 31, "Echo",ExpressionUUID->"a2bcb6b6-ae52-4aab-8662-23116a7984e3"],
Cell[134044, 2956, 267, 7, 31, "Echo",ExpressionUUID->"5817977c-4492-42f8-abe7-a08b3885c675"],
Cell[134314, 2965, 263, 7, 31, "Echo",ExpressionUUID->"a4aede4e-c8db-494f-a7bd-09b84bcd7ce2"],
Cell[134580, 2974, 264, 7, 31, "Echo",ExpressionUUID->"056f35a7-9de8-4ca7-b8b1-f07009d1f263"],
Cell[134847, 2983, 261, 7, 31, "Echo",ExpressionUUID->"2dc34d82-747a-444f-b186-46be265218e3"],
Cell[135111, 2992, 259, 7, 31, "Echo",ExpressionUUID->"9363bfc8-6cc6-4f9c-b107-dab72f51b533"],
Cell[135373, 3001, 274, 8, 31, "Echo",ExpressionUUID->"dc86c6e2-3c52-450d-b02f-fda2857b20b7"],
Cell[135650, 3011, 296, 8, 31, "Echo",ExpressionUUID->"46e6d969-6732-40c2-ba06-b5459abb380a"],
Cell[135949, 3021, 248, 6, 31, "Echo",ExpressionUUID->"5d13b1ce-6dbd-4962-9be2-d3b8e3bce5af"],
Cell[136200, 3029, 257, 7, 31, "Echo",ExpressionUUID->"ceed77f9-c85e-4c08-bea1-1ec903bd797d"],
Cell[136460, 3038, 253, 6, 31, "Echo",ExpressionUUID->"d8a6a69c-a105-4b53-be32-d820f1a3ba06"],
Cell[136716, 3046, 272, 8, 31, "Echo",ExpressionUUID->"dabca680-90d7-42d7-8c8c-71ca0b9eee99"],
Cell[136991, 3056, 262, 7, 31, "Echo",ExpressionUUID->"2aa069cf-5180-4297-9092-95e08856abdb"],
Cell[137256, 3065, 266, 7, 31, "Echo",ExpressionUUID->"6e45dc65-93ec-46e2-9e49-6332226bb382"],
Cell[137525, 3074, 252, 6, 31, "Echo",ExpressionUUID->"0f346535-c350-4a99-8cb9-e3d8682e4a34"],
Cell[137780, 3082, 251, 6, 31, "Echo",ExpressionUUID->"6f239e1d-5948-405b-91af-d08f1a664ae5"],
Cell[138034, 3090, 254, 6, 31, "Echo",ExpressionUUID->"aa76f61a-18a0-4c93-b9a6-e36f4eb6f40b"],
Cell[138291, 3098, 263, 7, 31, "Echo",ExpressionUUID->"5f5b15c5-8822-4051-93e9-f243b01159cf"],
Cell[138557, 3107, 277, 8, 31, "Echo",ExpressionUUID->"2a8d6fbb-62fb-4385-b892-6551af2afdb5"],
Cell[138837, 3117, 258, 7, 31, "Echo",ExpressionUUID->"e8db6db3-547e-4c30-b4ff-9e685768279d"],
Cell[139098, 3126, 270, 7, 31, "Echo",ExpressionUUID->"da9a62a2-c4ba-4359-b0a1-6c6d699c9c1d"],
Cell[139371, 3135, 242, 6, 31, "Echo",ExpressionUUID->"e1cb9264-1787-4be9-b1d7-a3b578bf46ad"],
Cell[139616, 3143, 266, 7, 31, "Echo",ExpressionUUID->"8f02cc3b-db6c-4c84-a272-f91b359f6ff1"],
Cell[139885, 3152, 266, 7, 31, "Echo",ExpressionUUID->"ec9d36f0-dccf-4135-bbbf-27ad412a1873"],
Cell[140154, 3161, 262, 7, 31, "Echo",ExpressionUUID->"c9762611-0053-4afe-b748-28bf2f700f3c"],
Cell[140419, 3170, 267, 7, 31, "Echo",ExpressionUUID->"caf98c4c-b0f8-4568-92e0-7938636dbcd1"],
Cell[140689, 3179, 259, 7, 31, "Echo",ExpressionUUID->"39600542-bf4e-4fa6-a5d3-f36fe37192ac"],
Cell[140951, 3188, 283, 8, 31, "Echo",ExpressionUUID->"9174f0a4-4063-458c-9634-14cf64c3ebfc"],
Cell[141237, 3198, 263, 6, 31, "Echo",ExpressionUUID->"37edaa54-f52d-4ea7-b7ff-a68991dd9554"],
Cell[141503, 3206, 253, 6, 31, "Echo",ExpressionUUID->"4f1e89d9-c824-4e6e-9466-68c12f5a47b9"],
Cell[141759, 3214, 265, 6, 31, "Echo",ExpressionUUID->"6cece78b-9646-4eef-8a85-1ca8ef0f67de"],
Cell[142027, 3222, 257, 7, 31, "Echo",ExpressionUUID->"2bc91fd1-371f-4bf7-9cdf-d1eff07ce11e"],
Cell[142287, 3231, 265, 7, 31, "Echo",ExpressionUUID->"2cf4e93d-bb8f-4468-9ae1-226d90910d17"],
Cell[142555, 3240, 272, 8, 31, "Echo",ExpressionUUID->"ba11ce3b-af1d-4391-8670-c841369fcd74"],
Cell[142830, 3250, 273, 8, 31, "Echo",ExpressionUUID->"f5407c99-1215-4689-ae3f-76a823f6eab7"],
Cell[143106, 3260, 252, 6, 31, "Echo",ExpressionUUID->"f51eacfa-e3ab-4008-ba74-f1af7ab34523"],
Cell[143361, 3268, 247, 6, 31, "Echo",ExpressionUUID->"4b2342c6-3f85-4414-a413-1f33cbc580bf"],
Cell[143611, 3276, 257, 7, 31, "Echo",ExpressionUUID->"1de729aa-3c44-402c-ba71-dff013476c65"],
Cell[143871, 3285, 263, 7, 31, "Echo",ExpressionUUID->"7d578bbf-f273-4f86-a4cb-7f4df8a2017a"],
Cell[144137, 3294, 264, 7, 31, "Echo",ExpressionUUID->"db339e63-1f59-4055-8937-ecd801272263"],
Cell[144404, 3303, 259, 7, 31, "Echo",ExpressionUUID->"f677b514-0621-451b-8088-5d43887f6210"],
Cell[144666, 3312, 258, 7, 31, "Echo",ExpressionUUID->"d637af2b-9fcc-46fc-98a7-2b7e6bf206b1"],
Cell[144927, 3321, 254, 6, 31, "Echo",ExpressionUUID->"ae75124d-e479-45b7-9408-ddcdecc36947"],
Cell[145184, 3329, 258, 7, 31, "Echo",ExpressionUUID->"7107e2a5-5be0-46db-a321-48fd15a3587f"],
Cell[145445, 3338, 257, 7, 31, "Echo",ExpressionUUID->"0e7bfdfa-75cb-4336-85af-5c09aec6fea4"],
Cell[145705, 3347, 260, 7, 31, "Echo",ExpressionUUID->"273568f6-dcc2-44d8-a8e6-98316ef71396"],
Cell[145968, 3356, 253, 6, 31, "Echo",ExpressionUUID->"c0291d74-fc1c-4b4c-98d5-d4f5b8a72255"],
Cell[146224, 3364, 258, 7, 31, "Echo",ExpressionUUID->"4fa53a84-ef2b-4cf4-91cd-74b76a5db6d2"],
Cell[146485, 3373, 258, 6, 31, "Echo",ExpressionUUID->"ed18febe-6de8-414d-bbc8-09e0c566817b"],
Cell[146746, 3381, 265, 7, 31, "Echo",ExpressionUUID->"a11c8eac-a990-4d44-aafd-29b3ee83228e"],
Cell[147014, 3390, 265, 7, 31, "Echo",ExpressionUUID->"f2a63569-b33a-466d-adbf-3439db0c699c"],
Cell[147282, 3399, 278, 8, 31, "Echo",ExpressionUUID->"ee053eee-8a35-4e87-a8bd-692e0cb9e1f3"],
Cell[147563, 3409, 270, 7, 31, "Echo",ExpressionUUID->"fd2c41d5-4972-421a-85ba-ae389f354dd5"],
Cell[147836, 3418, 260, 7, 31, "Echo",ExpressionUUID->"cf5c42a5-3b9a-49b8-b78c-f6c0d3be933c"],
Cell[148099, 3427, 273, 8, 31, "Echo",ExpressionUUID->"742cbbc9-5496-4063-b68b-b4a718699185"],
Cell[148375, 3437, 265, 7, 31, "Echo",ExpressionUUID->"a16afa34-12a9-4311-9558-cce01adcd73c"],
Cell[148643, 3446, 260, 7, 31, "Echo",ExpressionUUID->"35903cb9-e4ac-4f37-98e7-41c129e42972"],
Cell[148906, 3455, 247, 5, 31, "Echo",ExpressionUUID->"fb6a559f-3682-447c-b66a-c0b92ccf6b6c"],
Cell[149156, 3462, 262, 7, 31, "Echo",ExpressionUUID->"696641a2-dc28-4b02-a000-20e8caa2968d"],
Cell[149421, 3471, 250, 6, 31, "Echo",ExpressionUUID->"709ff0d8-2de7-4dcf-b7bb-4c0804839946"],
Cell[149674, 3479, 251, 6, 31, "Echo",ExpressionUUID->"cd92e597-812d-4b05-bf11-136131718611"],
Cell[149928, 3487, 264, 7, 31, "Echo",ExpressionUUID->"9b408c27-775d-4d6f-9ad0-d8eb95e51123"],
Cell[150195, 3496, 258, 7, 31, "Echo",ExpressionUUID->"ff34c57e-6b11-4657-823b-8ccda882e8e4"],
Cell[150456, 3505, 276, 8, 31, "Echo",ExpressionUUID->"6f1f03dd-2924-4c1a-8b96-34fc635d4995"],
Cell[150735, 3515, 251, 6, 31, "Echo",ExpressionUUID->"51db4ad5-8b3d-4093-adee-3c9244b1ece2"],
Cell[150989, 3523, 254, 6, 31, "Echo",ExpressionUUID->"9fd87bcc-44b1-4f2f-8eb7-ce84fa75d6f1"],
Cell[151246, 3531, 250, 6, 31, "Echo",ExpressionUUID->"c1000a18-0a36-4388-a8d5-861fd17e77ee"],
Cell[151499, 3539, 252, 6, 31, "Echo",ExpressionUUID->"7ac73557-f80c-4aaf-9c68-bbaff159e8d5"],
Cell[151754, 3547, 259, 7, 31, "Echo",ExpressionUUID->"4495f73f-640e-4c66-bb82-28d5dac2df36"],
Cell[152016, 3556, 264, 7, 31, "Echo",ExpressionUUID->"19c775c7-bf9a-436d-a349-a5a9c27aef43"],
Cell[152283, 3565, 257, 7, 31, "Echo",ExpressionUUID->"cc94abe1-a97f-4d66-9a66-15aeee88fee7"],
Cell[152543, 3574, 261, 7, 31, "Echo",ExpressionUUID->"3b8f22c7-a187-41bb-8a54-f3445626225e"],
Cell[152807, 3583, 265, 7, 31, "Echo",ExpressionUUID->"bae44705-a668-4466-a425-03bfd777c03c"],
Cell[153075, 3592, 252, 6, 31, "Echo",ExpressionUUID->"986ced73-6cb7-4f34-99c6-3795d6fd2b1d"],
Cell[153330, 3600, 254, 6, 31, "Echo",ExpressionUUID->"4df065c5-5ff8-4d23-b3ca-fa5bd75944b3"],
Cell[153587, 3608, 252, 6, 31, "Echo",ExpressionUUID->"19e36e8a-a60a-4773-b990-dc0642e934a6"],
Cell[153842, 3616, 254, 6, 31, "Echo",ExpressionUUID->"0e4878a2-6a44-4300-85d9-81daaee681d8"],
Cell[154099, 3624, 260, 7, 31, "Echo",ExpressionUUID->"a23911f7-afaf-4c9c-a081-28532890af4c"],
Cell[154362, 3633, 254, 6, 31, "Echo",ExpressionUUID->"fc0eeab5-2b0b-4375-92e6-7e3d4f8880b9"],
Cell[154619, 3641, 265, 7, 31, "Echo",ExpressionUUID->"02b9ce21-d9f1-4876-80f9-10d7e4b29fca"],
Cell[154887, 3650, 245, 6, 31, "Echo",ExpressionUUID->"f96ea7a1-82f8-466a-842d-162014533c14"],
Cell[155135, 3658, 268, 7, 31, "Echo",ExpressionUUID->"ac2792b1-b557-45f4-bef9-2d6d68e6a5ff"],
Cell[155406, 3667, 260, 7, 31, "Echo",ExpressionUUID->"50e2f2c6-f4d7-4ae6-a255-ac6963fb802f"],
Cell[155669, 3676, 247, 6, 31, "Echo",ExpressionUUID->"85c97091-40a2-4c7e-a865-89c60cee7105"],
Cell[155919, 3684, 260, 7, 31, "Echo",ExpressionUUID->"271a163d-fec9-42d3-abe2-b80f7c57fa0c"],
Cell[156182, 3693, 267, 7, 31, "Echo",ExpressionUUID->"9fba4b6f-758e-4c61-aa3b-62a4e2d4e8b3"],
Cell[156452, 3702, 263, 7, 31, "Echo",ExpressionUUID->"1f01b3e7-7ab5-4696-bdb6-5d0f085f04a9"],
Cell[156718, 3711, 257, 7, 31, "Echo",ExpressionUUID->"869a30e8-4c4b-4523-a550-5109f405375a"],
Cell[156978, 3720, 260, 7, 31, "Echo",ExpressionUUID->"7436849c-5fcc-4314-a7d3-f7c02de12804"],
Cell[157241, 3729, 260, 7, 31, "Echo",ExpressionUUID->"b57572d4-c10d-4f2d-a375-9434040bea83"],
Cell[157504, 3738, 269, 7, 31, "Echo",ExpressionUUID->"e516e6f7-aef4-4f3d-b627-1f8eaec607ec"],
Cell[157776, 3747, 254, 6, 31, "Echo",ExpressionUUID->"96d3788a-5556-4baa-be82-f617f3eb7b54"],
Cell[158033, 3755, 268, 7, 31, "Echo",ExpressionUUID->"7679c95d-56c2-45b9-897d-59f00e3da164"],
Cell[158304, 3764, 254, 6, 31, "Echo",ExpressionUUID->"2d90034a-29aa-466c-8812-d31de1a74077"],
Cell[158561, 3772, 251, 6, 31, "Echo",ExpressionUUID->"29a72045-7a45-4041-9334-56b525fe0047"],
Cell[158815, 3780, 259, 7, 31, "Echo",ExpressionUUID->"4a39edc2-ca2f-4936-83fe-4e598843bbe8"],
Cell[159077, 3789, 249, 6, 31, "Echo",ExpressionUUID->"9ff6168b-0b86-4a50-83b1-627affb9ab54"],
Cell[159329, 3797, 264, 7, 31, "Echo",ExpressionUUID->"2154d21f-3351-4ed9-803e-fc7ef0c2857d"],
Cell[159596, 3806, 276, 8, 31, "Echo",ExpressionUUID->"b98629b6-2eb4-4dea-946d-98ba87882add"],
Cell[159875, 3816, 266, 7, 31, "Echo",ExpressionUUID->"ab0b6a0d-8daa-40f5-93ad-6cefb6e0c155"],
Cell[160144, 3825, 251, 6, 31, "Echo",ExpressionUUID->"ee17ce06-c61e-4393-af17-ca185bc1b07a"],
Cell[160398, 3833, 254, 6, 31, "Echo",ExpressionUUID->"63977003-3222-4e11-ba3f-5bf2c50004fc"],
Cell[160655, 3841, 254, 6, 31, "Echo",ExpressionUUID->"38598203-6736-4433-a2b1-44f08ffdda7d"],
Cell[160912, 3849, 254, 6, 31, "Echo",ExpressionUUID->"03c9171d-f743-4126-a75b-204b90284a49"],
Cell[161169, 3857, 278, 8, 31, "Echo",ExpressionUUID->"b52f87cc-3c08-4c75-8ac3-9ea09734e0db"],
Cell[161450, 3867, 257, 7, 31, "Echo",ExpressionUUID->"a136b199-09c5-4a4d-bf75-6bf8a4b7b587"],
Cell[161710, 3876, 264, 7, 31, "Echo",ExpressionUUID->"3f79e63c-08b0-4740-84e0-e6071d2077f6"],
Cell[161977, 3885, 259, 7, 31, "Echo",ExpressionUUID->"c3bfa944-596e-4316-8d9b-798717f32fe7"],
Cell[162239, 3894, 253, 6, 31, "Echo",ExpressionUUID->"1b3b0ed9-4571-4c66-a553-f09fd4a9eb52"],
Cell[162495, 3902, 257, 7, 31, "Echo",ExpressionUUID->"af8d077c-d4d6-4d8e-93f6-4b51319b4dbf"],
Cell[162755, 3911, 249, 5, 31, "Echo",ExpressionUUID->"033f7728-f5c0-4bf7-a2ee-d723839a2847"],
Cell[163007, 3918, 259, 7, 31, "Echo",ExpressionUUID->"2a4c8162-9558-47d2-becd-4a09798aebf4"],
Cell[163269, 3927, 277, 8, 31, "Echo",ExpressionUUID->"ad740628-5b06-4b03-89a6-71d95dbc0dc4"],
Cell[163549, 3937, 258, 7, 31, "Echo",ExpressionUUID->"b5c90839-48ee-42fc-88db-a1ed62914ab8"],
Cell[163810, 3946, 252, 6, 31, "Echo",ExpressionUUID->"b86a8865-813d-46e3-ac83-959b05520c38"],
Cell[164065, 3954, 281, 7, 31, "Echo",ExpressionUUID->"50380846-2d3e-4efd-8b48-d5338bb71b4b"],
Cell[164349, 3963, 259, 7, 31, "Echo",ExpressionUUID->"005b8702-4b4c-4e72-b0f5-cfacaf949fdb"],
Cell[164611, 3972, 252, 6, 31, "Echo",ExpressionUUID->"77be10f0-642d-4f79-8945-af34ba037238"],
Cell[164866, 3980, 259, 7, 31, "Echo",ExpressionUUID->"717a0dda-8459-4475-9fff-1c79d77c395b"],
Cell[165128, 3989, 264, 7, 31, "Echo",ExpressionUUID->"305e5455-1fa1-4bbd-bf90-f9dace041172"],
Cell[165395, 3998, 252, 6, 31, "Echo",ExpressionUUID->"5199ad9c-dd78-46c3-ad6b-f9b249abf462"],
Cell[165650, 4006, 270, 7, 31, "Echo",ExpressionUUID->"21b6a4f6-0d50-469f-91ff-8df9f8af3d4a"],
Cell[165923, 4015, 263, 7, 31, "Echo",ExpressionUUID->"d50d71bb-467d-41b5-8958-5ceabeb2d496"],
Cell[166189, 4024, 261, 7, 31, "Echo",ExpressionUUID->"e5869f9b-d5da-49fe-a0a8-863e593114cb"],
Cell[166453, 4033, 267, 7, 31, "Echo",ExpressionUUID->"a4ffd02a-740f-4e5f-afac-278f4a93f0b8"],
Cell[166723, 4042, 264, 7, 31, "Echo",ExpressionUUID->"91c5f544-4c2e-4ff2-b2b3-012a17d9f24d"],
Cell[166990, 4051, 267, 7, 31, "Echo",ExpressionUUID->"2ef85cfd-91df-4241-9f61-d3ca6d094c61"],
Cell[167260, 4060, 274, 8, 31, "Echo",ExpressionUUID->"91a59bc5-9007-494a-847d-e43fe45e360e"],
Cell[167537, 4070, 260, 7, 31, "Echo",ExpressionUUID->"9a9cf70e-cf96-4774-a2c9-72d76f646697"],
Cell[167800, 4079, 274, 8, 31, "Echo",ExpressionUUID->"963d402b-3b90-4db9-a24a-727f9dda3a0b"],
Cell[168077, 4089, 268, 7, 31, "Echo",ExpressionUUID->"6bb52cbd-bfa3-4376-aed6-357a0ce18585"],
Cell[168348, 4098, 266, 7, 31, "Echo",ExpressionUUID->"f62fde33-b38d-47f3-ae10-71074f439814"],
Cell[168617, 4107, 259, 7, 31, "Echo",ExpressionUUID->"c81f41de-2631-47a2-a613-fc92fd4fcdcd"],
Cell[168879, 4116, 259, 7, 31, "Echo",ExpressionUUID->"c2bb2547-9e27-4bf2-a37e-bb0a716fac36"],
Cell[169141, 4125, 276, 8, 31, "Echo",ExpressionUUID->"f9a039f5-5a48-4ba3-b958-4d43ced9f4be"],
Cell[169420, 4135, 274, 8, 31, "Echo",ExpressionUUID->"1c769004-0f97-4278-8a37-d142c423973d"],
Cell[169697, 4145, 264, 7, 31, "Echo",ExpressionUUID->"386fd8a6-9b0e-475c-a014-b15f761652e9"],
Cell[169964, 4154, 262, 7, 31, "Echo",ExpressionUUID->"c0204068-f737-42cd-86bb-e01665c92b04"],
Cell[170229, 4163, 264, 7, 31, "Echo",ExpressionUUID->"84c2a9f8-8c26-47bd-944f-cb3ead7412e5"],
Cell[170496, 4172, 267, 7, 31, "Echo",ExpressionUUID->"28b2d5eb-6db0-4623-a5f8-5f1e24d1c303"],
Cell[170766, 4181, 261, 7, 31, "Echo",ExpressionUUID->"0755d11d-0474-4915-a5ba-0a4b0f583b2d"],
Cell[171030, 4190, 272, 8, 31, "Echo",ExpressionUUID->"92b9fbdd-c95a-40a3-adcd-b3976e5d2602"],
Cell[171305, 4200, 273, 8, 31, "Echo",ExpressionUUID->"3f251c3a-fd59-4187-b3e8-93d072f8d29d"],
Cell[171581, 4210, 268, 7, 31, "Echo",ExpressionUUID->"2f0cfd44-e14a-483d-a369-2219734bcd06"],
Cell[171852, 4219, 264, 7, 31, "Echo",ExpressionUUID->"c3531421-0865-4d45-803c-5ee80198c671"],
Cell[172119, 4228, 268, 7, 31, "Echo",ExpressionUUID->"d4bc8247-754e-4dde-992d-a98a588b1d74"],
Cell[172390, 4237, 265, 7, 31, "Echo",ExpressionUUID->"ee0fbd8b-97be-4f6d-8447-36c1fc3e0012"],
Cell[172658, 4246, 262, 7, 31, "Echo",ExpressionUUID->"8c5b870b-71f0-4a5f-b9c0-595aa1d7ccc2"],
Cell[172923, 4255, 268, 7, 31, "Echo",ExpressionUUID->"24656c73-b02f-4d0b-8ec8-1910c05b64d3"],
Cell[173194, 4264, 268, 7, 31, "Echo",ExpressionUUID->"ab044997-378d-44dc-b173-88ee1f52364e"],
Cell[173465, 4273, 270, 7, 31, "Echo",ExpressionUUID->"1aab746c-fc2a-4ffa-a0ff-aca3a14b272c"],
Cell[173738, 4282, 261, 7, 31, "Echo",ExpressionUUID->"4af3edb2-ce12-4f01-9331-90cea16e4429"],
Cell[174002, 4291, 264, 7, 31, "Echo",ExpressionUUID->"5f9ae737-500a-49f6-aef3-4cc1502f9579"],
Cell[174269, 4300, 280, 8, 31, "Echo",ExpressionUUID->"c6e699cd-1791-441a-aaeb-0d47b07d3371"],
Cell[174552, 4310, 268, 7, 31, "Echo",ExpressionUUID->"e592a86e-8e0b-4c7e-af57-3b6c06ae4960"],
Cell[174823, 4319, 253, 6, 31, "Echo",ExpressionUUID->"419e0024-ff51-422d-a566-72d95902ec1b"],
Cell[175079, 4327, 273, 8, 31, "Echo",ExpressionUUID->"772ddf30-274f-4433-ab26-2d4e4f7919a6"],
Cell[175355, 4337, 264, 7, 31, "Echo",ExpressionUUID->"93c00df6-30d7-40fd-bf8f-de3c475117e7"],
Cell[175622, 4346, 271, 8, 31, "Echo",ExpressionUUID->"075ed765-2b81-46ef-af28-3969f21b3949"],
Cell[175896, 4356, 260, 7, 31, "Echo",ExpressionUUID->"b6b7e91e-dd86-4384-82db-8ba9c5e33a36"],
Cell[176159, 4365, 273, 8, 31, "Echo",ExpressionUUID->"6f7ad1ea-3792-47ca-8d10-10a67c2e6d82"],
Cell[176435, 4375, 247, 6, 31, "Echo",ExpressionUUID->"26487285-5786-4333-a9eb-0ba3ddcb7ef9"],
Cell[176685, 4383, 251, 6, 31, "Echo",ExpressionUUID->"ee4d264f-25ad-4e33-8ad5-df262ae5abbe"],
Cell[176939, 4391, 262, 7, 31, "Echo",ExpressionUUID->"7313dcab-9700-4768-b2ae-568d6d413ae4"],
Cell[177204, 4400, 265, 7, 31, "Echo",ExpressionUUID->"4da0d19a-257b-475f-8fc0-9fa73670f89b"],
Cell[177472, 4409, 261, 6, 31, "Echo",ExpressionUUID->"a77e3b00-1211-4d2d-95bd-b41afd869cf6"],
Cell[177736, 4417, 262, 7, 31, "Echo",ExpressionUUID->"41ddda9e-c47c-46a2-b956-91faed144930"],
Cell[178001, 4426, 260, 7, 31, "Echo",ExpressionUUID->"12ff99ca-548a-4c8f-975d-9ef9d5bfc84d"],
Cell[178264, 4435, 263, 7, 31, "Echo",ExpressionUUID->"f10eee43-70ac-44b9-95c7-5da32d51e6e7"],
Cell[178530, 4444, 262, 7, 31, "Echo",ExpressionUUID->"ec441f2f-19e4-4f69-bb86-f5f5ef495423"],
Cell[178795, 4453, 262, 7, 31, "Echo",ExpressionUUID->"7faa3b9d-5627-47c9-ac5f-e65028e3b635"],
Cell[179060, 4462, 267, 7, 31, "Echo",ExpressionUUID->"3c745e5d-530a-4c78-b56a-62330351cc1a"],
Cell[179330, 4471, 259, 7, 31, "Echo",ExpressionUUID->"c83c7d10-bbe2-4c15-8e87-313c3bd1b47f"],
Cell[179592, 4480, 264, 7, 31, "Echo",ExpressionUUID->"324537b3-339a-4b17-9cd5-8c2a2129c850"],
Cell[179859, 4489, 266, 7, 31, "Echo",ExpressionUUID->"a5ac301c-3467-43e6-8047-6e479a3f8fe0"],
Cell[180128, 4498, 257, 7, 31, "Echo",ExpressionUUID->"edd9a6a9-98fc-45a3-a199-25cf87460aa1"],
Cell[180388, 4507, 250, 6, 31, "Echo",ExpressionUUID->"40872fb4-fc52-43aa-99c8-02cfb1a43f85"],
Cell[180641, 4515, 268, 7, 31, "Echo",ExpressionUUID->"2afc3ade-ffaa-4d05-9177-49b127ca8ac0"],
Cell[180912, 4524, 278, 8, 31, "Echo",ExpressionUUID->"daf3e5ff-a338-4e99-9a77-1d53f1410fa3"],
Cell[181193, 4534, 262, 7, 31, "Echo",ExpressionUUID->"90daa9b1-b565-4521-af1c-d70b7604b5bd"],
Cell[181458, 4543, 277, 8, 31, "Echo",ExpressionUUID->"aeb76cbf-ddfc-4d21-845d-30629847c860"],
Cell[181738, 4553, 265, 6, 31, "Echo",ExpressionUUID->"e70409df-d795-44c7-836e-02b4a95886c8"],
Cell[182006, 4561, 248, 5, 31, "Echo",ExpressionUUID->"07f9c390-473b-4bee-a16b-c35b25ad8756"],
Cell[182257, 4568, 253, 6, 31, "Echo",ExpressionUUID->"2ad04836-dc0b-46ed-bc1f-60dc488a2b7e"],
Cell[182513, 4576, 252, 6, 31, "Echo",ExpressionUUID->"900ff479-8c94-49c7-b07b-d58b9077ebbc"],
Cell[182768, 4584, 266, 7, 31, "Echo",ExpressionUUID->"c6883541-634c-4ada-9a23-fdfe0f49cf9c"],
Cell[183037, 4593, 285, 8, 31, "Echo",ExpressionUUID->"bb26ff7c-dbee-43d3-8fbb-89de2ac82c27"],
Cell[183325, 4603, 268, 7, 31, "Echo",ExpressionUUID->"179e2766-a414-4a9a-946c-39ee18abc2bf"],
Cell[183596, 4612, 301, 8, 31, "Echo",ExpressionUUID->"4fa8f5f5-6cf2-4f94-a462-a087612dc314"],
Cell[183900, 4622, 266, 7, 31, "Echo",ExpressionUUID->"68661524-783d-4899-9d42-9c6aa7b98445"],
Cell[184169, 4631, 275, 7, 31, "Echo",ExpressionUUID->"57e1fd07-449d-472c-98eb-e646685ea22b"],
Cell[184447, 4640, 266, 7, 31, "Echo",ExpressionUUID->"4d98fea1-9b00-4626-a394-666ebb80affd"],
Cell[184716, 4649, 282, 8, 31, "Echo",ExpressionUUID->"4d994ab7-ba9d-4d4e-adce-1bf52209f796"],
Cell[185001, 4659, 278, 8, 31, "Echo",ExpressionUUID->"2fdf408d-a135-450c-b855-202e98bf31d5"],
Cell[185282, 4669, 275, 8, 31, "Echo",ExpressionUUID->"74290eb6-eeca-40b5-a39b-b0e30c3b9cde"],
Cell[185560, 4679, 267, 7, 31, "Echo",ExpressionUUID->"a84fd4ae-6424-4beb-a25f-b4b63b41cc99"],
Cell[185830, 4688, 278, 8, 31, "Echo",ExpressionUUID->"3e12a4d8-0951-486b-8e09-f132420bfb5f"],
Cell[186111, 4698, 280, 8, 31, "Echo",ExpressionUUID->"00a50a65-9f2e-488d-a86d-63bf60b1ccfe"],
Cell[186394, 4708, 276, 8, 31, "Echo",ExpressionUUID->"f71e6c8d-eb88-43f2-bf64-3f72e2f4fd26"],
Cell[186673, 4718, 262, 7, 31, "Echo",ExpressionUUID->"dcb1d424-db0b-4b9c-9d8b-2fff3d05b90c"],
Cell[186938, 4727, 262, 7, 31, "Echo",ExpressionUUID->"54951bf7-0706-44b7-810b-bf627302ca05"],
Cell[187203, 4736, 263, 7, 31, "Echo",ExpressionUUID->"e9d9c028-0942-49bf-93ad-6ef9a443383f"],
Cell[187469, 4745, 250, 6, 31, "Echo",ExpressionUUID->"3f4182c4-1a47-4827-9e95-1911715e7925"],
Cell[187722, 4753, 265, 7, 31, "Echo",ExpressionUUID->"d438a09c-12ee-415f-9b57-4f1759a7b660"],
Cell[187990, 4762, 265, 7, 31, "Echo",ExpressionUUID->"f7742ad4-6624-4dc9-b2df-3637a639e3ae"],
Cell[188258, 4771, 269, 7, 31, "Echo",ExpressionUUID->"8a64bc5a-7ba7-4fa4-84cb-55a5872d4ba5"],
Cell[188530, 4780, 268, 7, 31, "Echo",ExpressionUUID->"add1a2fa-65b4-4031-ba2b-00801871c9ef"],
Cell[188801, 4789, 274, 8, 31, "Echo",ExpressionUUID->"8b4db95e-d561-4099-a776-28c9bfcb0db0"],
Cell[189078, 4799, 318, 8, 31, "Echo",ExpressionUUID->"302defd0-f98a-472a-a0ec-9ca59be308c8"],
Cell[189399, 4809, 268, 7, 31, "Echo",ExpressionUUID->"d6978eed-3e5a-4f7f-b3cc-b1189fc2fa8c"],
Cell[189670, 4818, 270, 7, 31, "Echo",ExpressionUUID->"0d82d6f5-f8c5-4289-92e8-4e736495ee1b"],
Cell[189943, 4827, 266, 7, 31, "Echo",ExpressionUUID->"c7538de9-0134-440a-a51a-658d32cca9be"],
Cell[190212, 4836, 263, 7, 31, "Echo",ExpressionUUID->"fefe5230-c209-48cd-af86-cf3f3e5206bd"],
Cell[190478, 4845, 259, 7, 31, "Echo",ExpressionUUID->"41623083-8f73-431d-9607-510a702f02e1"],
Cell[190740, 4854, 282, 8, 31, "Echo",ExpressionUUID->"f90c148b-e17b-4795-8d43-a0dc6df77d48"],
Cell[191025, 4864, 276, 8, 31, "Echo",ExpressionUUID->"6d8d93c2-a03e-48cb-9c69-76350b6e61fa"],
Cell[191304, 4874, 275, 8, 31, "Echo",ExpressionUUID->"15d28d1d-fa9d-453f-b6da-d770c8af35c3"],
Cell[191582, 4884, 257, 7, 31, "Echo",ExpressionUUID->"af60a0bd-f44c-498e-ad78-d60ae195a397"],
Cell[191842, 4893, 272, 8, 31, "Echo",ExpressionUUID->"bf95e17c-5569-4aac-baad-d583bcd9490c"],
Cell[192117, 4903, 278, 8, 31, "Echo",ExpressionUUID->"7e1a38d9-f905-4d4e-a65d-25f2f6c8f1fc"],
Cell[192398, 4913, 286, 8, 31, "Echo",ExpressionUUID->"e59db066-86ff-4e71-8bb7-91300f09ca53"],
Cell[192687, 4923, 278, 8, 31, "Echo",ExpressionUUID->"7ad1f656-79c2-480c-a19c-a95c5f955e83"],
Cell[192968, 4933, 266, 7, 31, "Echo",ExpressionUUID->"b814604a-31bb-43ca-b2a9-fb38985fbda2"],
Cell[193237, 4942, 278, 8, 31, "Echo",ExpressionUUID->"e74dc457-3395-4f77-bbb7-8997a48fd635"],
Cell[193518, 4952, 287, 8, 31, "Echo",ExpressionUUID->"d235b0c9-4da1-48e6-ace1-b6afae7753b9"],
Cell[193808, 4962, 286, 8, 31, "Echo",ExpressionUUID->"d5900974-1f4c-4802-bd19-d61fddd3422b"],
Cell[194097, 4972, 253, 6, 31, "Echo",ExpressionUUID->"e1f18b01-1bc1-4cb8-b19a-01abbb52b332"],
Cell[194353, 4980, 250, 6, 31, "Echo",ExpressionUUID->"8b9ecead-670b-41af-8f7d-6078dad1517c"],
Cell[194606, 4988, 252, 6, 31, "Echo",ExpressionUUID->"7dd695a3-0530-42dd-bf0c-5985c5d1e989"],
Cell[194861, 4996, 296, 8, 31, "Echo",ExpressionUUID->"06368c2b-c62a-493f-bd0c-82098f6ba0b5"],
Cell[195160, 5006, 287, 8, 31, "Echo",ExpressionUUID->"2472037f-d061-4fd7-91f4-ffab3f0bfee4"],
Cell[195450, 5016, 264, 7, 31, "Echo",ExpressionUUID->"68f199ba-c222-4235-9e22-dfae36ae897d"],
Cell[195717, 5025, 262, 7, 31, "Echo",ExpressionUUID->"dc2970c2-2e9e-4c08-aeb4-e15b4d9d22ea"],
Cell[195982, 5034, 248, 6, 31, "Echo",ExpressionUUID->"b914908c-dc28-4277-b5ad-16fe634fd81c"],
Cell[196233, 5042, 254, 6, 31, "Echo",ExpressionUUID->"a40f8164-dfb6-4243-83f3-6ab1e47868ea"],
Cell[196490, 5050, 260, 7, 31, "Echo",ExpressionUUID->"523c1323-c558-4e02-8fed-a802d51a0669"],
Cell[196753, 5059, 277, 8, 31, "Echo",ExpressionUUID->"1c194c05-429e-4259-bbdd-563455edab7f"],
Cell[197033, 5069, 287, 8, 31, "Echo",ExpressionUUID->"80fbf36e-ae71-4bc6-b54d-339f1dafe9c6"],
Cell[197323, 5079, 306, 8, 31, "Echo",ExpressionUUID->"3e1c193a-4087-4189-9081-44ce78b7abce"],
Cell[197632, 5089, 294, 8, 31, "Echo",ExpressionUUID->"000f0581-77c8-4d63-ba65-732ccdc5a9e1"],
Cell[197929, 5099, 287, 8, 31, "Echo",ExpressionUUID->"dff04aaa-f246-4eba-9911-ba96bbee5f73"],
Cell[198219, 5109, 279, 8, 31, "Echo",ExpressionUUID->"050bb867-a235-4e86-ad6b-0926e0089060"],
Cell[198501, 5119, 319, 8, 31, "Echo",ExpressionUUID->"948516b0-bf43-4506-bf94-77a88dbde2ce"],
Cell[198823, 5129, 279, 8, 31, "Echo",ExpressionUUID->"1ad12e32-ff2b-4532-a1c4-8ea5b4bb4d41"],
Cell[199105, 5139, 337, 8, 31, "Echo",ExpressionUUID->"4046f94a-d2dd-42ed-b382-9ecec9c42411"],
Cell[199445, 5149, 339, 8, 31, "Echo",ExpressionUUID->"0452a42f-9891-4e3e-b354-a0afe65736ee"],
Cell[199787, 5159, 249, 6, 31, "Echo",ExpressionUUID->"0d4f1f8d-8151-489a-8dcc-de6f3a1aaab1"],
Cell[200039, 5167, 252, 6, 31, "Echo",ExpressionUUID->"ada11531-5ac5-4b47-a8ec-84220af74cca"],
Cell[200294, 5175, 249, 6, 31, "Echo",ExpressionUUID->"ce804e7f-8748-4d29-af75-63a9f2a5bb31"],
Cell[200546, 5183, 285, 8, 31, "Echo",ExpressionUUID->"eb4d3cae-4692-4793-ad4a-6c80d13ebcce"],
Cell[200834, 5193, 281, 8, 31, "Echo",ExpressionUUID->"3f4ece79-caa8-4d0a-b954-4edb5856d216"],
Cell[201118, 5203, 259, 7, 31, "Echo",ExpressionUUID->"824f7ba2-122f-4662-a584-2b3e266f8b46"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201426, 5216, 311, 6, 28, "Input",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],
Cell[201740, 5224, 5931, 91, 440, "Output",ExpressionUUID->"b39dc22d-8f5e-4848-b590-9479c30b5e50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207708, 5320, 209, 3, 28, "Input",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],
Cell[207920, 5325, 24368, 569, 349, "Output",ExpressionUUID->"053937f4-b386-4531-ab47-551288c17af5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232325, 5899, 390, 8, 28, "Input",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],
Cell[232718, 5909, 244, 3, 32, "Output",ExpressionUUID->"9a873b7c-81d7-4654-a1da-2a67ab400583"]
}, Open  ]],
Cell[232977, 5915, 253, 5, 28, "Input",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],
Cell[233233, 5922, 266, 6, 28, "Input",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],
Cell[233502, 5930, 431, 11, 28, "Input",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],
Cell[233936, 5943, 211, 4, 28, "Input",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],
Cell[234150, 5949, 235, 4, 28, "Input",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],
Cell[234388, 5955, 251, 5, 28, "Input",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],
Cell[234642, 5962, 181, 3, 28, "Input",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
}
]
*)

